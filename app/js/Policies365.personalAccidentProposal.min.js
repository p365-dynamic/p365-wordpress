"use strict";angular.module("buyPersonalAccident",["CoreComponentApp","LocalStorageModule","checklist-model","ngMessages"]).controller("buypersonalAccidentController",["$scope","$rootScope","$timeout","RestAPI","localStorageService","$location","$window","$http","$filter","$interval","$sce",function($scope,$rootScope,$timeout,RestAPI,localStorageService,$location,$window,$http,$filter,$interval,$sce){$scope.paProposalSectionHTML=wp_path+"buy/personalAccident/html/PersonalAccidentProposalSection.html";var applicationLabels=localStorageService.get("applicationLabels");$scope.globalLabel=applicationLabels.globalLabels,$rootScope.loaderContent={businessLine:"8",header:"Personal Accident  Insurance",desc:$sce.trustAsHtml($scope.globalLabel.applicationLabels.life.proverbBuyProduct)},$rootScope.title="Buy Personal Accident Policy  ",$scope.numRecords=4,$scope.page=1,$scope.genderMorF="",$scope.medicalInfo={},$scope.medicalInfo.medicalQuestionarrier=[],$scope.medicalQuestionarrie=[],$scope.today=new Date,$scope.nationalityList={},$scope.appointeeRelList={},$scope.nomineeRelList={},$scope.occupationList={},$scope.personalDetails={},$scope.proposerDetails={},$scope.assuranceInfo={},$scope.assuranceDetails={},$scope.addressDetails={},$scope.declartionDetails={},$scope.addressDetails.communicationAddress={},$scope.addressDetails.isAddressSameAsCommun=!0,$scope.nomineeDateOfBirthMinLimit=!1,$scope.permanentAddressDetails={},$scope.nominationInfo={},$scope.nominationDetails={},$scope.appointeeInfo={},$scope.nominationDetails.appointeeDetails={},$scope.previouspolicyobj={},$scope.insuranceDetails={},$scope.PAProposeFormCookieDetails={},$scope.authenticate={},$scope.selectedDiseaseList=[],$scope.selectedJobsList=[],$scope.selectedJob={},$scope.coverageDetails={};$scope.screenOneStatus=!0,$scope.screenTwoStatus=!1,$scope.screenThreeStatus=!1,$scope.previousPolicyStatus=!0,$scope.previousPolicyStatus=!0;$scope.personalDetails=localStorageService.get("personalAccidentPersonalDetails"),$scope.selectedProduct=localStorageService.get("personalAccidentSelectedProduct"),$scope.selectedProductInputParam=localStorageService.get("personalAccidentQuoteInputParamaters"),localStorageService.get("personalAccidentQuoteInputParamaters")&&($scope.personalDetails.annualIncome=localStorageService.get("personalAccidentQuoteInputParamaters").quoteParam.annualIncome),console.log("$scope.selectedProductInputParam",$scope.selectedProductInputParam),$scope.marrital=maritalStatusListGeneric,$scope.proposerDetails.martialStatus=$scope.marrital[0].name,$scope.annualIncomeList=annualIncomesGeneric,$scope.gender=[{label:"Male",value:"M"},{label:"Female",value:"F"},{label:"Other",value:"Other"}],$scope.carrierStaff=yesNoStatusGeneric,$scope.policyTypes=policyTypesGeneric;var quoteUserInfo=localStorageService.get("quoteUserInfo"),buyScreens=localStorageService.get("buyScreen");$scope.ownerDetailsTemplate=$sce.trustAsHtml(buyScreens.templates[0].template),$scope.productValidation=buyScreens.validation,$scope.redirectSuccessUrl=buyScreens.redirectSuccessUrl,$scope.redirectFailureUrl=buyScreens.redirectFailureUrl,$scope.requestFormat=buyScreens.requestFormat,$scope.transactionName=buyScreens.transaction.proposalService.name,$scope.paymentURL=buyScreens.paymentUrl,$scope.proposerDetails.dateOfBirth=$scope.selectedProductInputParam.personalDetails.dateOfBirth,"M"==$scope.selectedProductInputParam.quoteParam.gender?($scope.proposerDetails.gender="Male",$scope.proposerDetails.salutation="Mr"):($scope.proposerDetails.gender="Female",$scope.proposerDetails.salutation="Mr"),$scope.showJobsDiscription=function(job){$scope.selectedJob=job,$scope.selectedJob.applicable=!0,console.log("$scope.selectedJob dd: "+JSON.stringify($scope.selectedJob))},$scope.prePopulateProposerDetails=function(){$scope.storedDOB=angular.copy($scope.selectedProductInputParam.personalDetails.dateOfBirth),$scope.genderDefault=angular.copy($scope.proposerDetails.gender),$scope.selectedProductInputParam.quoteParam.gender,$scope.storedGENDER=angular.copy($scope.proposerDetails.gender),$scope.medicalInfo.medicalQuestionarrier=$scope.medicalQuestionarrie,$scope.assuranceDetails.isPersonAddressSameAsCommun=!0},$scope.prePopulateProposerDetails(),$scope.proposerDetails.emailId="undefined"!==String(quoteUserInfo.emailId)?quoteUserInfo.emailId:"",$scope.proposerDetails.mobileNumber="undefined"!==String(quoteUserInfo.mobileNumber)?quoteUserInfo.mobileNumber:"",$scope.proposerDetails.lastName="undefined"!==String(quoteUserInfo.lastName)?quoteUserInfo.lastName:"",$scope.proposerDetails.firstName="undefined"!==String(quoteUserInfo.firstName)?quoteUserInfo.firstName:"",$scope.calcDefaultAreaDetails=function(areaCode){if(null!=areaCode&&String(areaCode)!=$scope.globalLabel.errorMessage.undefinedError&&String(areaCode).length>0){var docType=$scope.globalLabel.documentType.cityDetails,carrierId=$scope.selectedProduct.carrierId;$http.get(getSearchServiceLink+docType+"&q="+areaCode+"&id="+carrierId).then(function(response){var areaDetails=JSON.parse(response.data);areaDetails.responseCode==$scope.globalLabel.responseCode.success&&$scope.onSelectPinOrAreaComm(areaDetails.data[0])})}},$scope.calcDefaultPermAreaDetails=function(areaCode){if(null!=areaCode&&String(areaCode)!=$scope.globalLabel.errorMessage.undefinedError&&String(areaCode).length>0){var docType=$scope.globalLabel.documentType.cityDetails,carrierId=$scope.selectedProduct.carrierId;$http.get(getSearchServiceLink+docType+"&q="+areaCode+"&id="+carrierId).then(function(response){var areaDetails=JSON.parse(response.data);areaDetails.responseCode==$scope.globalLabel.responseCode.success&&$scope.onSelectPinOrAreaPerm(areaDetails.data[0])})}},$scope.hideModal=function(){$scope.modalOTP=!1,$scope.proceedPaymentStatus=!0,$scope.authenticate.enteredOTP=""},$scope.hideModalError=function(){$scope.modalOTPError=!1},$scope.resendOTP=function(){var validateAuthParam={paramMap:{}};validateAuthParam.mobileNumber=$scope.proposerDetails.mobileNumber,validateAuthParam.funcType=$scope.globalLabel.functionType.optAuth,validateAuthParam.paramMap.OTP=$scope.globalLabel.functionType.otpGenerate,sessionIDvar&&(validateAuthParam.sessionId=sessionIDvar),getDocUsingParam(RestAPI,$scope.globalLabel.transactionName.sendSMS,validateAuthParam,function(createOTP){createOTP.responseCode==$scope.globalLabel.responseCode.success?$scope.invalidOTPError="":$scope.invalidOTPError=$scope.globalLabel.errorMessage.createOTP})};var proposerDOBOption={changeMonth:!0,changeYear:!0,dateFormat:"dd/mm/yy"};$scope.proposerDOBOptions=setP365DatePickerProperties(proposerDOBOption);var nomineeDOBOption={maximumYearLimit:"-1Y",changeMonth:!0,changeYear:!0,dateFormat:"dd/mm/yy"};$scope.nomineeDOBOptions=setP365DatePickerProperties(nomineeDOBOption);var appointeeDOBOption={maximumYearLimit:"-18Y",changeMonth:!0,changeYear:!0,dateFormat:"dd/mm/yy"};$scope.appointeeDOBOptions=setP365DatePickerProperties(appointeeDOBOption);var startDateOptions={maximumDayLimit:20,minimumDayLimit:0,changeMonth:!0,changeYear:!0,dateFormat:"dd/mm/yy"};$scope.policystartDateOption=setP365DatePickerProperties(startDateOptions),$scope.onSelectVehiclePinOrArea=function(item){$scope.assuranceDetails.registrationAddress=item,$scope.displayArea=item.area+", "+item.city,$scope.assuranceDetails.area=item.area,$scope.assuranceDetails.pincode=item.pincode,$scope.assuranceDetails.city=item.city,$scope.assuranceDetails.state=item.state,$scope.loadPlaceholder(),localStorageService.set("regGeoDetails",item)},$scope.getPinCodeAreaList=function(searchValue){var docType=$scope.globalLabel.documentType.cityDetails,carrierId=$scope.selectedProduct.carrierId;return $http.get(getSearchServiceLink+docType+"&q="+searchValue+"&id="+carrierId).then(function(response){return JSON.parse(response.data).data})},$scope.loadPlaceholder=function(){setTimeout(function(){$(".buyform-control").on("focus blur",function(e){$(this).parents(".buyform-group").toggleClass("focusedInput","focus"===e.type||this.value.length>0)}).trigger("blur")},100)},$scope.onSelectPinOrAreaComm=function(item){console.log("onSelectPinOrAreaComm "+JSON.stringify(item)),$scope.addressDetails.communicationAddress.stateCode=item.stateCode,$scope.addressDetails.communicationAddress.state=item.state,$scope.addressDetails.communicationAddress.cityCode=item.cityCode,$scope.addressDetails.communicationAddress.city=item.city,$scope.addressDetails.communicationAddress.pincode=item.pincode,$scope.addressDetails.communicationAddress.streetDetails=item.streetDetails,$scope.addressDetails.communicationAddress.locality=item.locality,$scope.loadPlaceholder(),localStorageService.set("userGeoDetails",item)},$scope.onSelectPinOrAreaPerm=function(item){$scope.permanentAddressDetails.stateCode=item.stateCode,$scope.permanentAddressDetails.state=item.state,$scope.permanentAddressDetails.cityCode=item.cityCode,$scope.permanentAddressDetails.city=item.city,$scope.permanentAddressDetails.pincode=item.pincode},$scope.changeMaritalStatus=function(){},$scope.changeOccupation=function(){},$scope.changeIncome=function(){},$scope.calcHeight=function(){$scope.proposerDetails.heightInFeet=Number($scope.proposerDetails.heightInCM)/30.48},$scope.changeStaff=function(){"Yes"==$scope.proposerDetails.StaffStatus?$scope.staffFlag=!0:($scope.staffFlag=!1,$scope.proposerDetails.staffCode="")},$scope.changeGender=function(){"Male"==$scope.proposerDetails.gender||"Other"==$scope.proposerDetails.gender?$scope.proposerDetails.salutation="Mr":$scope.proposerDetails.salutation="Mrs",$scope.recalculateProposerGender()},$scope.changeNationality=function(){"Other"==$scope.proposerDetails.nationalityStatus?$scope.nationalityFlag=!0:($scope.nationalityFlag=!1,$scope.proposerDetails.otherNationality="")},$scope.changeNationalityOther=function(){},$scope.changeNomineeRelation=function(){$scope.personalDetails=$scope.proposerDetails},$scope.updateSalutation=function(relation){$scope.productValidation.isNomineeSalutationRequired,"Spouse"==relation?"Male"==$scope.proposerDetails.gender?($scope.salutationsList=[{value:"Mrs",display:"Mrs."}],$scope.nominationDetails.salutation="Mrs"):($scope.salutationsList=[{value:"Mr",display:"Mr."}],$scope.nominationDetails.salutation="Mr"):"Son"==relation||"Brother"==relation||"Father"==relation?($scope.salutationsList=[{value:"Mr",display:"Mr."}],$scope.nominationDetails.salutation="Mr"):"Daughter"!=relation&&"Mother"!=relation&&"Sister"!=relation&&"Spouce"!=relation||("Mother"==relation||"Spouce"==relation?($scope.salutationsList=[{value:"Mrs",display:"Mrs."}],$scope.nominationDetails.salutation="Mrs"):($scope.salutationsList=[{value:"Ms",display:"Ms."},{value:"Mrs",display:"Mrs."}],$scope.nominationDetails.salutation="Ms"))},$scope.changeAppointeeRelation=function(){},$scope.resetCommunicationAddress=function(){String($scope.addressDetails.communicationAddress.address)!=$scope.globalLabel.errorMessage.undefinedError&&0!=$scope.addressDetails.communicationAddress.address.length||($scope.addressDetails.communicationAddress.pincode=EMPTY,$scope.addressDetails.communicationAddress.state=EMPTY,$scope.addressDetails.communicationAddress.city=EMPTY)},$scope.resetPermanentAddress=function(){String($scope.permanentAddressDetails.address)!=$scope.globalLabel.errorMessage.undefinedError&&0!=$scope.permanentAddressDetails.address.length||($scope.permanentAddressDetails.pincode=EMPTY,$scope.permanentAddressDetails.state=EMPTY,$scope.permanentAddressDetails.city=EMPTY)},$scope.changePermanentAddress=function(){$scope.addressDetails.isAddressSameAsCommun?$scope.permanentAddressDetails=$scope.addressDetails.communicationAddress:($scope.permanentAddressDetails.houseNo=EMPTY,$scope.permanentAddressDetails.pincode=EMPTY,$scope.permanentAddressDetails.state=EMPTY,$scope.permanentAddressDetails.stateCode=EMPTY,$scope.permanentAddressDetails.cityCode=EMPTY,$scope.permanentAddressDetails.city=EMPTY,$scope.permanentAddressDetails.addressLine=EMPTY),$scope.addressDetails.permanentAddress=$scope.permanentAddressDetails},$scope.calculateProposerAge=function(){$scope.selectedProductInputParam.personalDetails.dateOfBirth=$scope.proposerDetails.dateOfBirth,$scope.recalculateProposerAge()},$scope.calculateMaturityAgeGap=function(){$scope.selectedProductInputParam.quoteParam.age>35?$scope.selectedProductInputParam.personalDetails.maturityAge=maturityAgeConstant:$scope.selectedProductInputParam.personalDetails.maturityAge=$scope.selectedProductInputParam.quoteParam.age+40},$scope.backToResultScreen=function(){$location.path("/personalAccidentResult")},$scope.showAuthenticateForm=function(){var validateAuthParam={paramMap:{}};validateAuthParam.mobileNumber=$scope.proposerDetails.mobileNumber,validateAuthParam.funcType=$scope.globalLabel.functionType.optAuth,validateAuthParam.paramMap.OTP=$scope.globalLabel.functionType.otpGenerate,sessionIDvar&&(validateAuthParam.sessionId=sessionIDvar),$scope.createOTPError="",$scope.modalOTP=!0},$scope.validateProposerDateOfBirth=function(){if("undefined"!==String($scope.proposerDetails.dateOfBirth)){var proposerAge=getAgeFromDOB($scope.proposerDetails.dateOfBirth);isNaN(proposerAge)?($scope.proposerDetails.dateOfBirth=void 0,$scope.proposerDateOfBirthError=$scope.productValidation.messages.dateOfBirthInvalid):proposerAge<$scope.productValidation.proposerDateOfBirthMinLimit?($scope.proposerDetails.dateOfBirth=void 0,$scope.proposerDateOfBirthError=$scope.productValidation.messages.proposerDateOfBirthErrorOne.replace("MIN_AGE_LIMIT",$scope.productValidation.proposerDateOfBirthMinLimit)):proposerAge>$scope.productValidation.proposerDateOfBirthMaxLimit?($scope.proposerDetails.dateOfBirth=void 0,$scope.proposerDateOfBirthError=$scope.productValidation.messages.proposerDateOfBirthErrorTwo.replace("MAX_AGE_LIMIT",$scope.productValidation.proposerDateOfBirthMaxLimit)):($scope.loadPlaceholder(),$scope.proposerAgeValue(proposorAge),$scope.proposerDateOfBirthError="")}else $scope.proposerDetails.dateOfBirth=void 0,$scope.proposerDateOfBirthError=$scope.productValidation.messages.dateOfBirthInvalid},$scope.changePurchasedLoan=function(){"No"==$scope.assuranceDetails.purchasedLoan&&($scope.assuranceDetails.financeInstitution=""),$scope.loadPlaceholder()},$scope.validateNomineeDateOfBirth=function(){$scope.nominationDetails.personAge=getAgeFromDOB($scope.nominationDetails.dateOfBirth),$scope.nominationDetails.personAge<18?$scope.nomineeDateOfBirthMinLimit=!0:($scope.nomineeDateOfBirthMinLimit=!1,$scope.nominationDetails.appointeeStatus=!1,$scope.nomineeRelationList=buyScreenNotMinorNomineeRealtion,$scope.appointeeRelationList=buyScreenAppointeeRelation)},$scope.validateAppointeeDateOfBirth=function(){$scope.nominationDetails.appointeeDetails.personAge=getAgeFromDOB($scope.nominationDetails.appointeeDetails.dateOfBirth),$scope.nominationDetails.appointeeDetails.personAge<18?($scope.nominationDetails.appointeeDetails.dateOfBirth=void 0,$scope.appointeeDateOfBirthError=$scope.productValidation.messages.dateOfBirthInvalid):($scope.loadPlaceholder(),$scope.appointeeDateOfBirthError="")},$scope.accordion="1",$scope.editPesonalInfo=function(){$scope.screenOneStatus=!0,$scope.screenTwoStatus=!0,$scope.screenThreeStatus=!1,$scope.accordion="1"},$scope.editmedicalInfo=function(){$scope.screenOneStatus=!1,$scope.screenTwoStatus=!0,$scope.screenThreeStatus=!1,$scope.accordion="2"},$scope.editNomineeInfo=function(){$scope.screenOneStatus=!1,$scope.screenTwoStatus=!0,$scope.screenThreeStatus=!1,$scope.accordion="2"},$scope.Section2Inactive=!0,$scope.Section3Inactive=!0,$scope.Section4Inactive=!0,$scope.submitPersonalDetails=function(){$scope.screenTwoStatus=!0,$scope.Section2Inactive=!1,$scope.accordion="2",$scope.PAProposeFormCookieDetails.proposerDetails=$scope.proposerDetails},$scope.submitMedicalDetails=function(){$scope.screenThreeStatus=!0,$scope.Section3Inactive=!1,$scope.accordion="3",$scope.proceedPaymentStatus=!0},$scope.submitNomineeDetails=function(){$scope.screenFourStatus=!0,$scope.Section4Inactive=!1,$scope.accordion="4"},$scope.occupationList=personalAccidentOccupationListGeneric;var nomineeRelationDocId=$scope.globalLabel.documentType.paNomineeRelation+"-"+$scope.selectedProduct.carrierId;getDocUsingId(RestAPI,nomineeRelationDocId,function(nomineeRelationList){$scope.nomineeRelList=nomineeRelationList.NomineeRelation;var appointeeRelationDocId=$scope.globalLabel.documentType.paAppointeeRelation+"-"+$scope.selectedProduct.carrierId;getDocUsingId(RestAPI,appointeeRelationDocId,function(appointeeRelationList){$scope.appointeeRelList=appointeeRelationList.AppointeeRelation;$scope.globalLabel.documentType.PANationality,$scope.selectedProduct.carrierId;getDocUsingId(RestAPI,"PANationality-36",function(nationalityList){$scope.nationalityList=nationalityList.Nationality;var searchData={documentType:"PersonalAccidentDiseaseQuestion"};searchData.carrierId=$scope.selectedProduct.carrierId,searchData.planId=$scope.selectedProduct.productId,getDocUsingParam(RestAPI,"getHealthQuestionList",searchData,function(callback){$scope.medicalQuestionarrie=callback.data;var searchDiseaseData={documentType:"PersonalAccidentDiseaseMapping"};searchDiseaseData.carrierId=$scope.selectedProduct.carrierId,searchDiseaseData.planId=$scope.selectedProduct.productId})})})});var quesArr=[];$scope.inputTypeCheck=function(sel,quesId,mquestion){"true"==sel?quesArr.push(quesId):quesArr.length>0&&quesArr.splice(-1,quesId)},$scope.clickToShowDisease=function(){$scope.diseaseShow=!0},$scope.clickToHideDisease=function(){$scope.diseaseShow=!1},$scope.submitDieaseList=function(){$scope.diseaseShow=!1},$scope.next=function(){$scope.page=$scope.page+1},$scope.back=function(){$scope.page=$scope.page-1},$scope.proposalInfo=function(){$scope.pAProposeFormDetails={},$scope.pAProposeFormDetailsTmp={},$scope.pAProposeFormDetailsTmp.proposerInfo={},$scope.pAProposeFormDetailsTmp.proposerInfo.permanentAddress={},$scope.pAProposeFormDetailsTmp.proposerInfo.communicationAddress=$scope.addressDetails.communicationAddress,$scope.addressDetails.isAddressSameAsCommun?$scope.pAProposeFormDetailsTmp.proposerInfo.permanentAddress=$scope.addressDetails.communicationAddress:$scope.pAProposeFormDetailsTmp.proposerInfo.permanentAddress=$scope.addressDetails.permanentAddress,console.log("proposerDetails",$scope.proposerDetails),$scope.pAProposeFormDetailsTmp.proposerInfo.personalInfo=$scope.proposerDetails,$scope.pAProposeFormDetailsTmp.proposerInfo.personalInfo.dateOfBirth=$scope.selectedProductInputParam.quoteParam.dob,$scope.pAProposeFormDetailsTmp.proposerInfo.personalInfo.sumInsured=$scope.selectedProduct.sumInsured,$scope.pAProposeFormDetailsTmp.proposerInfo.personalInfo.occupation=$scope.personalDetails.occupation,$scope.pAProposeFormDetailsTmp.proposerInfo.personalInfo.annualIncome=$scope.selectedProduct.AnnualIncome,$scope.pAProposeFormDetailsTmp.proposerInfo.personalInfo.isAddressSameAsCommun=$scope.addressDetails.isAddressSameAsCommun,$scope.pAProposeFormDetailsTmp.nomineeDetails=$scope.nominationDetails,$scope.pAProposeFormDetailsTmp.coverageDetails=$scope.selectedProduct,$scope.pAProposeFormDetailsTmp.coverageDetails.policyStartDate=$scope.coverageDetails.policyStartDate,$scope.pAProposeFormDetailsTmp.coverageDetails.policyEndDate=$scope.coverageDetails.policyEndDate,$scope.pAProposeFormDetailsTmp.insuranceCompany=$scope.selectedProduct.insuranceCompany,$scope.pAProposeFormDetailsTmp.planName=$scope.selectedProduct.planName,$scope.pAProposeFormDetailsTmp.quoteType=$scope.selectedProduct.quoteType,$scope.pAProposeFormDetailsTmp.businessLineId=8,$scope.pAProposeFormDetailsTmp.source="",$scope.pAProposeFormDetailsTmp.campaign_id="",$scope.pAProposeFormDetailsTmp.requestSource="",$scope.pAProposeFormDetailsTmp.messageId="",$scope.pAProposeFormDetailsTmp.carrierId=$scope.selectedProduct.carrierId,$scope.pAProposeFormDetailsTmp.planId=$scope.selectedProduct.planId,$scope.pAProposeFormDetails.requestType=$scope.globalLabel.request.paPropRequestType,$scope.pAProposeFormDetailsTmp.declartionDetails=[],$scope.pAProposeFormDetailsTmp.declartionDetails[0]=$scope.declartionDetails,$scope.pAProposeFormDetailsTmp.declartionDetails[0].declartionCode="GeneralUndertaking",$scope.pAProposeFormDetailsTmp.medicalQuestionarrie=angular.copy($scope.medicalInfo.medicalQuestionarrier)},$scope.recalculateProposerOccupation=function(){},$scope.recalculateProposerAddress=function(){"undefined"==String($scope.addressDetails.communicationAddress.city)&&null==$scope.addressDetails.communicationAddress.city||($scope.addressDetails.communicationAddress.city!=$scope.selectedProductInputParam.personalDetails.city?$rootScope.P365Confirm($scope.globalLabel.applicationLabels.common.p365prompt,$scope.globalLabel.applicationLabels.common.CityChanngeMsg,"No","Yes",function(confirmStatus){confirmStatus?($scope.selectedProductInputParam.quoteParam.occupationId=$scope.personalDetails.occupationId,$scope.recalculateQuotes()):$scope.loading=!1}):$scope.loading=!1)},$scope.recalculateProposerAge=function(){},$scope.recalculateQuotes=function(){$scope.loading=!0,RestAPI.invoke($scope.globalLabel.getRequest.quotePersonalAccident,$scope.selectedProductInputParam).then(function(callback){if($scope.PARecalculateQuoteRequest=[],console.log("callbackcallback recalculate  ",callback),callback.responseCode==$scope.globalLabel.responseCode.success)$scope.responseRecalculateCodeList=[],localStorageService.set("PERSONAL_ACCIDENT_UNIQUE_QUOTE_ID",callback.QUOTE_ID),$scope.PARecalculateQuoteRequest=callback.data,$scope.PAQuoteResult=[],$scope.quoteCalcResponse=[],angular.forEach($scope.PARecalculateQuoteRequest,function(obj,i){var request={},header={};header.messageId=messageIDVar,header.campaignID=campaignIDVar,header.source=sourceOrigin,header.transactionName=$scope.globalLabel.transactionName.personalAccidentQuoteResult,header.deviceId=deviceIdOrigin,request.header=header,request.body=obj,$http({method:"POST",url:getQuoteCalcLink,data:request}).success(function(callback,status){var paQuoteResponse=JSON.parse(callback);if(console.log("paQuoteResponse",paQuoteResponse),paQuoteResponse.responseCode==$scope.globalLabel.responseCode.success)console.log("!!!!1",paQuoteResponse.data.quotes[0].carrierId),null!=paQuoteResponse.data&&paQuoteResponse.data.quotes[0].carrierId==$scope.selectedProduct.carrierId&&paQuoteResponse.data.quotes[0].planId==$scope.selectedProduct.planId&&($scope.loading=!1,console.log("!!!!2")),paQuoteResponse.data.quotes[0].id=paQuoteResponse.messageId,$scope.quoteCalcResponse.push(paQuoteResponse.data.quotes[0]);else if(console.log("!!!!3"),null!=paQuoteResponse.data&&paQuoteResponse.data.quotes[0].carrierId==$scope.selectedProduct.carrierId&&paQuoteResponse.data.quotes[0].productId==$scope.selectedProduct.productId){$scope.loading=!1;var screenCnfrmError=$scope.selectedProduct.insuranceCompany+""+$scope.globalLabel.errorMessage.screenConfirmErrorMsg;$rootScope.P365Alert($scope.globalLabel.applicationLabels.common.p365prompt,screenCnfrmError,"Ok")}}),error(function(data,status){$scope.responseRecalculateCodeList.push($scope.globalLabel.responseCode.systemError),$scope.loading=!1})});else{$scope.loading=!1;var screenCnfrmError=$scope.selectedProduct.insuranceCompany+""+$scope.globalLabel.errorMessage.screenConfirmErrorMsgDob;$rootScope.P365Alert("Policies365",screenCnfrmError,"Ok")}})},$scope.calcualtePolicyTerm=function(date){var Day=date.split("/")[0],Month=date.split("/")[1],Year=date.split("/")[2],policyEndDateTemp=new Date(Date.parse(Month+"/"+Day+"/"+Year));policyEndDateTemp.setDate(policyEndDateTemp.getDate()+365);var d=policyEndDateTemp.getDate(),m=policyEndDateTemp.getMonth()+1;$scope.coverageDetails.policyEndDate=String((d<=9?"0"+d:d)+"/"+(m<=9?"0"+m:m)+"/"+policyEndDateTemp.getFullYear())},$scope.iposRequest={},$scope.iposRequest.docId=$location.search().quoteId,$scope.iposRequest.carrierId=$location.search().carrierId,$scope.iposRequest.planId=$location.search().productId,$scope.submitProposalData=function(selectedPolicyDetails){if($scope.submitNomineeDetails(),$scope.proposalInfo(),$scope.pAProposeFormDetails.QUOTE_ID=$scope.iposRequest.docId,$scope.pAProposeFormDetails.businessLineId=$scope.globalLabel.businessLineType.personalAccident,$scope.pAProposeFormDetails.carrierProposalStatus=!1,$scope.pAProposeFormDetails.baseEnvStatus=baseEnvEnabled,$scope.loading=!0,$rootScope.agencyPortalEnabled){const localdata=JSON.parse(localStorage.getItem("finalLocalStorage"));$scope.pAProposeFormDetails.requestSource="agency",$scope.pAProposeFormDetails.userName=localdata.username,$scope.pAProposeFormDetails.agencyId=localdata.agencyId}RestAPI.invoke($scope.transactionName,$scope.pAProposeFormDetailsTmp).then(function(proposeFormResponse){proposeFormResponse.responseCode==$scope.globalLabel.responseCode.success?($scope.responseToken=proposeFormResponse.data,$scope.responseToken.paymentGateway=$scope.paymentURL,$scope.responseToken.businessLineId=$scope.globalLabel.businessLineType.personalAccident,localStorageService.set("paReponseToken",$scope.responseToken),console.log("Payment service started",$scope.responseToken),getDocUsingParam(RestAPI,$scope.globalLabel.transactionName.paymentService,$scope.responseToken,function(paymentDetails){console.log("Sending payment link to customer.");var proposalDetailsEmail={paramMap:{}};proposalDetailsEmail.funcType=$scope.globalLabel.functionType.proposalDetailsTemplate,proposalDetailsEmail.username=$scope.proposerDetails.emailId.trim(),proposalDetailsEmail.paramMap.customerName=$scope.proposerDetails.firstName.trim()+" "+$scope.proposerDetails.lastName.trim(),proposalDetailsEmail.paramMap.selectedPolicyType=$scope.globalLabel.insuranceType.personalAccident,proposalDetailsEmail.paramMap.quoteId=$scope.iposRequest.docId,proposalDetailsEmail.paramMap.premiumAmount=String($scope.selectedProduct.grossPremium),proposalDetailsEmail.paramMap.docId=String($scope.responseToken.proposalId),proposalDetailsEmail.paramMap.LOB=String($scope.globalLabel.businessLineType.personalAccident),RestAPI.invoke($scope.globalLabel.transactionName.sendEmail,proposalDetailsEmail).then(function(emailResponse){emailResponse.responseCode==$scope.globalLabel.responseCode.success?($scope.loading=!1,$scope.modalIPOS=!0):$rootScope.P365Alert("Policies365",$scope.globalLabel.errorMessage.emailSentFailed,"Ok");var proposalDetailsSMS={paramMap:{},funcType:"SHAREPROPOSAL"};proposalDetailsSMS.paramMap.customerName=$scope.proposerDetails.firstName.trim()+" "+$scope.proposerDetails.lastName.trim(),proposalDetailsSMS.paramMap.premiumAmount=String($scope.selectedProduct.grossPremium),proposalDetailsSMS.paramMap.docId=String($scope.responseToken.proposalId),proposalDetailsSMS.paramMap.LOB=String($scope.globalLabel.businessLineType.personalAccident),proposalDetailsSMS.mobileNumber=$scope.proposerDetails.mobileNumber,RestAPI.invoke($scope.globalLabel.transactionName.sendSMS,proposalDetailsSMS).then(function(smsResponse){smsResponse.responseCode==$scope.globalLabel.responseCode.success?$scope.smsResponseError="":smsResponse.responseCode==$scope.globalLabel.responseCode.blockedMobile?$scope.smsResponseError=smsResponse.message:$scope.smsResponseError=$scope.globalLabel.errorMessage.createOTP})})})):($scope.loading=!1,$rootScope.P365Alert("Policies365",$scope.globalLabel.errorMessage.serverError,"Ok"))})},$scope.hideModalIPOS=function(){$scope.modalIPOS=!1},$scope.prepopulateFields=function(){$scope.authenticate.enteredOTP="",$scope.proposerDetails.tobacoAdicted=$scope.selectedProductInputParam.quoteParam.tobacoAdicted},$scope.prepopulateFields(),$scope.proceedForPayment=function(){$scope.proceedPaymentStatus=!1;var authenticateUserParam={};authenticateUserParam.mobileNumber=$scope.proposerDetails.mobileNumber,authenticateUserParam.OTP=Number($scope.authenticate.enteredOTP),getDocUsingParam(RestAPI,$scope.globalLabel.transactionName.validateOTP,authenticateUserParam,function(createOTP){createOTP.responseCode==$scope.globalLabel.responseCode.success?($scope.modalOTP=!1,$scope.invalidOTPError="",$scope.proposalInfo(),$scope.pAProposeFormDetailsTmp.QUOTE_ID=localStorageService.get("PERSONAL_ACCIDENT_UNIQUE_QUOTE_ID"),$rootScope.wordPressEnabled?$scope.pAProposeFormDetailsTmp.source="wordpress":($scope.pAProposeFormDetailsTmp.baseEnvStatus=baseEnvEnabled,$scope.pAProposeFormDetailsTmp.source="website"),console.log("$scope.pAProposeFormDetailsTmp)",$scope.pAProposeFormDetailsTmp),localStorageService.set("pAProposeFormDetails",$scope.pAProposeFormDetailsTmp),$scope.loading=!0,RestAPI.invoke($scope.transactionName,$scope.pAProposeFormDetailsTmp).then(function(proposeFormResponse){if(console.log("proposeFormResponse",proposeFormResponse),$scope.modalOTP=!1,$scope.authenticate.enteredOTP="",$scope.modalOTPError=!1,$scope.proceedPaymentStatus=!0,proposeFormResponse.responseCode==$scope.globalLabel.responseCode.success)$scope.responseToken=proposeFormResponse.data,$scope.responseToken.paymentGateway=$scope.paymentURL,$scope.responseToken.businessLineId=$scope.globalLabel.businessLineType.personalAccident,localStorageService.set("paReponseToken",$scope.responseToken),getDocUsingParam(RestAPI,$scope.globalLabel.transactionName.paymentService,$scope.responseToken,function(paymentDetails){if(paymentDetails.responseCode==$scope.globalLabel.responseCode.success){$scope.paymentServiceResponse=paymentDetails.data;var paymentURLParamListLength=$scope.paymentServiceResponse.paramterList.length;if("GET"==$scope.paymentServiceResponse.method){for(var paymentURLParam="?",i=(paymentURLParamListLength=$scope.paymentServiceResponse.paramterList.length,0);i<paymentURLParamListLength;i++)i<paymentURLParamListLength-1?paymenztURLParam+=$scope.paymentServiceResponse.paramterList[i].name+"="+$scope.paymentServiceResponse.paramterList[i].value+"&":paymentURLParam+=$scope.paymentServiceResponse.paramterList[i].name+"="+$scope.paymentServiceResponse.paramterList[i].value;$window.location.href=$scope.paymentServiceResponse.paymentURL+paymentURLParam}else $timeout(function(){$scope.paymentForm.setAction($scope.paymentServiceResponse.paymentURL),$scope.paymentForm.commit()},100)}else{$scope.loading=!1;var buyScreenCnfrmError=paymentDetails.responseCode+" : "+$scope.globalLabel.validationMessages.buyScreenCnfrmError.replace("INSURER_NAME",$scope.selectedProduct.insuranceCompany);$rootScope.P365Alert($scope.globalLabel.applicationLabels.common.p365prompt,buyScreenCnfrmError,"Ok")}});else if(proposeFormResponse.responseCode==$scope.globalLabel.responseCode.error)$scope.loading=!1,$rootScope.P365Alert("Error",proposeFormResponse.data,"Ok");else{$scope.loading=!1;var buyScreenCnfrmError=proposeFormResponse.responseCode+" : "+$scope.globalLabel.validationMessages.buyScreenCnfrmError.replace("INSURER_NAME",$scope.selectedProduct.insuranceCompany);$rootScope.P365Alert($scope.globalLabel.applicationLabels.common.p365prompt,buyScreenCnfrmError,"Ok")}})):createOTP.responseCode==$scope.globalLabel.responseCode.noRecordsFound?$scope.invalidOTPError=$scope.globalLabel.validationMessages.invalidOTP:createOTP.responseCode==$scope.globalLabel.responseCode.expiredOTP?$scope.invalidOTPError=$scope.globalLabel.validationMessages.expiredOTP:createOTP.responseCode==$scope.globalLabel.responseCode.blockedMobile?$scope.invalidOTPError=createOTP.message:$scope.invalidOTPError=$scope.globalLabel.validationMessages.authOTP})},setTimeout(function(){$(".buyform-control").on("focus blur",function(e){$(this).parents(".buyform-group").toggleClass("focusedInput","focus"===e.type||this.value.length>0)}).trigger("blur")},4e3),setTimeout(function(){$(".buyform-control").on("focus blur",function(e){$(this).parents(".buyform-group").toggleClass("focusedInput","focus"===e.type||this.value.length>0)}).trigger("blur")},500),$scope.scheduleVehicleInspection=function(){$location.path("/FourWheelerscheduleInspection")},$rootScope.signout=function(){$rootScope.userLoginStatus=!1;var userLoginInfo={username:void 0};userLoginInfo.status=$rootScope.userLoginStatus,localStorageService.set("userLoginInfo",userLoginInfo),$location.path("/quote")},$scope.$on("setCommAddressByAPI",function(){setTimeout(function(){var googleAddressObject=angular.copy($scope.chosenCommPlaceDetails);getAddressFields(googleAddressObject,function(fomattedAddress,formattedCity,formattedState,formattedPincode){$scope.addressDetails.communicationAddress.address=fomattedAddress,"undefined"!=String(formattedPincode)&&""!=formattedPincode?$scope.calcDefaultAreaDetails(formattedPincode):($scope.addressDetails.communicationAddress.pincode="",$scope.addressDetails.communicationAddress.state="",$scope.addressDetails.communicationAddress.city=""),$scope.$apply()})},10)}),$scope.$on("setRegAddressByAPI",function(){setTimeout(function(){var googleAddressObject=angular.copy($scope.chosenRegPlaceDetails);getAddressFields(googleAddressObject,function(fomattedAddress,formattedCity,formattedState,formattedPincode){$scope.permanentAddressDetails.address=fomattedAddress,"undefined"!=String(formattedPincode)&&""!=formattedPincode?$scope.calcDefaultPermAreaDetails(formattedPincode):($scope.permanentAddressDetails.pincode="",$scope.permanentAddressDetails.state="",$scope.permanentAddressDetails.city=""),$scope.$apply()})},10)}),$scope.showAmount=function(amount){return amount>1e5?Math.round(amount/1e5):0},$scope.checkSum=function(amount){(amount<5e5||void 0==amount||void 0==typeof amount)&&($scope.disableSubmit=!0,$scope.message="Please enter the amount Greater Than 5 Lac "),amount>25e6&&($scope.disableSubmit=!0,$scope.message="Please enter the amount Less than 2.5 Crore "),amount>5e5&&amount<=2e7&&($scope.message="",$scope.disableSubmit=!1)},$(".activateFooter").hide(),$(".activateHeader").hide()}]);