"use strict";angular.module("payFailurePersonalAccident",["CoreComponentApp","LocalStorageModule","ngMessages"]).controller("payFailurePersonalAccidenntController",["RestAPI","$scope","$rootScope","$location","$http","localStorageService","$timeout","$sce",function(RestAPI,$scope,$rootScope,$location,$http,localStorageService,$timeout,$sce){loadDatbase(function(){idepProdEnv&&($rootScope.modalSurvey=!0),$http.get(wp_path+"ApplicationLabels.json").then(function(applicationCommonLabels){var applicationLabels=applicationCommonLabels.data;localStorageService.set("applicationLabels",applicationLabels),$scope.globalLabel=applicationLabels.globalLabels,$rootScope.wordPressEnabled=localStorageService.get("wordPressEnabled"),$rootScope.loaderContent={businessLine:"8",header:"Personal Accident Insurance",desc:$sce.trustAsHtml($scope.globalLabel.applicationLabels.personalAccident.proverbBuyProduct)},$rootScope.title=$scope.globalLabel.policies365Title.personalAccidentPayFailure,$scope.PAReponseToken=localStorageService.get("paReponseToken"),$scope.selectedProduct=localStorageService.get("personalAccidentSelectedProduct"),console.log("Seleced Product Details Received. : "+JSON.stringify($scope.selectedProduct)),$scope.quoteUserInfo=localStorageService.get("quoteUserInfo"),messageIDVar=$scope.quoteUserInfo.messageId,$scope.$apply()})})}]),angular.module("paySuccessPersonalAccident",["CoreComponentApp","LocalStorageModule","ngMessages"]).controller("paySuccessPersonalAccidentController",["RestAPI","$scope","$rootScope","$location","$http","localStorageService","$timeout","$sce",function(RestAPI,$scope,$rootScope,$location,$http,localStorageService,$timeout,$sce){loadDatbase(function(){idepProdEnv&&($rootScope.modalSurvey=!0),wordPressEnabled?($rootScope.wordPressEnabled=wordPressEnabled,$rootScope.wp_path=wp_path,localStorageService.set("wordPressEnabled",!0)):($rootScope.wp_path="",localStorageService.set("wordPressEnabled",!1)),$http.get(wp_path+"ApplicationLabels.json").then(function(applicationCommonLabels){var applicationLabels=applicationCommonLabels.data;localStorageService.set("applicationLabels",applicationLabels),$scope.globalLabel=applicationLabels.globalLabels,$rootScope.loaderContent={businessLine:"8",header:"PersonalAccident Insurance",desc:$sce.trustAsHtml($scope.globalLabel.applicationLabels.personalAccident.proverbBuyProduct)},$rootScope.title=$scope.globalLabel.policies365Title.personalAccidentPaySuccess,$scope.authenticate={},$scope.showSuccessScreen=!1,null!=$location.search().policyNo||"undefined"!=String($location.search().policyNo)?($scope.pAReponseToken={},$scope.pAReponseToken.policyNo=$location.search().policyNo,$scope.pAReponseToken.proposalCreatedDate=$location.search().proposalCreatedDate,$scope.pAReponseToken.policyEndDate=$location.search().policyEndDate,$scope.pAReponseToken.policyStartDate=$location.search().policyStartDate,$scope.pAReponseToken.proposalId=$location.search().proposalId,$scope.pAReponseToken.netPremium=Math.round($location.search().netPremium),$scope.pAReponseToken.sumInsured=$location.search().sumInsured,$scope.pAReponseToken.source=$location.search().source):$scope.pAReponseToken={},$scope.selectedProduct=localStorageService.get("personalAccidentSelectedProduct"),$scope.selectedProductInputParam=localStorageService.get("personalAccidentQuoteInputParamaters"),$scope.selectedProductInputParam=localStorageService.get("personalAccidentQuoteInputParamaters"),$scope.selectedProduct=localStorageService.get("personalAccidentSelectedProduct"),$scope.proposalRequest=localStorageService.get("pAProposeFormDetails"),localStorageService.get("quoteUserInfo")&&($scope.quoteUserInfo=localStorageService.get("quoteUserInfo"),$scope.quoteUserInfo.createLeadStatus=!0,localStorageService.set("quoteUserInfo",$scope.quoteUserInfo),messageIDVar=$scope.quoteUserInfo.messageId),$scope.purchaseStatement=function(){for(var i=0;i<$scope.selectedPolicyDetails.insuredDetails.insuredMembers.length;i++)$scope.selectedPolicyDetails.insuredDetails.insuredMembers[i].dateOfBirth&&($scope.selectedPolicyDetails.insuredDetails.insuredMembers[i].age=calculateAgeByDOB(String($scope.selectedPolicyDetails.insuredDetails.insuredMembers[i].dateOfBirth)));localStorageService.set("policyDocDetails",$scope.selectedPolicyDetails),1==$scope.selectedPolicyDetails.businessLineId||(2==$scope.selectedPolicyDetails.businessLineId?$location.path("/bikepolicypurchase"):3==$scope.selectedPolicyDetails.businessLineId?$location.path("/carpolicypurchase"):$location.path("/medicalPurchasing"))},$scope.viewPolicy=function(){$scope.modalOTP=!0,$scope.resendOTP()},$scope.closeAuthenticateForm=function(){$scope.modalOTP=!1},$scope.authenticateUser=function(){$scope.disableOTP=!1;var authenticateUserParam={};authenticateUserParam.mobileNumber=$scope.proposalRequest.proposerInfo.contactInfo.mobile,authenticateUserParam.OTP=Number($scope.authenticate.enteredOTP),getDocUsingParam(RestAPI,$scope.globalLabel.transactionName.validateOTP,authenticateUserParam,function(createOTP){if(createOTP.responseCode==$scope.globalLabel.responseCode.success){$scope.invalidOTPError="",$scope.modalOTP=!1;var userLoginInfo={};userLoginInfo.username=createOTP.data.firstName,userLoginInfo.mobileNumber=createOTP.data.mobile,userLoginInfo.status=!0,localStorageService.set("userLoginInfo",userLoginInfo),localStorageService.set("userProfileDetails",createOTP.data),$location.path("/dashboard")}else createOTP.responseCode==$scope.globalLabel.responseCode.noRecordsFound?$scope.invalidOTPError=$scope.globalLabel.validationMessages.invalidOTP:createOTP.responseCode==$scope.globalLabel.responseCode.expiredOTP?$scope.invalidOTPError=$scope.globalLabel.validationMessages.expiredOTP:$scope.invalidOTPError=$scope.globalLabel.validationMessages.authOTP})},$scope.resendOTP=function(){var validateLoginParam={paramMap:{}};validateLoginParam.mobileNumber=$scope.proposalRequest.proposerInfo.contactInfo.mobile,validateLoginParam.funcType=$scope.globalLabel.functionType.optAuth,validateLoginParam.paramMap.OTP=$scope.globalLabel.functionType.otpGenerate,getDocUsingParam(RestAPI,$scope.globalLabel.transactionName.sendSMS,validateLoginParam,function(createOTP){createOTP.responseCode==$scope.globalLabel.responseCode.success?$scope.invalidOTPError="":createOTP.responseCode==$scope.globalLabel.responseCode.blockedMobile?($scope.invalidOTPError=createOTP.message,$scope.disableOTP=!0):$scope.invalidOTPError=$scope.globalLabel.errorMessage.createOTP})}})})}]);