"use strict";function prepareQuoteRequest(quote){var quoteRequest={quoteParam:{},travelDetails:{}};quoteRequest.quoteParam.travellers=[],quoteRequest.travelDetails.destinations=[];for(var i=0;i<quote.quoteParam.travellers.length;i++){var traveller={};traveller.gender=quote.quoteParam.travellers[i].gender,traveller.traveller_id=quote.quoteParam.travellers[i].traveller_id,traveller.age=quote.quoteParam.travellers[i].age,traveller.relation=quote.quoteParam.travellers[i].relation,void 0!=quote.quoteParam.travellers[i].diseaseDetails&&0!=quote.quoteParam.travellers[i].diseaseDetails.length&&(traveller.diseaseDetails=quote.quoteParam.travellers[i].diseaseDetails),quoteRequest.quoteParam.travellers.push(traveller)}return quoteRequest.quoteParam.travellers.length>1?quoteRequest.quoteParam.planType="F":quoteRequest.quoteParam.planType="I",quoteRequest.quoteParam.quoteMinAge=quote.quoteParam.quoteMinAge,quoteRequest.quoteParam.quoteMaxAge=quote.quoteParam.quoteMaxAge,quoteRequest.quoteParam.documentType=quote.quoteParam.documentType,quoteRequest.quoteParam.isIndian=quote.quoteParam.isIndian,quoteRequest.quoteParam.isOciPioStatus=quote.quoteParam.isOciPioStatus,quoteRequest.quoteParam.travellingFromIndia=quote.quoteParam.travellingFromIndia,quoteRequest.quoteParam.pedStatus=quote.quoteParam.pedStatus,quoteRequest.quoteParam.quoteType=quote.quoteParam.quoteType,quoteRequest.quoteParam.policyType=quote.quoteParam.policyType,quoteRequest.travelDetails.startdate=quote.travelDetails.startdate,quoteRequest.travelDetails.enddate=quote.travelDetails.enddate,quoteRequest.travelDetails.tripType=quote.travelDetails.tripType,"single"==quoteRequest.travelDetails.tripType?quoteRequest.travelDetails.tripDuration=0:quoteRequest.travelDetails.tripDuration=quote.travelDetails.tripDuration,quoteRequest.travelDetails.sumInsured=quote.travelDetails.sumInsured,quoteRequest.travelDetails.source=quote.travelDetails.source,quoteRequest.travelDetails.destinations=quote.travelDetails.destinations,quoteRequest.requestType=quote.requestType,quoteRequest}function prepareProposalRequest(proposal){return{}}angular.module("travelInstantQuote",["CoreComponentApp","LocalStorageModule","ngMaterial","ngScrollable"]).controller("travelInstantQuoteController",["$scope","$rootScope","$window","$filter","RestAPI","localStorageService","$timeout","$location","$interval","$http","$sce","$q",function($scope,$rootScope,$window,$filter,RestAPI,localStorageService,$timeout,$location,$interval,$http,$sce,$q){var applicationLabels=localStorageService.get("applicationLabels");$scope.globalLabel=applicationLabels.globalLabels;var SELF="Self",SPOUSE="Spouse",SON="Son",DAUGHTER="Daughter",FATHER="Father",MOTHER="Mother",FEMALE="Female",MALE="Male";$scope.travelDetails={},$scope.ratingParam={},$scope.quoteParam={},$scope.quoteParam.travellers=[],$scope.quote={},$scope.sourcesList={},$scope.sumInsuredList=[],$scope.continentList=[],$scope.selectedDisease={},$scope.selectedDisease.diseaseList=[],$scope.diseaseList=[],$scope.destinations=[],$scope.travelInstantQuoteForm={},$scope.relationType=travelGeneric,$scope.relationTypeCopy=angular.copy(travelGeneric),$scope.pedStatus=preDiseaseStatusGen,$scope.numberOfTravellers=getList(8),$scope.numberOfTraveller=$scope.numberOfTravellers[0],$scope.genderType=travelGenderTypeGeneric,$scope.questionStatus=questionStatusGeneric,$scope.tripTypeList=tripTypeListGeneric,$scope.tripDurationList=tripDurationListGeneric,$scope.currencySymbols=currencySymbolList;var travelQuoteCookie=localStorageService.get("travelQuoteInputParamaters"),travelDetailsCookie=localStorageService.get("travelDetails");function isSelected(value){for(var returnvalue=!1,i=0;i<$scope.travellersList.length;i++)$scope.travellersList[i].relation==value&&(returnvalue=!0);return returnvalue}$scope.isDiseased=!1,$scope.showHiddenFields=!1,$scope.modalTraveller=!1,$rootScope.instantQuoteSummaryStatus=!0,$rootScope.tabSelectionStatus=!0,$scope.instantQuoteTravelForm=!1,$scope.disableAddButton=!1,$rootScope.loading=!1,$rootScope.loaderContent={businessLine:"5",header:"Travel Insurance",desc:$sce.trustAsHtml($scope.globalLabel.applicationLabels.travel.proverbInstantQuote)},$scope.toggleDate=function(){$scope.getUpdatedTravelDates(),$scope.callSingleClickQuote()},$scope.toggleTripType=function(){$scope.travelDetails.tripDuration=$scope.tripDurationList[0].duration,$scope.getUpdatedTravelDates()},$scope.toggleQuestion1=function(){"N"==$scope.quoteParam.travellingFromIndia?($scope.show_error_msg_1=!0,$scope.show_error_msg_2=!1,$scope.show_error_msg_3=!1,$scope.quoteParam.isIndian="Y",$scope.quoteParam.isOciPioStatus="Y"):($scope.show_error_msg_1=!1,$scope.show_error_msg_2=!1,$scope.show_error_msg_3=!1,$scope.callSingleClickQuote(),$scope.quoteParam.isIndian="Y",$scope.quoteParam.isOciPioStatus="Y")},$scope.toggleQuestion2=function(){"N"==$scope.quoteParam.isIndian?($scope.show_error_msg_1=!1,$scope.show_error_msg_2=!0,$scope.show_error_msg_3=!1,$scope.callSingleClickQuote(),$scope.quoteParam.isOciPioStatus="Y"):($scope.show_error_msg_1=!1,$scope.show_error_msg_2=!1,$scope.show_error_msg_3=!1,$scope.callSingleClickQuote(),$scope.quoteParam.isOciPioStatus="Y")},$scope.toggleQuestion3=function(){"N"==$scope.quoteParam.isOciPioStatus?($scope.show_error_msg_1=!1,$scope.show_error_msg_2=!0,$scope.show_error_msg_3=!0):($scope.show_error_msg_1=!1,$scope.show_error_msg_2=!0,$scope.show_error_msg_3=!1,$scope.callSingleClickQuote())},$scope.onSelect=function(item){$scope.destinations.push(item)},"/travel"==$location.path()?$rootScope.title=$scope.globalLabel.policies365Title.travelInstantQuoteLanding:$rootScope.title=$scope.globalLabel.policies365Title.travelInstantQuote,$scope.initPolicyDates=function(){var startDateOptions={},endDateOptions={},tripType=$scope.travelDetails.tripType;if("single"==tripType){startDateOptions.minimumDayLimit=0,startDateOptions.maximumDayLimit=60,startDateOptions.changeMonth=!0,startDateOptions.changeYear=!0,startDateOptions.dateFormat="dd/mm/yy",$scope.travelStartDateOptions=setP365DatePickerProperties(startDateOptions);var endDay=(startDate=angular.copy($scope.travelDetails.startdate)).split("/")[0],endMonth=startDate.split("/")[1],endYear=startDate.split("/")[2];(travelEndDateMin=new Date(Date.parse(endMonth+"/"+endDay+"/"+endYear))).setDate(travelEndDateMin.getDate()+1);var travelEndDateMax=new Date(travelEndDateMin);travelEndDateMax.setDate(travelEndDateMin.getDate()+179),endDateOptions.minimumDateStringFormat=travelEndDateMin,endDateOptions.maximumDateStringFormat=travelEndDateMax,endDateOptions.changeMonth=!0,endDateOptions.changeYear=!0,endDateOptions.dateFormat="dd/mm/yy",$scope.travelEndDateOptions=setP365DatePickerProperties(endDateOptions)}else if("multi"==tripType){startDateOptions.minimumDayLimit=0,startDateOptions.maximumDayLimit=60,startDateOptions.changeMonth=!0,startDateOptions.changeYear=!0,startDateOptions.dateFormat="dd/mm/yy",$scope.travelStartDateOptions=setP365DatePickerProperties(startDateOptions);var startDate,travelEndDateMin;endDay=(startDate=angular.copy($scope.travelDetails.startdate)).split("/")[0],endMonth=startDate.split("/")[1],endYear=startDate.split("/")[2];(travelEndDateMin=new Date(Date.parse(endMonth+"/"+endDay+"/"+endYear))).setDate(travelEndDateMin.getDate()+364);var d=travelEndDateMin.getDate(),m=travelEndDateMin.getMonth()+1;$scope.travelDetails.enddate=String((d<=9?"0"+d:d)+"/"+(m<=9?"0"+m:m)+"/"+travelEndDateMin.getFullYear()),endDateOptions.minimumDateStringFormat=$scope.travelDetails.enddate,endDateOptions.maximumDateStringFormat=$scope.travelDetails.enddate,endDateOptions.changeMonth=!0,endDateOptions.changeYear=!0,endDateOptions.dateFormat="dd/mm/yy",$scope.travelEndDateOptions=setP365DatePickerProperties(endDateOptions)}},$scope.getUpdatedTravelDates=function(){var startDateOptions={},endDateOptions={},tripType=$scope.travelDetails.tripType;if("single"==tripType){startDateOptions.minimumDayLimit=0,startDateOptions.maximumDayLimit=60,startDateOptions.changeMonth=!0,startDateOptions.changeYear=!0,startDateOptions.dateFormat="dd/mm/yy",$scope.travelStartDateOptions=setP365DatePickerProperties(startDateOptions);var endDay=(startDate=angular.copy($scope.travelDetails.startdate)).split("/")[0],endMonth=startDate.split("/")[1],endYear=startDate.split("/")[2];(travelEndDateMin=new Date(Date.parse(endMonth+"/"+endDay+"/"+endYear))).setDate(travelEndDateMin.getDate()+1);var d=travelEndDateMin.getDate(),m=travelEndDateMin.getMonth()+1;$scope.travelDetails.enddate=String((d<=9?"0"+d:d)+"/"+(m<=9?"0"+m:m)+"/"+travelEndDateMin.getFullYear());var travelEndDateMax=new Date(travelEndDateMin);travelEndDateMax.setDate(travelEndDateMin.getDate()+179),endDateOptions.minimumDateStringFormat=$scope.travelDetails.enddate,endDateOptions.maximumDateStringFormat=travelEndDateMax,endDateOptions.changeMonth=!0,endDateOptions.changeYear=!0,endDateOptions.dateFormat="dd/mm/yy",$scope.travelEndDateOptions=setP365DatePickerProperties(endDateOptions)}else if("multi"==tripType){startDateOptions.minimumDayLimit=0,startDateOptions.maximumDayLimit=60,startDateOptions.changeMonth=!0,startDateOptions.changeYear=!0,startDateOptions.dateFormat="dd/mm/yy",$scope.travelStartDateOptions=setP365DatePickerProperties(startDateOptions);var startDate,travelEndDateMin;endDay=(startDate=angular.copy($scope.travelDetails.startdate)).split("/")[0],endMonth=startDate.split("/")[1],endYear=startDate.split("/")[2];(travelEndDateMin=new Date(Date.parse(endMonth+"/"+endDay+"/"+endYear))).setDate(travelEndDateMin.getDate()+364);d=travelEndDateMin.getDate(),m=travelEndDateMin.getMonth()+1;$scope.travelDetails.enddate=String((d<=9?"0"+d:d)+"/"+(m<=9?"0"+m:m)+"/"+travelEndDateMin.getFullYear()),endDateOptions.minimumDateStringFormat=$scope.travelDetails.enddate,endDateOptions.maximumDateStringFormat=$scope.travelDetails.enddate,endDateOptions.changeMonth=!0,endDateOptions.changeYear=!0,endDateOptions.dateFormat="dd/mm/yy",$scope.travelEndDateOptions=setP365DatePickerProperties(endDateOptions)}},$scope.modalTraveller=!1,$scope.toggleTraveller=function(){$scope.oldtravellersList=angular.copy($scope.travellersList);for(var i=0;i<$scope.travellersList.length;i++)$scope.travellersList[i].minAge=1,$scope.travellersList[i].maxAge=120,$scope.travellersList[i].addNew=!1,$scope.changeRelation($scope.travellersList[i].relation);$scope.travellersList[$scope.travellersList.length-1].addNew=!0,$scope.modalTraveller=!$scope.modalTraveller,setTimeout(function(){$(".hiddenAge").each(function(){var hiddenVal=$(this).val();$(this).closest("span").find(".ageDropdown").val(hiddenVal)})},1e3)},$scope.addTraveller=function(id){if(id<=6){$scope.disableAddButton=6==id,$scope.travellersList[id].addNew=!1;var traveller={minAge:1,maxAge:120,gender:"Male",relation:"",age:18};traveller.traveller_id=$scope.travellersList.length+1,traveller.status=!0,traveller.addNew=!0,$scope.travellersList.push(traveller)}else $scope.disableAddButton=!0;$scope.changeRelation($scope.travellersList[id].relation)},$scope.removeTraveller=function(id){$scope.travellersList[id].status||($scope.travellersList.splice(id,1),$scope.travellersList.length<8&&($scope.disableAddButton=!1,$scope.travellersList[$scope.travellersList.length-1].addNew=!0))},$scope.closeTravellerModal=function(){$scope.travellersList=$scope.oldtravellersList,$scope.modalTraveller=!1},$scope.getAgeArray=function(minAge,maxAge){for(var ageArray=[],j=minAge;j<=maxAge;0,j++)ageArray.push(j);return ageArray},$scope.changeRelation=function(relation){!function(){for(var isGenderValid=!1,i=0;i<$scope.travellersList.length;i++)if($scope.travellersList[i].relation!=FATHER&&$scope.travellersList[i].relation!=SON||($scope.travellersList[i].gender=MALE,isGenderValid=!0),$scope.travellersList[i].relation!=MOTHER&&$scope.travellersList[i].relation!=DAUGHTER||($scope.travellersList[i].gender=FEMALE,isGenderValid=!0),$scope.travellersList[i].relation==SELF)for(var j=0;j<$scope.travellersList.length;j++)$scope.travellersList[j].relation==SPOUSE&&($scope.travellersList[j].gender=$scope.travellersList[i].gender==MALE?FEMALE:MALE,isGenderValid=!0)}();for(var i=0;i<$scope.relationTypeCopy.length;i++)isSelected($scope.relationTypeCopy[i].member)||($scope.relationTypeCopy[i].val=!1),$scope.relationTypeCopy[i].member==relation&&isSelected(relation)&&relation!=SON&&relation!=DAUGHTER&&($scope.relationTypeCopy[i].val=!0);$scope.relationType=angular.copy($scope.relationTypeCopy)},$scope.validateFamilyForm=function(){$scope.familyErrors=[];for(var ageOfSelf,ageOfSpouse,lesserAge,submitTravellersForm=!0,i=0;i<$scope.travellersList.length;i++)$scope.travellersList[i].relation==SELF?$scope.travellersList[i].status&&(ageOfSelf=Number($scope.travellersList[i].age)):$scope.travellersList[i].relation==SPOUSE?$scope.travellersList[i].status&&(ageOfSpouse=Number($scope.travellersList[i].age)):$scope.travellersList[i].relation==FATHER&&$scope.travellersList[i].status&&Number($scope.travellersList[i].age);for(i=0;i<$scope.travellersList.length;i++)lesserAge="undefined"==ageOfSelf||""==ageOfSelf||null==ageOfSelf?ageOfSpouse:ageOfSpouse<ageOfSelf?ageOfSpouse:ageOfSelf,1==$scope.travellersList[i].status&&($scope.travellersList[i].relation==SON&&$scope.travellersList[i].age>lesserAge-18&&0==p365Includes($scope.familyErrors,"Child's age should be at least 18 years lesser than the younger parent")&&($scope.familyErrors.push("Child's age should be at least 18 years lesser than the younger parent"),submitTravellersForm=!1),$scope.travellersList[i].relation==DAUGHTER&&$scope.travellersList[i].age>lesserAge-18&&0==p365Includes($scope.familyErrors,"Child's age should be at least 18 years lesser than the younger parent")&&($scope.familyErrors.push("Child's age should be at least 18 years lesser than the younger parent"),submitTravellersForm=!1),($scope.travellersList[i].relation==FATHER||$scope.travellersList[i].relation==MOTHER)&&$scope.travellersList[i].age<ageOfSelf+18&&0==p365Includes($scope.familyErrors,"Your Parents' age should be at least 18 years more than your age")&&($scope.familyErrors.push("Your Parents' age should be at least 18 years more than your age"),submitTravellersForm=!1));return submitTravellersForm},$scope.submitTravellers=function(){var submitTravellersForm;submitTravellersForm=$scope.validateFamilyForm();var travellersCounter=0,travellerSelectionStatus=!1,relationStatus=!1;$scope.quoteParam.travellers=[],$scope.travellersList=$filter("filter")($scope.travellersList,function(value){return 1==value.status});for(var i=0;i<$scope.travellersList.length;i++)if(1==$scope.travellersList[i].status)if(void 0!=$scope.travellersList[i].relation&&""!=$scope.travellersList[i].relation){var member={};member.traveller_id=i+1,member.age=Number($scope.travellersList[i].age),member.gender=$scope.travellersList[i].gender,member.minAge=1,member.maxAge=120,member.relation=$scope.travellersList[i].relation,member.status=$scope.travellersList[i].status,$scope.quoteParam.travellers.push(member),travellerSelectionStatus=!0,relationStatus=!0,travellersCounter++}else relationStatus=!1;else travellerSelectionStatus=!1;$scope.quoteParam.travellers[$scope.quoteParam.travellers.length-1].addNew=!0,$scope.travellersList=$scope.quoteParam.travellers,$scope.numberOfTraveller=travellersCounter,localStorageService.set("selectedTravellersForTravel",$scope.travellersList),localStorageService.set("selectedTravellersForTravelReset",$scope.travellersList),localStorageService.set("relationTypeList",$scope.relationType),$scope.quoteParam.planType=travellersCounter>1?"F":"I",travellerSelectionStatus?relationStatus?1==submitTravellersForm&&($scope.modalTraveller=!1,$scope.callSingleClickQuote()):$scope.familyErrors.push("Please select relation of traveller."):$scope.familyErrors.push("Please select at least one member."),$scope.selectedTravellerArray=$scope.quoteParam.travellers},$scope.errorMessage=function(errorMsg){String($rootScope.travelQuoteResult)==$scope.globalLabel.errorMessage.undefinedError||0==$rootScope.travelQuoteResult.length?($scope.errorRespCounter=!1,$rootScope.instantQuoteSummaryStatus=!1,$rootScope.instantQuoteSummaryError=errorMsg,$rootScope.tabSelectionStatus=!0,$scope.instantQuoteTravelForm=!1):$rootScope.travelQuoteResult.length>0&&($rootScope.instantQuoteSummaryStatus=!0,$rootScope.viewOptionDisabled=!1,$rootScope.tabSelectionStatus=!0,$scope.instantQuoteTravelForm=!1),$rootScope.loading=!1},$scope.tooltipPrepare=function(travelResult){var i,resultCarrierId=[],testCarrierId=[];for($rootScope.resultCarrierId=[],i=0;i<travelResult.length;i++)if(Number(travelResult[i].netPremium)>0){var carrierInfo={};if(carrierInfo.productInfo=travelResult[i],$scope.quote.quoteParam.totalCount=travelResult[i].totalTravellers,localStorageService.set("quote",$scope.quote),localStorageService.set("travelQuoteInputParamaters",$scope.quote),void 0!=carrierInfo.productInfo.sumInsuredCurrency&&""!=carrierInfo.productInfo.sumInsuredCurrency)for(var k=0;k<$scope.currencySymbols.length;k++)$scope.currencySymbols[k].symbol==carrierInfo.productInfo.sumInsuredCurrency&&(carrierInfo.sumInsuredCurrencySymbol=$sce.trustAsHtml($scope.currencySymbols[k].htmlCode));else carrierInfo.productInfo.sumInsuredCurrency=$scope.currencySymbols[0].symbol,carrierInfo.sumInsuredCurrencySymbol=$sce.trustAsHtml($scope.currencySymbols[0].htmlCode);carrierInfo.id=travelResult[i].carrierId,carrierInfo.name=travelResult[i].insuranceCompany,carrierInfo.annualPremium=travelResult[i].grossPremium,carrierInfo.claimsRating=travelResult[i].insurerIndex,$rootScope.wordPressEnabled&&(carrierInfo.businessLineId="5",carrierInfo.sumInsured=travelResult[i].sumInsured),0==p365Includes(testCarrierId,travelResult[i].carrierId)&&(resultCarrierId.push(carrierInfo),testCarrierId.push(travelResult[i].carrierId))}for($rootScope.resultedCarriers=resultCarrierId,$rootScope.resultCarrierId=resultCarrierId,i=0;i<resultCarrierId.length;i++)$rootScope.quoteResultInsurerList+="<li>"+resultCarrierId[i].name+"</li>";$rootScope.quoteResultInsurerList+="</ul>",$rootScope.calculatedQuotesLength=2==String(travelResult.length).length?String(travelResult.length):"0"+String(travelResult.length),setTimeout(function(){scrollv=new scrollable({wrapperid:"scrollable-v",moveby:4,mousedrag:!0})},2e3)},$scope.processResult=function(){$rootScope.travelQuoteResult.length>0&&($rootScope.instantQuoteSummaryStatus=!0,$rootScope.viewOptionDisabled=!1,$rootScope.tabSelectionStatus=!0,$rootScope.enabledProgressLoader=!1,$rootScope.loading=!1,$scope.instantQuoteTravelForm=!1,$rootScope.campaignFlag=!0,$rootScope.travelQuoteResult=$filter("orderBy")($rootScope.travelQuoteResult,"grossPremium"),localStorageService.get("selectedBusinessLineId")==$scope.globalLabel.businessLineType.travel&&$scope.tooltipPrepare($rootScope.travelQuoteResult))},$scope.singleClickTravelQuote=function(){setTimeout(function(){if(!$scope.travelInstantQuoteForm.$invalid){$rootScope.tabSelectionStatus=!1,$rootScope.loading=!0,$scope.instantQuoteTravelForm=!0,$scope.quote={},localStorageService.set("selectedBusinessLineId",$scope.globalLabel.businessLineType.travel),$scope.quoteParam.documentType=$scope.globalLabel.documentType.quoteRequest,$scope.quoteParam.quoteType=localStorageService.get("selectedBusinessLineId"),$scope.quote.requestType=$scope.globalLabel.request.travelRequestType,delete $scope.quote.documentType,$scope.quote.quoteParam=$scope.quoteParam,"Y"==$scope.quote.quoteParam.pedStatus&&localStorageService.set("pedDetails",$scope.selectedDisease.diseaseList),$scope.ageList=[];for(var i=0;i<$scope.quoteParam.travellers.length;i++)$scope.ageList.push($scope.quoteParam.travellers[i].age);$scope.quote.quoteParam.quoteMinAge=getMinAge($scope.ageList),$scope.quote.quoteParam.quoteMaxAge=getMaxAge($scope.ageList),$scope.quote.travelDetails=$scope.travelDetails,localStorageService.set("quote",$scope.quote),localStorageService.set("travelQuoteInputParamaters",$scope.quote),localStorageService.set("travelDetails",$scope.travelDetails),localStorageService.set("isDiseasedForTravel",$scope.isDiseased),localStorageService.set("selectedDisease",$scope.selectedDisease),localStorageService.set("diseaseList",$scope.diseaseList),localStorageService.set("selectedTravellersForTravel",$scope.travellersList),localStorageService.set("selectedTravellerArray",$scope.selectedTravellerArray),localStorageService.set("relationTypeList",$scope.relationType),localStorageService.set("quoteReset",$scope.quote),localStorageService.set("travelQuoteInputParamatersReset",$scope.quote),localStorageService.set("travelDetailsReset",$scope.travelDetails),localStorageService.set("isDiseasedForTravelReset",$scope.isDiseased),localStorageService.set("selectedDiseaseReset",$scope.selectedDisease),localStorageService.set("diseaseListReset",$scope.diseaseList),localStorageService.set("selectedTravellersForTravelReset",$scope.travellersList),localStorageService.set("selectedTravellerArrayReset",$scope.selectedTravellerArray),$scope.quote=prepareQuoteRequest($scope.quote),localStorageService.set("quote",$scope.quote),localStorageService.set("travelQuoteInputParamaters",$scope.quote),$scope.requestId=null;localStorageService.get("quoteUserInfo");RestAPI.invoke($scope.globalLabel.getRequest.quoteTravel,$scope.quote).then(function(callback){$rootScope.travelQuoteRequest=[],callback.responseCode==$scope.globalLabel.responseCode.success?($scope.responseCodeList=[],$scope.requestId=callback.QUOTE_ID,localStorageService.set("TRAVEL_UNIQUE_QUOTE_ID",$scope.requestId),callback.encryptedQuoteId&&($scope.UNIQUE_QUOTE_ID_ENCRYPTED=callback.encryptedQuoteId,localStorageService.set("TRAVEL_UNIQUE_QUOTE_ID_ENCRYPTED",$scope.UNIQUE_QUOTE_ID_ENCRYPTED),console.log("TRAVEL_UNIQUE_QUOTE_ID_ENCRYPTED",callback.encryptedQuoteId)),$rootScope.travelQuoteRequest=callback.data,String($rootScope.travelQuoteResult)!=$scope.globalLabel.errorMessage.undefinedError&&$rootScope.travelQuoteResult.length>0&&($rootScope.travelQuoteResult.length=0),$rootScope.travelQuoteResult=[],angular.forEach($rootScope.travelQuoteRequest,function(obj,i){var request={},header={};header.messageId=messageIDVar,header.campaignID=campaignIDVar,header.source=sourceOrigin,header.transactionName=$scope.globalLabel.transactionName.travelQuoteResult,header.deviceId=deviceIdOrigin,request.header=header,request.body=obj,$http({method:"POST",url:getQuoteCalcLink,data:request}).success(function(callback,status){var travelQuoteResponse=JSON.parse(callback);if(travelQuoteResponse.QUOTE_ID==$scope.requestId)if($scope.responseCodeList.push(travelQuoteResponse.responseCode),travelQuoteResponse.responseCode==$scope.globalLabel.responseCode.success){for(var i=0;i<$rootScope.travelQuoteRequest.length;i++)$rootScope.travelQuoteRequest[i].messageId==travelQuoteResponse.messageId&&($rootScope.travelQuoteResult.push(travelQuoteResponse.data.quotes[0]),$rootScope.travelQuoteRequest[i].status=1);$scope.processResult()}else for(i=0;i<$rootScope.travelQuoteRequest.length;i++)$rootScope.travelQuoteRequest[i].messageId==travelQuoteResponse.messageId&&($rootScope.travelQuoteRequest[i].status=2,$rootScope.travelQuoteRequest[i].message=$sce.trustAsHtml($scope.globalLabel.validationMessages.generalisedTravelErrMsg))}).error(function(data,status){$scope.responseCodeList.push($scope.globalLabel.responseCode.systemError)})}),$scope.$watch("responseCodeList",function(newValue,oldValue,scope){if(p365Includes($scope.responseCodeList,$scope.globalLabel.responseCode.success)&&($rootScope.loading=!1),$scope.responseCodeList.length==$rootScope.travelQuoteRequest.length){$rootScope.loading=!1,$rootScope.setTooltip=!1;for(var i=0;i<$rootScope.travelQuoteRequest.length;i++)0==$rootScope.travelQuoteRequest[i].status&&($rootScope.travelQuoteRequest[i].status=2,$rootScope.travelQuoteRequest[i].message=$sce.trustAsHtml($scope.globalLabel.validationMessages.generalisedTravelErrMsg));p365Includes($scope.responseCodeList,$scope.globalLabel.responseCode.quoteNotAvailable)?$scope.errorMessage($scope.globalLabel.validationMessages.productNotFoundMsg):$scope.errorMessage($sce.trustAsHtml($scope.globalLabel.validationMessages.generalisedTravelErrMsg))}},!0)):($scope.responseCodeList=[],String($rootScope.travelQuoteResult)!=$scope.globalLabel.errorMessage.undefinedError&&$rootScope.travelQuoteResult.length>0&&($rootScope.travelQuoteResult.length=0),$rootScope.travelQuoteResult=[],$scope.errorMessage(callback.message))})}},100)},$scope.callSingleClickQuote=function(){var urlPattern=$location.path();$rootScope.wordPressEnabled&&"/travel-insurance"!=urlPattern&&"/travel-insuranceMobi"!=urlPattern&&"/mobiDiwaliTravelInsurance"!=$location.path()&&"/diwaliTravelInsurance"!=$location.path()||$scope.singleClickTravelQuote()},$scope.checkQuestionStatus=function(quoteParam){"Y"==quoteParam.travellingFromIndia?$scope.show_error_msg_1=!1:$scope.show_error_msg_1=!0,"Y"==quoteParam.isIndian?$scope.show_error_msg_2=!1:($scope.show_error_msg_2=!0,"Y"==quoteParam.isOciPioStatus?($scope.show_error_msg_1=!1,$scope.show_error_msg_2=!0,$scope.show_error_msg_3=!1):($scope.show_error_msg_1=!1,$scope.show_error_msg_2=!0,$scope.show_error_msg_3=!0))},$scope.prePopulateFields=function(){if(localStorageService.get("pedDetails")&&($scope.selectedDisease.diseaseList=localStorageService.get("pedDetails")),travelDetailsCookie){$scope.travelDetails=travelDetailsCookie;var startDate=angular.copy($scope.travelDetails.startdate),endDay=startDate.split("/")[0],endMonth=startDate.split("/")[1],endYear=startDate.split("/")[2];if(new Date(Date.parse(endMonth+"/"+endDay+"/"+endYear))<new Date){var d=(today=new Date).getDate(),m=today.getMonth()+1;$scope.travelDetails.startdate=String((d<=9?"0"+d:d)+"/"+(m<=9?"0"+m:m)+"/"+today.getFullYear()),(travelEndDate=new Date(Date.parse((m<=9?"0"+m:m)+"/"+(d<=9?"0"+d:d)+"/"+today.getFullYear()))).setDate(travelEndDate.getDate()+1),d=travelEndDate.getDate(),m=travelEndDate.getMonth()+1,$scope.travelDetails.enddate=String((d<=9?"0"+d:d)+"/"+(m<=9?"0"+m:m)+"/"+travelEndDate.getFullYear())}$scope.initPolicyDates()}else{var today,travelEndDate;d=(today=new Date).getDate(),m=today.getMonth()+1;$scope.travelDetails.startdate=String((d<=9?"0"+d:d)+"/"+(m<=9?"0"+m:m)+"/"+today.getFullYear()),(travelEndDate=new Date(Date.parse((m<=9?"0"+m:m)+"/"+(d<=9?"0"+d:d)+"/"+today.getFullYear()))).setDate(travelEndDate.getDate()+1),d=travelEndDate.getDate(),m=travelEndDate.getMonth()+1,$scope.travelDetails.enddate=String((d<=9?"0"+d:d)+"/"+(m<=9?"0"+m:m)+"/"+travelEndDate.getFullYear()),$scope.travelDetails.tripType=$scope.tripTypeList[0].tripType,$scope.initPolicyDates()}travelQuoteCookie&&($scope.quoteParam=travelQuoteCookie.quoteParam),$scope.ageList=[];for(var i=0;i<$scope.quoteParam.travellers.length;i++){$scope.ageList.push($scope.quoteParam.travellers[i].age),$scope.quoteParam.travellers[i].status=!0,$scope.quoteParam.travellers[i].age=parseInt(String($scope.quoteParam.travellers[i].age));for(var j=0;j<$scope.relationTypeCopy.length;j++)$scope.relationTypeCopy[j].member==$scope.quoteParam.travellers[i].relation&&($scope.quoteParam.travellers[i].relation==SON&&$scope.quoteParam.travellers[i].relation==DAUGHTER||($scope.relationTypeCopy[j].val=!0))}$scope.relationType=angular.copy($scope.relationTypeCopy),$scope.numberOfTraveller=$scope.quoteParam.travellers.length,$scope.travellersList=$scope.quoteParam.travellers},$scope.fetchSumInsured=function(){var sumInsuredDocId=$scope.globalLabel.documentType.travelSumInsuredList;getDocUsingId(RestAPI,sumInsuredDocId,function(suminsuredList){$scope.sumInsuredList=suminsuredList.SumInsured,localStorageService.set("SumInsuredList",$scope.sumInsuredList),$scope.fetchDiseaseListFormDB()})},$scope.fetchDiseaseListFormDB=function(){getListFromDB(RestAPI,"","Disease",$scope.globalLabel.request.findAppConfig,function(callback){callback.responseCode==$scope.globalLabel.responseCode.success&&($scope.diseaseList=callback.data,localStorageService.set("diseaseList",$scope.diseaseList))})},$scope.fetchDefaultInputParamaters=function(defaultQuoteStatus,defaultInputParamCallback){defaultQuoteStatus?(travelQuoteCookie.quoteParam&&($scope.quoteParam=travelQuoteCookie.quoteParam),localStorageService.get("SumInsuredList")?$scope.sumInsuredList=localStorageService.get("SumInsuredList"):$scope.fetchSumInsured(),localStorageService.get("diseaseList")&&($scope.diseaseList=localStorageService.get("diseaseList")),localStorageService.get("isDiseasedForTravel")&&($scope.isDiseased=localStorageService.get("isDiseasedForTravel")),travelDetailsCookie&&($scope.travelDetails=travelDetailsCookie)):($scope.quoteParam=defaultTravelQuoteParam.quoteParam,$scope.travelDetails=defaultTravelQuoteParam.travelDetails,$rootScope.wordPressEnabled&&($scope.quote={},$scope.quote.quoteParam=$scope.quoteParam,$scope.quote.travelDetails=$scope.travelDetails,localStorageService.set("selectedBusinessLineId",$scope.globalLabel.businessLineType.travel),localStorageService.set("travelQuoteInputParamaters",$scope.quote),localStorageService.set("travelDetails",$scope.travelDetails)),$scope.fetchSumInsured(),$scope.isDiseased=!1),$scope.checkQuestionStatus($scope.quoteParam),$scope.callSingleClickQuote(),$scope.prePopulateFields(),$rootScope.loading=!1},null!==travelQuoteCookie&&String(travelQuoteCookie)!==$scope.globalLabel.errorMessage.undefinedError?$scope.fetchDefaultInputParamaters(!0,function(){}):$scope.fetchDefaultInputParamaters(!1,function(){}),$scope.$on("callSingleClickTravelQuote",function(){$scope.singleClickTravelQuote()}),$scope.getContinentList=function(countryName){return $http.get(getServiceLink+$scope.globalLabel.documentType.destinationDetails+"&q="+countryName).then(function(response){return JSON.parse(response.data).data})},$scope.newDestination=function(destination){return{name:destination}},$scope.getDisease=function(){return $scope.selectedDisease.diseaseList},$scope.diseaseClick=function(){if("Y"==$scope.quoteParam.pedStatus)$scope.isDiseased=!0,$scope.toggleHealth();else{$scope.isDiseased=!1,$scope.selectedDisease.diseaseList=[];for(var i=0;i<$scope.diseaseList.length;i++)$scope.diseaseList[i].travellersList=[];setTimeout(function(){$scope.callSingleClickQuote()},100)}},$scope.checkDisease=function(value,checked){var idx=$scope.selectedDisease.diseaseList.indexOf(value);idx>=0&&!checked&&$scope.selectedDisease.diseaseList.splice(idx,1),idx<0&&checked&&$scope.selectedDisease.diseaseList.push(value)},$scope.modalHealth=!1,$scope.toggleHealth=function(){$scope.instantQuoteHealthForm||($scope.oldSelectedDiseaseList=angular.copy($scope.selectedDisease.diseaseList),$scope.selectedTravellerArray=$scope.quoteParam.travellers,$scope.modalHealth=!$scope.modalHealth)},$scope.closePreExistingDiseaseModal=function(){for(var deleteList=[],i=0;i<$scope.diseaseList.length;i++)1==p365Includes($scope.selectedDisease.diseaseList,$scope.diseaseList[i].diseaseId)&&0==$scope.diseaseList[i].travellersList.length?deleteList.push($scope.diseaseList[i].diseaseId):0==p365Includes($scope.oldSelectedDiseaseList,$scope.diseaseList[i].diseaseId)&&deleteList.push($scope.diseaseList[i].diseaseId);0==$scope.selectedDisease.diseaseList.length&&($scope.quoteParam.pedStatus="N",$scope.isDiseased=!1),$scope.selectedDisease.diseaseList=$scope.selectedDisease.diseaseList.filter(function(obj){return-1===deleteList.indexOf(obj)}),$scope.modalHealth=!1},$scope.submitPreDiseaseList=function(){var i,submitDiseaseForm=!0;if($scope.ratingParam.criticalIllness="N",$scope.ratingParam.organDonar="N",$scope.selectedDisease.diseaseList.length>0)for(i=0;i<$scope.diseaseList.length;i++)1==p365Includes($scope.selectedDisease.diseaseList,$scope.diseaseList[i].diseaseId)&&("OrganDonar"==$scope.diseaseList[i].diseaseType&&($scope.ratingParam.organDonar="Y"),"Critical"==$scope.diseaseList[i].diseaseType&&($scope.ratingParam.criticalIllness="Y"),0==$scope.diseaseList[i].travellersList.length&&($scope.diseaseError="Please select sumembers against each selected disease",submitDiseaseForm=!1));else submitDiseaseForm=!1,$scope.diseaseError="Please select disease before submit.";if(submitDiseaseForm){for($scope.modalHealth=!1,$scope.diseaseError="",0==$scope.selectedDisease.diseaseList.length&&($scope.quoteParam.pedStatus="N",$scope.isDiseased=!1),i=0;i<$scope.selectedTravellerArray.length;i++){$scope.selectedTravellerArray[i].diseaseDetails=[],$scope.diseaseDetails=[];for(var j=0;j<$scope.diseaseList.length;j++)if(1==p365Includes($scope.selectedDisease.diseaseList,$scope.diseaseList[j].diseaseId)){for(var k=0;k<$scope.diseaseList[j].travellersList.length;k++)if($scope.selectedTravellerArray[i].traveller_id==$scope.diseaseList[j].travellersList[k].traveller_id){$scope.diseaseList[j].travellersList[k].status=!0;var diseaseDetail={};diseaseDetail.diseaseCode=$scope.diseaseList[j].diseaseId,diseaseDetail.diseaseName=$scope.diseaseList[j].disease,diseaseDetail.masterDiseaseCode=$scope.diseaseList[j].diseaseCode,diseaseDetail.applicable=!0,$scope.diseaseDetails.push(diseaseDetail)}}else $scope.diseaseList[j].travellersList=[];$scope.diseaseDetails.length>0&&(localStorageService.set("diseaseList",$scope.diseaseList),$scope.selectedTravellerArray[i].diseaseDetails=$scope.diseaseDetails)}$scope.quoteParam.travellers=$scope.selectedTravellerArray,localStorageService.set("selectedTravellerArray",$scope.selectedTravellerArray),setTimeout(function(){$scope.callSingleClickQuote()},100)}},$scope.removePreDisease=function(data){var i;for(i=0;i<$scope.selectedDisease.diseaseList.length;i++)if($scope.selectedDisease.diseaseList[i]==data.diseaseId){$scope.selectedDisease.diseaseList.splice(i,1);break}for(i=0;i<$scope.diseaseList.length;i++)if($scope.diseaseList[i].diseaseId==data.diseaseId){$scope.diseaseList[i].travellersList=[];break}0==$scope.selectedDisease.diseaseList.length&&($scope.quoteParam.pedStatus="N",$scope.isDiseased=!1),$scope.submitPreDiseaseList()}}]),angular.module("travelResult",["CoreComponentApp","LocalStorageModule","checklist-model","ngMessages","a8m.unique","ngScrollable"]).controller("travelResultController",["$scope","$rootScope","$timeout","RestAPI","localStorageService","$location","$http","$window","$sce","$filter",function($scope,$rootScope,$timeout,RestAPI,localStorageService,$location,$http,$window,$sce,$filter){$rootScope.landingFlag=!1;var applicationLabels=localStorageService.get("applicationLabels");$scope.globalLabel=applicationLabels.globalLabels;var SELF="Self",SPOUSE="Spouse",SON="Son",DAUGHTER="Daughter",FATHER="Father",MOTHER="Mother",FEMALE="Female",MALE="Male";if($rootScope.loaderContent={businessLine:"5",header:"Travel Insurance",desc:$sce.trustAsHtml($scope.globalLabel.applicationLabels.travel.proverbResult)},$rootScope.title=$scope.globalLabel.policies365Title.travelResultQuote,$rootScope.isBackButtonPressed=!1,$rootScope.wordPressEnabled?$scope.rippleColor="":$scope.rippleColor="#f8a201",$scope.travelInputSectionHTML=wp_path+"buy/travel/html/TravelInputSection.html",$scope.travelShareEmailSectionHTML=wp_path+"buy/travel/html/TravelShareEmailSection.html",$scope.travelPremiumDetailSectionHTML=wp_path+"buy/travel/html/TravelPremiumDetailsSection.html",localStorageService.get("userLoginInfo")&&($rootScope.userLoginStatus=localStorageService.get("userLoginInfo").status,$rootScope.username=localStorageService.get("userLoginInfo").username),$scope.travelInputSection=!1,$rootScope.loading=!0,$scope.quoteUserInfo={},$scope.quoteUserInfo.messageId="",$scope.quoteUserInfo.termsCondition=!0,$scope.UNIQUE_QUOTE_ID_ENCRYPTED=localStorageService.get("TRAVEL_UNIQUE_QUOTE_ID_ENCRYPTED"),console.log("TRAVEL_UNIQUE_QUOTE_ID_ENCRYPTED",localStorageService.get("TRAVEL_UNIQUE_QUOTE_ID_ENCRYPTED")),$scope.modalView=!1,$rootScope.agencyPortalEnabled){var quoteUserInfoCookie=localStorageService.get("quoteUserInfo");$scope.createLeadAP=$location.search().createLead,quoteUserInfoCookie&&"true"!=$scope.createLeadAP||(messageIDVar="",$scope.modalView=!0)}function changeCurrencySymbol(quoteResults){for(var j=0;j<quoteResults.length;j++)if(void 0!=quoteResults[j].sumInsuredCurrency&&""!=quoteResults[j].sumInsuredCurrency)for(var k=0;k<$scope.currencySymbols.length;k++)$scope.currencySymbols[k].symbol==quoteResults[j].sumInsuredCurrency&&(quoteResults[j].sumInsuredCurrencySymbol=$sce.trustAsHtml($scope.currencySymbols[k].htmlCode),$scope.sumInsuredCurrencySymbol=$sce.trustAsHtml($scope.currencySymbols[k].htmlCode));else quoteResults[j].sumInsuredCurrency=$scope.currencySymbols[0].symbol,quoteResults[j].sumInsuredCurrencySymbol=$sce.trustAsHtml($scope.currencySymbols[0].htmlCode),$scope.sumInsuredCurrencySymbol=$sce.trustAsHtml($scope.currencySymbols[0].htmlCode);return quoteResults}$scope.currencySymbols=currencySymbolList,$scope.initPolicyDates=function(){var startDateOptions={},endDateOptions={},tripType=$scope.travelDetails.tripType;if("single"==tripType){$rootScope.flag?startDateOptions.minimumDateStringFormat=$scope.travelDetails.startdate:startDateOptions.minimumDayLimit=0,startDateOptions.maximumDayLimit=60,startDateOptions.changeMonth=!0,startDateOptions.changeYear=!0,startDateOptions.dateFormat="dd/mm/yy",$scope.travelStartDateOptions=setP365DatePickerProperties(startDateOptions);var endDay=(startDate=angular.copy($scope.travelDetails.startdate)).split("/")[0],endMonth=startDate.split("/")[1],endYear=startDate.split("/")[2];(travelEndDateMin=new Date(Date.parse(endMonth+"/"+endDay+"/"+endYear))).setDate(travelEndDateMin.getDate()+1);var travelEndDateMax=new Date(travelEndDateMin);travelEndDateMax.setDate(travelEndDateMin.getDate()+179),endDateOptions.minimumDateStringFormat=travelEndDateMin,endDateOptions.maximumDateStringFormat=travelEndDateMax,endDateOptions.changeMonth=!0,endDateOptions.changeYear=!0,endDateOptions.dateFormat="dd/mm/yy",$scope.travelEndDateOptions=setP365DatePickerProperties(endDateOptions)}else if("multi"==tripType){startDateOptions.minimumDayLimit=0,startDateOptions.maximumDayLimit=60,startDateOptions.changeMonth=!0,startDateOptions.changeYear=!0,startDateOptions.dateFormat="dd/mm/yy",$scope.travelStartDateOptions=setP365DatePickerProperties(startDateOptions);var startDate,travelEndDateMin;endDay=(startDate=angular.copy($scope.travelDetails.startdate)).split("/")[0],endMonth=startDate.split("/")[1],endYear=startDate.split("/")[2];(travelEndDateMin=new Date(Date.parse(endMonth+"/"+endDay+"/"+endYear))).setDate(travelEndDateMin.getDate()+364);var d=travelEndDateMin.getDate(),m=travelEndDateMin.getMonth()+1;$scope.travelDetails.enddate=String((d<=9?"0"+d:d)+"/"+(m<=9?"0"+m:m)+"/"+travelEndDateMin.getFullYear()),endDateOptions.minimumDateStringFormat=$scope.travelDetails.enddate,endDateOptions.maximumDateStringFormat=$scope.travelDetails.enddate,endDateOptions.changeMonth=!0,endDateOptions.changeYear=!0,endDateOptions.dateFormat="dd/mm/yy",$scope.travelEndDateOptions=setP365DatePickerProperties(endDateOptions)}},$scope.getUpdatedTravelDates=function(){var startDateOptions={},endDateOptions={},tripType=$scope.travelDetails.tripType;if("single"==tripType){startDateOptions.minimumDayLimit=0,startDateOptions.maximumDayLimit=60,startDateOptions.changeMonth=!0,startDateOptions.changeYear=!0,startDateOptions.dateFormat="dd/mm/yy",$scope.travelStartDateOptions=setP365DatePickerProperties(startDateOptions);var endDay=(startDate=angular.copy($scope.travelDetails.startdate)).split("/")[0],endMonth=startDate.split("/")[1],endYear=startDate.split("/")[2];(travelEndDateMin=new Date(Date.parse(endMonth+"/"+endDay+"/"+endYear))).setDate(travelEndDateMin.getDate()+1);var d=travelEndDateMin.getDate(),m=travelEndDateMin.getMonth()+1;$scope.travelDetails.enddate=String((d<=9?"0"+d:d)+"/"+(m<=9?"0"+m:m)+"/"+travelEndDateMin.getFullYear());var travelEndDateMax=new Date(travelEndDateMin);travelEndDateMax.setDate(travelEndDateMin.getDate()+179),endDateOptions.minimumDateStringFormat=$scope.travelDetails.enddate,endDateOptions.maximumDateStringFormat=travelEndDateMax,endDateOptions.changeMonth=!0,endDateOptions.changeYear=!0,endDateOptions.dateFormat="dd/mm/yy",$scope.travelEndDateOptions=setP365DatePickerProperties(endDateOptions)}else if("multi"==tripType){startDateOptions.minimumDayLimit=0,startDateOptions.maximumDayLimit=60,startDateOptions.changeMonth=!0,startDateOptions.changeYear=!0,startDateOptions.dateFormat="dd/mm/yy",$scope.travelStartDateOptions=setP365DatePickerProperties(startDateOptions);var startDate,travelEndDateMin;endDay=(startDate=angular.copy($scope.travelDetails.startdate)).split("/")[0],endMonth=startDate.split("/")[1],endYear=startDate.split("/")[2];(travelEndDateMin=new Date(Date.parse(endMonth+"/"+endDay+"/"+endYear))).setDate(travelEndDateMin.getDate()+364);d=travelEndDateMin.getDate(),m=travelEndDateMin.getMonth()+1;$scope.travelDetails.enddate=String((d<=9?"0"+d:d)+"/"+(m<=9?"0"+m:m)+"/"+travelEndDateMin.getFullYear()),endDateOptions.minimumDateStringFormat=$scope.travelDetails.enddate,endDateOptions.maximumDateStringFormat=$scope.travelDetails.enddate,endDateOptions.changeMonth=!0,endDateOptions.changeYear=!0,endDateOptions.dateFormat="dd/mm/yy",$scope.travelEndDateOptions=setP365DatePickerProperties(endDateOptions)}},$scope.toggleDate=function(){$scope.getUpdatedTravelDates()},$scope.toggleTripType=function(){$scope.travelDetails.tripDuration=$scope.tripDurationList[0].duration,$scope.getUpdatedTravelDates()},$scope.showTripDetails=function(){$scope.travelInputSection=!$scope.travelInputSection},$rootScope.baseEnvEnabled&&!$rootScope.wordPressEnabled&&($location.search().messageId&&(messageIDVar=$location.search().messageId,$scope.quoteUserInfo.messageId=$location.search().messageId),$scope.travelInputSection=!0),$scope.showPolicyDetails=function(){$scope.travelInputSection=!$scope.travelInputSection},$scope.backToQuoteScreen=function(){$rootScope.wordPressEnabled&&($rootScope.isBackButtonPressed=!0),$rootScope.isProfessionalJourneySelected?$location.path("/professionalJourneyResult"):$location.path("/PBQuote")},$scope.groupPlans=function(data){var morePlans=[];$rootScope.travelQuoteResult=changeCurrencySymbol($rootScope.travelQuoteResult);for(var i=0;i<$rootScope.travelQuoteResult.length;i++)data.carrierId==$rootScope.travelQuoteResult[i].carrierId&&data.productId!=$rootScope.travelQuoteResult[i].productId&&morePlans.push($rootScope.travelQuoteResult[i]);return morePlans},$scope.isMoreQuoteToShow=function(morePlans,carrierId){for(var i=0;i<morePlans.length;i++)if(morePlans[i].carrierId==carrierId)return morePlans.length>0},$scope.checkQuestionStatus=function(quoteParam){"Y"==quoteParam.travellingFromIndia?$scope.show_error_msg_1=!1:$scope.show_error_msg_1=!0,"Y"==quoteParam.isIndian?$scope.show_error_msg_2=!1:($scope.show_error_msg_2=!0,"Y"==quoteParam.isOciPioStatus?($scope.show_error_msg_1=!1,$scope.show_error_msg_2=!0,$scope.show_error_msg_3=!1):($scope.show_error_msg_1=!1,$scope.show_error_msg_2=!0,$scope.show_error_msg_3=!0))},$scope.init=function(){$rootScope.loading=!1,$scope.insuranceCompanyList={},$scope.insuranceCompanyList.selectedInsuranceCompany=[],$scope.quoteFinalResult={},$scope.quote={},$scope.selectedDisease={},$scope.travelDetails={},$scope.morePlans=[],$scope.selectedFamilyArray=[],$scope.selectedDisease.diseaseList=[],$scope.quote=localStorageService.get("travelQuoteInputParamaters"),$scope.quoteParam=localStorageService.get("travelQuoteInputParamaters").quoteParam,$scope.checkQuestionStatus($scope.quoteParam),$scope.travelDetails=localStorageService.get("travelQuoteInputParamaters").travelDetails,$scope.initPolicyDates(),$scope.isDiseased=localStorageService.get("isDiseasedForTravel"),$scope.selectedDisease=localStorageService.get("selectedDisease"),$scope.diseaseList=localStorageService.get("diseaseList"),$scope.travellersList=localStorageService.get("selectedTravellersForTravel");for(var i=0;i<$scope.travellersList.length;i++)$scope.travellersList[i].status=!0;function isSelected(value){for(var returnvalue=!1,i=0;i<$scope.travellersList.length;i++)$scope.travellersList[i].relation==value&&(returnvalue=!0);return returnvalue}$scope.selectedTravellerArray=localStorageService.get("selectedTravellerArray"),$scope.sumInsuredList=localStorageService.get("SumInsuredList"),$scope.relationType=null!=localStorageService.get("relationTypeList")||void 0!=localStorageService.get("relationTypeList")?localStorageService.get("relationTypeList"):travelGeneric,$scope.relationTypeCopy=angular.copy($scope.relationType),$scope.quoteReset=localStorageService.get("travelQuoteInputParamatersReset"),$scope.quoteParamReset=localStorageService.get("travelQuoteInputParamatersReset").quoteParam,$scope.travelDetailsReset=localStorageService.get("travelQuoteInputParamatersReset").travelDetails,$scope.isDiseasedReset=localStorageService.get("isDiseasedForTravelReset"),$scope.selectedDiseaseReset=localStorageService.get("selectedDiseaseReset"),$scope.diseaseListReset=localStorageService.get("diseaseListReset"),$scope.travellersListReset=localStorageService.get("selectedTravellersForTravelReset"),$scope.selectedTravellerArrayReset=localStorageService.get("selectedTravellerArrayReset"),$scope.sumInsuredListReset=localStorageService.get("SumInsuredListReset"),$scope.sortTypes=sortTypesTravelGeneric,$scope.pedStatus=preDiseaseStatusGen,$scope.genderType=travelGenderTypeGeneric,$scope.questionStatus=questionStatusGeneric,$scope.tripTypeList=tripTypeListGeneric,$scope.tripDurationList=tripDurationListGeneric,$scope.travelDetails.tripDuration=$scope.tripDurationList[0].duration,$scope.selectedSortOption=$scope.sortTypes[0],$scope.activeSort=$scope.sortTypes[0].key,$rootScope.travelQuoteResult=changeCurrencySymbol($rootScope.travelQuoteResult),localStorageService.set("travelQuoteResult",$rootScope.travelQuoteResult),$scope.resetTravelInputDetails=function(){$scope.quoteParamCopy=angular.copy($scope.quoteParam),$scope.travelDetailsCopy=angular.copy($scope.travelDetails),$scope.travellersListCopy=angular.copy($scope.travellersList),$scope.selectedDiseaseCopy=angular.copy($scope.selectedDisease),$scope.diseaseListCopy=angular.copy($scope.diseaseList)},$scope.resetOnCancel=function(){angular.copy($scope.quoteParamCopy,$scope.quoteParam),angular.copy($scope.travelDetailsCopy,$scope.travelDetails),angular.copy($scope.travellersListCopy,$scope.travellersList),angular.copy($scope.diseaseListCopy,$scope.diseaseList),angular.copy($scope.selectedDiseaseCopy,$scope.selectedDisease),$scope.checkQuestionStatus($scope.quoteParam),$scope.selectedDisease.diseaseList.length>0?$scope.isDiseased=!0:$scope.isDiseased=!1,$scope.quoteTravelInputForm.travelInputForm.$setPristine()},$scope.updateSort=function(sortOption){$scope.activeSort=sortOption.key,$scope.selectedSortOption=sortOption,1==sortOption.key?($scope.sortKey="grossPremium",$scope.sortReverse=!1):2==sortOption.key?($scope.sortKey="sumInsured",$scope.sortReverse=!0):3==sortOption.key?($scope.sortKey="insurerIndex",$scope.sortReverse=!0):4==sortOption.key?($scope.sortKey="ratingsList[1]["+$scope.keySliderHospitalizationRelatedFeature.value+"]",$scope.sortReverse=!0):5==sortOption.key?($scope.sortKey="ratingsList[2]["+$scope.keySliderPreventiveOutPatientRelatedFeature.value+"]",$scope.sortReverse=!0):6==sortOption.key?($scope.sortKey="ratingsList[3]["+$scope.keySliderEnhancedCoverageFeature.value+"]",$scope.sortReverse=!0):7==sortOption.key&&($scope.sortKey="ratingsList[4]["+$scope.keySliderPreExistingDiseasesFeature.value+"]",$scope.sortReverse=!0),$scope.toggleState()},$scope.updateSortOrder=function(){1==$scope.selectedSortOption.key?$scope.sortKey="grossPremium":2==$scope.selectedSortOption.key?$scope.sortKey="sumInsured":3==$scope.selectedSortOption.key?$scope.sortKey="insurerIndex":4==$scope.selectedSortOption.key?$scope.sortKey="ratingsList[1]["+$scope.keySliderHospitalizationRelatedFeature.value+"]":5==$scope.selectedSortOption.key?$scope.sortKey="ratingsList[2]["+$scope.keySliderPreventiveOutPatientRelatedFeature.value+"]":6==$scope.selectedSortOption.key?$scope.sortKey="ratingsList[3]["+$scope.keySliderEnhancedCoverageFeature.value+"]":7==$scope.selectedSortOption.key&&($scope.sortKey="ratingsList[4]["+$scope.keySliderPreExistingDiseasesFeature.value+"]"),$scope.sortReverse=!$scope.sortReverse},$scope.errorMessage=function(errorMsg){String($rootScope.travelQuoteResult)==$scope.globalLabel.errorMessage.undefinedError||0==$rootScope.travelQuoteResult.length?($scope.errorRespCounter=!1,$rootScope.instantQuoteSummaryStatus=!1,$rootScope.instantQuoteSummaryError=errorMsg,$rootScope.tabSelectionStatus=!0,$scope.instantQuoteTravelForm=!1):$rootScope.travelQuoteResult.length>0&&($rootScope.instantQuoteSummaryStatus=!0,$rootScope.viewOptionDisabled=!1,$rootScope.tabSelectionStatus=!0,$scope.instantQuoteTravelForm=!1),$rootScope.loading=!1},$scope.customFilterTravel=function(){$scope.netPremiumTotalTravel=0,$scope.netPremiumAverageTravel=0,$scope.netPremiumMaxTravel=0,$scope.proffesionalRatingTravel=0;for(var i=0;i<$rootScope.travelQuoteResult.length;i++)$scope.netPremiumTotalTravel+=$rootScope.travelQuoteResult[i].premiumRatio,$scope.netPremiumAverageTravel=Number(($scope.netPremiumTotalTravel/$rootScope.travelQuoteResult.length).toFixed(5));for(i=0;i<$rootScope.travelQuoteResult.length;i++)$rootScope.travelQuoteResult[i].netPremiumMax=Number(($scope.netPremiumAverageTravel/$rootScope.travelQuoteResult[i].premiumRatio).toFixed(5)),$rootScope.travelQuoteResult[i].netPremiumMax>$scope.netPremiumMaxTravel&&($scope.netPremiumMaxTravel=$rootScope.travelQuoteResult[i].netPremiumMax);for(i=0;i<$rootScope.travelQuoteResult.length;i++)$rootScope.travelQuoteResult[i].netPremiumMean=Number(($rootScope.travelQuoteResult[i].netPremiumMax/$scope.netPremiumMaxTravel*5).toFixed(1)),$rootScope.travelQuoteResult[i].proffesionalRating=.4*$rootScope.travelQuoteResult[i].netPremiumMean+.3*$rootScope.travelQuoteResult[i].claimIndex+.3*$rootScope.travelQuoteResult[i].insurerIndex;return $rootScope.travelQuoteResult=$filter("orderBy")($rootScope.travelQuoteResult,"proffesionalRating"),$rootScope.travelQuoteResult=$rootScope.travelQuoteResult,$scope.sortReverse=!0,!0},$scope.processResult=function(){$rootScope.viewOptionDisabled=!1,$rootScope.tabSelectionStatus=!0,$rootScope.modalShown=!1,$rootScope.loading=!1,$rootScope.travelQuoteResult=$filter("orderBy")($rootScope.travelQuoteResult,"grossPremium"),$rootScope.travelQuoteResult=changeCurrencySymbol($rootScope.travelQuoteResult),localStorageService.set("travelQuoteResult",$rootScope.travelQuoteResult),$scope.updateSortOrder()},$scope.displayRibbon=function(){$scope.isMinPremium=function(grossPremiumValue,carrierIDValue){if(String($rootScope.travelQuoteResult[0])!=$scope.globalLabel.errorMessage.undefinedError){for(var min=$rootScope.travelQuoteResult[0].grossPremium,i=0;i<=$rootScope.travelQuoteResult.length-1;i++){var carrierIdMin=$rootScope.travelQuoteResult[i].carrierId;Number($rootScope.travelQuoteResult[i].grossPremium)<min&&(min=$rootScope.travelQuoteResult[i].grossPremium,carrierIDValue=carrierIdMin)}return min===grossPremiumValue&&($scope.selMinCarrierId=carrierIDValue,!0)}},$scope.isMaxIndex=function(insurerIndex,sumInsured,grossPremium,carrierSelID){if(String($rootScope.travelQuoteResult[0])!=$scope.globalLabel.errorMessage.undefinedError){for(var maxSel=grossPremium/(insurerIndex*sumInsured)*1e3,insurerIndex0=$rootScope.travelQuoteResult[0].insurerIndex,sumInsured0=$rootScope.travelQuoteResult[0].sumInsured,max=$rootScope.travelQuoteResult[0].grossPremium/(sumInsured0*insurerIndex0)*1e3,i=0;i<=$rootScope.travelQuoteResult.length-1;i++){var insurerIndexI=$rootScope.travelQuoteResult[i].insurerIndex,sumInsuredI=$rootScope.travelQuoteResult[i].sumInsured,grossPremiumI=$rootScope.travelQuoteResult[i].grossPremium,carrierIdI=$rootScope.travelQuoteResult[i].carrierId,maxI=grossPremiumI/(sumInsuredI*insurerIndexI)*1e3;Number(maxI)<max&&(max=maxI,carrierSelID=carrierIdI)}return max===maxSel&&($scope.selCarrierId=carrierSelID,!0)}}},$scope.displayRibbon(),$scope.singleClickTravelQuote=function(){setTimeout(function(){if($scope.show_error_msg_1||$scope.show_error_msg_3)$rootScope.P365Alert("Policies365",$scope.globalLabel.applicationLabels.travel.errorMessage,"Ok");else{$scope.ageList=[];for(var i=0;i<$scope.quoteParam.travellers.length;i++)$scope.ageList.push($scope.quoteParam.travellers[i].age);$scope.quoteParam.quoteMinAge=getMinAge($scope.ageList),$scope.quoteParam.quoteMaxAge=getMaxAge($scope.ageList),$scope.quoteParam.documentType=$scope.globalLabel.documentType.quoteRequest,$scope.quote.quoteParam=$scope.quoteParam,localStorageService.get("quoteUserInfo").mobileNumber&&($scope.quote.mobileNumber=localStorageService.get("quoteUserInfo").mobileNumber),$scope.quote.travelDetails=$scope.travelDetails,$rootScope.tabSelectionStatus=!1,$scope.travelInputForm=!0,$rootScope.loading=!0,$scope.quote.requestType=$scope.globalLabel.request.travelRequestType,delete $scope.quote.documentType,localStorageService.set("quote",$scope.quote),localStorageService.set("travelQuoteInputParamaters",$scope.quote),localStorageService.set("travelDetails",$scope.travelDetails),localStorageService.set("isDiseasedForTravel",$scope.isDiseased),localStorageService.set("selectedDisease",$scope.selectedDisease),localStorageService.set("diseaseList",$scope.diseaseList),localStorageService.set("selectedTravellersForTravel",$scope.travellersList),localStorageService.set("selectedTravellerArray",$scope.selectedTravellerArray),$rootScope.wordPressEnabled&&$scope.resetTravelInputDetails(),$scope.quoteTravelInputForm.$setPristine(),$scope.quote=prepareQuoteRequest($scope.quote),$scope.requestId=null,RestAPI.invoke($scope.globalLabel.getRequest.quoteTravel,$scope.quote).then(function(travelQuoteResult){$rootScope.travelQuoteRequest=[],travelQuoteResult.responseCode==$scope.globalLabel.responseCode.success?($scope.responseCodeList=[],$scope.requestId=travelQuoteResult.QUOTE_ID,localStorageService.set("TRAVEL_UNIQUE_QUOTE_ID",$scope.requestId),$rootScope.travelQuoteRequest=travelQuoteResult.data,travelQuoteResult.encryptedQuoteId&&($scope.UNIQUE_QUOTE_ID_ENCRYPTED=travelQuoteResult.encryptedQuoteId,localStorageService.set("TRAVEL_UNIQUE_QUOTE_ID_ENCRYPTED",$scope.UNIQUE_QUOTE_ID_ENCRYPTED)),String($rootScope.travelQuoteResult)!=$scope.globalLabel.errorMessage.undefinedError&&$rootScope.travelQuoteResult.length>0&&($rootScope.travelQuoteResult.length=0),angular.forEach($rootScope.travelQuoteRequest,function(obj,i){var request={},header={};header.messageId=messageIDVar,header.campaignID=campaignIDVar,header.source=sourceOrigin,header.transactionName=$scope.globalLabel.transactionName.travelQuoteResult,header.deviceId=deviceIdOrigin,request.header=header,request.body=obj;$http({method:"POST",url:getQuoteCalcLink,data:request}).success(function(callback,status){console.log("quoteRequest status : "+status);var travelQuoteResponse=JSON.parse(callback);if(travelQuoteResponse.QUOTE_ID==$scope.requestId)if($scope.responseCodeList.push(travelQuoteResponse.responseCode),travelQuoteResponse.responseCode==$scope.globalLabel.responseCode.success){$rootScope.loading=!1;for(var i=0;i<$rootScope.travelQuoteRequest.length;i++)$rootScope.travelQuoteRequest[i].messageId==travelQuoteResponse.messageId&&($rootScope.travelQuoteResult.push(travelQuoteResponse.data.quotes[0]),$rootScope.travelQuoteRequest[i].status=1);$scope.processResult()}else if(travelQuoteResponse.responseCode==$scope.globalLabel.responseCode.invalidPlan){$scope.responseCodeList.push(travelQuoteResponse.responseCode);for(i=0;i<$rootScope.carQuoteRequest.length;i++)$rootScope.travelQuoteRequest[i].messageId==travelQuoteResponse.messageId&&($rootScope.travelQuoteRequest[i].status=2,travelQuoteResponse.invalidInputMessage?($scope.invalidPlanOption=travelQuoteResponse.invalidInputMessage,$rootScope.travelQuoteRequest[i].message=$sce.trustAsHtml("<div>We did not get quote from the Insurer. It may be because</b></div><br/><ul class=errorUL><li class=errorPlacementLeft>{{invalidPlanOption}}</li></div>")):$rootScope.travelQuoteRequest[i].message=$sce.trustAsHtml($scope.globalLabel.validationMessages.generalisedFormInvalidErrMsg));$scope.processResult()}else for(i=0;i<$rootScope.travelQuoteRequest.length;i++)$rootScope.travelQuoteRequest[i].messageId==travelQuoteResponse.messageId&&($rootScope.travelQuoteRequest[i].status=2,$rootScope.travelQuoteRequest[i].message=$sce.trustAsHtml($scope.globalLabel.validationMessages.generalisedTravelErrMsg))}).error(function(data,status){$scope.responseCodeList.push($scope.globalLabel.responseCode.systemError)})}),$scope.$watch("responseCodeList",function(newValue,oldValue,scope){if(p365Includes($scope.responseCodeList,$scope.globalLabel.responseCode.success)&&($rootScope.loading=!1),$scope.responseCodeList.length==$rootScope.travelQuoteRequest.length){$rootScope.loading=!1,$rootScope.setTooltip=!1;for(var i=0;i<$rootScope.travelQuoteRequest.length;i++)0==$rootScope.travelQuoteRequest[i].status&&($rootScope.travelQuoteRequest[i].status=2,$rootScope.travelQuoteRequest[i].message=$sce.trustAsHtml($scope.globalLabel.validationMessages.generalisedTravelErrMsg));p365Includes($scope.responseCodeList,$scope.globalLabel.responseCode.quoteNotAvailable)?$scope.errorMessage($scope.globalLabel.validationMessages.productNotFoundMsg):$scope.errorMessage($sce.trustAsHtml($scope.globalLabel.validationMessages.generalisedTravelErrMsg))}},!0)):($scope.responseCodeList=[],String($rootScope.travelQuoteResult)!=$scope.globalLabel.errorMessage.undefinedError&&$rootScope.travelQuoteResult.length>0&&($rootScope.travelQuoteResult.length=0),$rootScope.travelQuoteResult=[],$scope.errorMessage(travelQuoteResult.message))}),$scope.displayRibbon()}},100)},$scope.callSingleClickQuote=function(){$rootScope.wordPressEnabled||$scope.singleClickTravelQuote()},$scope.calculateQuoteOnSubmit=function(){},$scope.isCarrierResulted=function(carrierId){for(var i=0;$rootScope.travelQuoteResult.length;i++)return $rootScope.travelQuoteResult[i].carrierId==carrierId},window.screen.width<768?($scope.mobileFit=!0,$scope.webFit=!1):($scope.mobileFit=!1,$scope.webFit=!0),$scope.state=!1,$scope.toggleState=function(){$scope.state=!$scope.state},$scope.getContinentList=function(countryName){return $http.get(getServiceLink+$scope.globalLabel.documentType.destinationDetails+"&q="+countryName).then(function(response){return JSON.parse(response.data).data})},$scope.newDestination=function(destination){return{name:destination}},$scope.modalTraveller=!1,$scope.toggleTraveller=function(){$scope.oldtravellersList=angular.copy($scope.travellersList);for(var i=0;i<$scope.travellersList.length;i++)$scope.travellersList[i].minAge=1,$scope.travellersList[i].maxAge=120,$scope.travellersList[i].addNew=!1,$scope.changeRelation($scope.travellersList[i].relation);$scope.travellersList[$scope.travellersList.length-1].addNew=!0,$scope.modalTraveller=!$scope.modalTraveller,setTimeout(function(){$(".hiddenAge").each(function(){var hiddenVal=$(this).val();$(this).closest("span").find(".ageDropdown").val(hiddenVal)})},1e3)},$scope.addTraveller=function(id){if(id<=6){$scope.disableAddButton=6==id,$scope.travellersList[id].addNew=!1;var traveller={minAge:1,maxAge:120,gender:"Male",age:18};traveller.traveller_id=$scope.travellersList.length+1,traveller.status=!0,traveller.addNew=!0,$scope.travellersList.push(traveller)}else $scope.disableAddButton=!0;$scope.changeRelation($scope.travellersList[id].relation)},$scope.removeTraveller=function(id){$scope.travellersList[id].status||($scope.travellersList.splice(id,1),$scope.travellersList.length<8&&($scope.disableAddButton=!1,$scope.travellersList[$scope.travellersList.length-1].addNew=!0))},$scope.closeTravellerModal=function(){$scope.travellersList=$scope.oldtravellersList,$scope.modalTraveller=!1},$scope.getAgeArray=function(minAge,maxAge){for(var ageArray=[],j=minAge;j<=maxAge;0,j++)ageArray.push(j);return ageArray},$scope.wordPressEnabled&&$scope.resetTravelInputDetails(),$scope.cardView=!0,$scope.compareView=!1,$scope.showCompareBtn=!0,$scope.showCardBtn=!0,$scope.disableSort=!1,$scope.compareViewClick=function(){$scope.dataLoaded=!0,$scope.slickLoaded=!0,$scope.cardView=!0,$scope.compareView=!1,$scope.showCompareBtn=!0,$scope.showCardBtn=!0,$scope.disableSort=!1},$scope.cardViewClick=function(){$scope.dataLoaded=!0,$scope.slickLoaded=!0,$scope.cardView=!1,$scope.compareView=!0,$scope.showCompareBtn=!0,$scope.showCardBtn=!0,$scope.disableSort=!0},$scope.findDisplayLimit=function(displayLimitValue){var returnvalue="NOT AVAILABLE";return null!=displayLimitValue&&(returnvalue=displayLimitValue),returnvalue},$scope.changeRelation=function(relation){!function(){for(var isGenderValid=!1,i=0;i<$scope.travellersList.length;i++)if($scope.travellersList[i].relation!=FATHER&&$scope.travellersList[i].relation!=SON||($scope.travellersList[i].gender=MALE,isGenderValid=!0),$scope.travellersList[i].relation!=MOTHER&&$scope.travellersList[i].relation!=DAUGHTER||($scope.travellersList[i].gender=FEMALE,isGenderValid=!0),$scope.travellersList[i].relation==SELF)for(var j=0;j<$scope.travellersList.length;j++)$scope.travellersList[j].relation==SPOUSE&&($scope.travellersList[j].gender=$scope.travellersList[i].gender==MALE?FEMALE:MALE,isGenderValid=!0)}();for(var i=0;i<$scope.relationTypeCopy.length;i++)isSelected($scope.relationTypeCopy[i].member)||($scope.relationTypeCopy[i].val=!1),$scope.relationTypeCopy[i].member==relation&&isSelected(relation)&&relation!=SON&&relation!=DAUGHTER&&($scope.relationTypeCopy[i].val=!0);$scope.relationType=angular.copy($scope.relationTypeCopy)},$scope.validateFamilyForm=function(){$scope.familyErrors=[];for(var ageOfSelf,ageOfSpouse,lesserAge,submitTravellersForm=!0,i=0;i<$scope.travellersList.length;i++)$scope.travellersList[i].relation==SELF?$scope.travellersList[i].status&&(ageOfSelf=Number($scope.travellersList[i].age)):$scope.travellersList[i].relation==SPOUSE?$scope.travellersList[i].status&&(ageOfSpouse=Number($scope.travellersList[i].age)):$scope.travellersList[i].relation==FATHER&&$scope.travellersList[i].status&&Number($scope.travellersList[i].age);for(i=0;i<$scope.travellersList.length;i++)lesserAge="undefined"==ageOfSelf||""==ageOfSelf||null==ageOfSelf?ageOfSpouse:ageOfSpouse<ageOfSelf?ageOfSpouse:ageOfSelf,1==$scope.travellersList[i].status&&($scope.travellersList[i].relation==SON&&$scope.travellersList[i].age>lesserAge-18&&0==p365Includes($scope.familyErrors,"Child's age should be at least 18 years lesser than the younger parent")&&($scope.familyErrors.push("Child's age should be at least 18 years lesser than the younger parent"),submitTravellersForm=!1),$scope.travellersList[i].relation==DAUGHTER&&$scope.travellersList[i].age>lesserAge-18&&0==p365Includes($scope.familyErrors,"Child's age should be at least 18 years lesser than the younger parent")&&($scope.familyErrors.push("Child's age should be at least 18 years lesser than the younger parent"),submitTravellersForm=!1),($scope.travellersList[i].relation==FATHER||$scope.travellersList[i].relation==MOTHER)&&$scope.travellersList[i].age<ageOfSelf+18&&0==p365Includes($scope.familyErrors,"Your Parents' age should be at least 18 years more than your age")&&($scope.familyErrors.push("Your Parents' age should be at least 18 years more than your age"),submitTravellersForm=!1));return submitTravellersForm},$scope.submitTravellers=function(){var submitTravellersForm;submitTravellersForm=$scope.validateFamilyForm();var travellersCounter=0,travellerSelectionStatus=!1,relationStatus=!1;$scope.quoteParam.travellers=[],$scope.travellersList=$filter("filter")($scope.travellersList,function(value){return 1==value.status});for(var i=0;i<$scope.travellersList.length;i++)if(1==$scope.travellersList[i].status)if(void 0!=$scope.travellersList[i].relation&&""!=$scope.travellersList[i].relation){var member={};member.traveller_id=i+1,member.age=Number($scope.travellersList[i].age),member.gender=$scope.travellersList[i].gender,member.minAge=1,member.maxAge=120,member.relation=$scope.travellersList[i].relation,member.status=$scope.travellersList[i].status,$scope.quoteParam.travellers.push(member),travellerSelectionStatus=!0,relationStatus=!0,travellersCounter++}else relationStatus=!1;else travellerSelectionStatus=!1;$scope.quoteParam.travellers[$scope.quoteParam.travellers.length-1].addNew=!0,$scope.travellersList=$scope.quoteParam.travellers,$scope.numberOfTraveller=travellersCounter,localStorageService.set("selectedTravellersForTravel",$scope.travellersList),localStorageService.set("selectedTravellersForTravelReset",$scope.travellersList),localStorageService.set("relationTypeList",$scope.relationType),$scope.quoteParam.planType=travellersCounter>1?"F":"I",travellerSelectionStatus?relationStatus?1==submitTravellersForm&&($rootScope.wordPressEnabled&&$scope.quoteTravelInputForm.travelInputForm.$setDirty(),$scope.modalTraveller=!1):$scope.familyErrors.push("Please select relation of traveller."):$scope.familyErrors.push("Please select at least one member."),$scope.selectedTravellerArray=$scope.quoteParam.travellers},$scope.toggleQuestion1=function(){"N"==$scope.quoteParam.travellingFromIndia?($scope.show_error_msg_1=!0,$scope.show_error_msg_2=!1,$scope.show_error_msg_3=!1,$scope.quoteParam.isIndian="Y",$scope.quoteParam.isOciPioStatus="Y"):($scope.show_error_msg_1=!1,$scope.show_error_msg_2=!1,$scope.show_error_msg_3=!1,$scope.quoteParam.isIndian="Y",$scope.quoteParam.isOciPioStatus="Y"),$scope.calculateQuoteOnSubmit()},$scope.toggleQuestion2=function(){"N"==$scope.quoteParam.isIndian?($scope.show_error_msg_1=!1,$scope.show_error_msg_2=!0,$scope.show_error_msg_3=!1,$scope.quoteParam.isOciPioStatus="Y"):($scope.show_error_msg_1=!1,$scope.show_error_msg_2=!1,$scope.show_error_msg_3=!1,$scope.quoteParam.isOciPioStatus="Y")},$scope.toggleQuestion3=function(){"N"==$scope.quoteParam.isOciPioStatus?($scope.show_error_msg_1=!1,$scope.show_error_msg_2=!0,$scope.show_error_msg_3=!0):($scope.show_error_msg_1=!1,$scope.show_error_msg_2=!0,$scope.show_error_msg_3=!1),$scope.calculateQuoteOnSubmit()},$scope.openMenu=function($mdOpenMenu,ev){$mdOpenMenu(ev),setTimeout(function(){$(".md-click-catcher").click(function(){$scope.activeMenu=""})},100)},$scope.clickForActive=function(item){$scope.activeMenu=item},$scope.clickForViewActive=function(item){$scope.activeViewMenu=item},$scope.clickForViewActive("Compare"),$scope.clicktoDisable=function(){setTimeout(function(){$(".md-click-catcher").css("pointer-events","none")},100)},$scope.rateit={readonly_enables:!0},$scope.showMorePlans=function(data){data.isMorePlans=!0},$scope.showLessPlans=function(data){data.isMorePlans=!1},$rootScope.signout=function(){$rootScope.userLoginStatus=!1;var userLoginInfo={username:""};userLoginInfo.status=$rootScope.userLoginStatus,localStorageService.set("userLoginInfo",userLoginInfo),$location.path("/quote")},$scope.missionCompled=function(){$rootScope.loading=!1},$scope.EmailChoices=[{username:"",addNew:!0,paramMap:{docId:"",LOB:localStorageService.get("selectedBusinessLineId").toString(),userId:"",selectedPolicyType:""}}];$scope.modalEmailView=!1,$scope.emailPopUpDisabled=!1,localStorageService.get("quoteUserInfo")&&($scope.EmailChoices[0].username=localStorageService.get("quoteUserInfo").emailId),$scope.addNewChoice=function(){var newItemNo=$scope.EmailChoices.length+1;newItemNo<=3&&($scope.EmailChoices.push({username:""}),$scope.EmailChoices[0].addNew=!1,$scope.EmailChoices[1].addNew=!0,$scope.emailPopUpDisabled=!1),3==newItemNo&&($scope.EmailChoices[2].addNew=!1,$scope.emailPopUpDisabled=!0)},$scope.removeChoice=function(){var lastItem=$scope.EmailChoices.length-1;$scope.EmailChoices.splice(lastItem)},$scope.showForShare=function(data){if(!$rootScope.parseCarrierList)return!0;for(var j=0;j<$rootScope.parseCarrierList.length;j++)if(data.carrierId==$rootScope.parseCarrierList[j])return!0},$scope.deleteReceipient=function(index){$scope.EmailChoices.splice(index,1),$scope.EmailChoices.length<3&&($scope.emailPopUpDisabled=!1,1==$scope.EmailChoices.length?($scope.EmailChoices[0].addNew=!0,$scope.EmailChoices[1].addNew=!1):($scope.EmailChoices[0].addNew=!1,$scope.EmailChoices[1].addNew=!0))},$scope.hideEmailModal=function(){$scope.modalEmailView=!1,$scope.shareEmailModal=!1},$scope.hidePremiumDetails=function(data){$scope.premiumDetailsModal=!1},$scope.showPremiumDetails=function(selectedTab,data){$scope.premiumDetails=data,$rootScope.selectedTabTravel=selectedTab,$scope.premiumDetailsModal=!$scope.premiumDetailsModal},$rootScope.isOlarked&&setTimeout(function(){$rootScope.loading=!1},500),$scope.sendEmail=function(){$scope.flagArray=[];for(var index=-1,i=0;i<$scope.EmailChoices.length;i++){if(""!=$scope.EmailChoices[i].username&&void 0!=$scope.EmailChoices[i].username){var encodeQuote=localStorageService.get("TRAVEL_UNIQUE_QUOTE_ID_ENCRYPTED"),encodeLOB=String(localStorageService.get("selectedBusinessLineId")),encodeEmailId=$scope.EmailChoices[0].username,encodeCarrierList=[];if($scope.insuranceCompanyList.selectedInsuranceCompany.length>0){encodeCarrierList=$scope.insuranceCompanyList.selectedInsuranceCompany;var jsonEncodeCarrierList=JSON.stringify(encodeCarrierList)}else encodeCarrierList.push("ALL");$scope.EmailChoices[i].funcType="SHARETRAVELQUOTE",$scope.EmailChoices[i].isBCCRequired="Y",$scope.EmailChoices[i].paramMap={},$scope.EmailChoices[i].paramMap.docId=String(encodeQuote),$scope.EmailChoices[i].paramMap.LOB=String(encodeLOB),$scope.EmailChoices[i].paramMap.userId=String(encodeEmailId),$scope.EmailChoices[i].paramMap.carriers=String(jsonEncodeCarrierList),$scope.EmailChoices[i].paramMap.selectedPolicyType="TRAVEL";var body={};body.longURL=shareQuoteLink+$scope.EmailChoices[i].paramMap.docId+"&LOB="+$scope.EmailChoices[i].paramMap.LOB+"&userId="+$scope.EmailChoices[i].paramMap.userId+"&carriers="+$scope.EmailChoices[i].paramMap.carriers,$http({method:"POST",url:getShortURLLink,data:body}).success(function(shortURLResponse){var request={},header={},arr=$scope.EmailChoices;header.messageId=messageIDVar,header.campaignID=campaignIDVar,header.source=sourceOrigin,header.transactionName=sendEmail,header.deviceId=deviceIdOrigin,request.header=header,shortURLResponse.responseCode==$scope.globalLabel.responseCode.success?(index++,request.body=arr[index],request.body.paramMap.url=shortURLResponse.data.shortURL,$http({method:"POST",url:getQuoteCalcLink,data:request}).success(function(callback){var emailResponse=JSON.parse(callback),receipientNum=$scope.EmailChoices.length;i==receipientNum&&(emailResponse.responseCode==$scope.globalLabel.responseCode.success?($scope.shareEmailModal=!1,$scope.modalEmailView=!0):localStorageService.set("emailDetails",void 0))})):console.log(shortURLResponse.message)})}}},$scope.showShareEmailModal=function(){localStorageService.get("quoteUserInfo")&&localStorageService.get("quoteUserInfo").emailId&&($scope.crmEmailSend||$rootScope.wordPressEnabled)?(1==imauticAutomation?(imatShareQuote(localStorageService,$scope,"ShareQuote"),$scope.shareEmailModal=!1,$scope.modalEmailView=!0,$scope.crmEmailSend=!0):$scope.sendEmail(),$scope.shareEmailModal=!1,$scope.modalEmailView=!0):$scope.shareEmailModal=!0},$scope.sendQuotesByEmail=function(){var quoteUserInfo={};if($scope.EmailChoices.length>0)if(localStorageService.get("quoteUserInfo")){(quoteUserInfo=localStorageService.get("quoteUserInfo"))&&(quoteUserInfo.emailId=$scope.EmailChoices[0].username,localStorageService.set("quoteUserInfo",quoteUserInfo),$scope.crmEmailSend=!0,$scope.showShareEmailModal())}else{quoteUserInfo={};localStorageService.set("quoteUserInfo",quoteUserInfo),$scope.sendQuotesByEmail()}},$scope.leadCreationUserInfo=function(){var userInfoWithQuoteParam={};$scope.selectedBusinessLineId=localStorageService.get("selectedBusinessLineId"),localStorageService.set("quoteUserInfo",$scope.quoteUserInfo);var quoteParam=angular.copy(localStorageService.get("travelQuoteInputParamaters").quoteParam);userInfoWithQuoteParam.quoteParam=quoteParam,userInfoWithQuoteParam.quoteParam.gender=quoteParam.travellers[0].gender,userInfoWithQuoteParam.quoteParam.age=quoteParam.travellers[0].age;var travelDetails=angular.copy(localStorageService.get("travelDetails"));userInfoWithQuoteParam.travelDetails=travelDetails,1==travelDetails.destinations.length?userInfoWithQuoteParam.travelDetails.country=travelDetails.destinations[0].displayField:travelDetails.destinations.length>1&&(userInfoWithQuoteParam.travelDetails.country="Multipal"),userInfoWithQuoteParam.QUOTE_ID=localStorageService.get("TRAVEL_UNIQUE_QUOTE_ID"),userInfoWithQuoteParam.quoteParam.quoteType=$scope.selectedBusinessLineId,userInfoWithQuoteParam.contactInfo=$scope.quoteUserInfo,$rootScope.agencyPortalEnabled?(userInfoWithQuoteParam.contactInfo.createLeadStatus=!1,userInfoWithQuoteParam.requestSource=sourceOrigin,$location.search("createLead","false"),userInfoWithQuoteParam.userName=localdata.username,userInfoWithQuoteParam.agencyId=localdata.agencyId):($scope.quoteUserInfo.emailId=$rootScope.decryptedEmailId,userInfoWithQuoteParam.requestSource=sourceOrigin),null!=$scope.quoteUserInfo&&(""==$scope.quoteUserInfo.messageId||$scope.quoteUserInfoForm.$dirty?RestAPI.invoke($scope.globalLabel.transactionName.createLead,userInfoWithQuoteParam).then(function(callback){callback.responseCode==$scope.globalLabel.responseCode.success&&(messageIDVar=callback.data.messageId,$scope.quoteUserInfo.messageId=messageIDVar,$scope.modalView=!1,localStorageService.set("quoteUserInfo",$scope.quoteUserInfo))}):messageIDVar=$scope.quoteUserInfo.messageId)},$scope.redirectToResult=function(){$scope.leadCreationUserInfo()},$scope.redirectToAPResult=function(){$scope.leadCreationUserInfo()},$scope.diseaseClick=function(){if("Y"==$scope.quoteParam.pedStatus)$scope.isDiseased=!0,$scope.toggleHealth();else{$scope.isDiseased=!1,$scope.selectedDisease.diseaseList=[];for(var i=0;i<$scope.diseaseList.length;i++)$scope.diseaseList[i].travellersList=[];setTimeout(function(){$scope.calculateQuoteOnSubmit()},100)}},$scope.checkDisease=function(value,checked){var idx=$scope.selectedDisease.diseaseList.indexOf(value);idx>=0&&!checked&&$scope.selectedDisease.diseaseList.splice(idx,1),idx<0&&checked&&$scope.selectedDisease.diseaseList.push(value)},$scope.toggleView=function(){$scope.showAddButton=!$scope.showAddButton},$scope.modalHealth=!1,$scope.toggleHealth=function(){if(!$scope.instantQuoteHealthForm){$scope.oldSelectedDiseaseList=angular.copy($scope.selectedDisease.diseaseList),$scope.selectedTravellerArray=$scope.quoteParam.travellers,$scope.modalHealth=!$scope.modalHealth;for(var i=0;i<$scope.diseaseList.length;i++)void 0!=$scope.diseaseList[i].travellersList&&"undefined"!=String($scope.diseaseList[i].travellersList)||($scope.diseaseList[i].travellersList=[])}},$scope.getDisease=function(){return $scope.selectedDisease.diseaseList},$scope.closePreExistingDiseaseModal=function(){for(var deleteList=[],i=0;i<$scope.diseaseList.length;i++)1==p365Includes($scope.selectedDisease.diseaseList,$scope.diseaseList[i].diseaseId)&&0==$scope.diseaseList[i].travellersList.length?deleteList.push($scope.diseaseList[i].diseaseId):0==p365Includes($scope.oldSelectedDiseaseList,$scope.diseaseList[i].diseaseId)&&deleteList.push($scope.diseaseList[i].diseaseId);0==$scope.selectedDisease.diseaseList.length&&($scope.quoteParam.pedStatus="N",$scope.isDiseased=!1),$scope.selectedDisease.diseaseList=$scope.selectedDisease.diseaseList.filter(function(obj){return-1===deleteList.indexOf(obj)}),$scope.modalHealth=!1},$scope.submitPreDiseaseList=function(){$scope.ratingParam={};var i,submitDiseaseForm=!0;if($scope.ratingParam.criticalIllness="N",$scope.ratingParam.organDonar="N",$scope.selectedDisease.diseaseList.length>0)for(i=0;i<$scope.diseaseList.length;i++)1==p365Includes($scope.selectedDisease.diseaseList,$scope.diseaseList[i].diseaseId)&&("OrganDonar"==$scope.diseaseList[i].diseaseType&&($scope.ratingParam.organDonar="Y"),"Critical"==$scope.diseaseList[i].diseaseType&&($scope.ratingParam.criticalIllness="Y"),0==$scope.diseaseList[i].travellersList.length&&($scope.diseaseError="Please select sumembers against each selected disease",submitDiseaseForm=!1));else submitDiseaseForm=!1,$scope.diseaseError="Please select disease before submit.";if(1==submitDiseaseForm){for($scope.modalHealth=!1,$scope.diseaseError="",0==$scope.selectedDisease.diseaseList.length&&($scope.quoteParam.pedStatus="N",$scope.isDiseased=!1),i=0;i<$scope.selectedTravellerArray.length;i++){$scope.selectedTravellerArray[i].diseaseDetails=[],$scope.diseaseDetails=[];for(var j=0;j<$scope.diseaseList.length;j++)if(1==p365Includes($scope.selectedDisease.diseaseList,$scope.diseaseList[j].diseaseId)){for(var k=0;k<$scope.diseaseList[j].travellersList.length;k++)if($scope.selectedTravellerArray[i].traveller_id==$scope.diseaseList[j].travellersList[k].traveller_id){$scope.diseaseList[j].travellersList[k].status=!0;var diseaseDetail={};diseaseDetail.diseaseCode=$scope.diseaseList[j].diseaseId,diseaseDetail.diseaseName=$scope.diseaseList[j].disease,diseaseDetail.masterDiseaseCode=$scope.diseaseList[j].diseaseCode,diseaseDetail.applicable=!0,$scope.diseaseDetails.push(diseaseDetail)}}else $scope.diseaseList[j].travellersList=[];$scope.diseaseDetails.length>0&&(localStorageService.set("diseaseList",$scope.diseaseList),$scope.selectedTravellerArray[i].diseaseDetails=$scope.diseaseDetails)}$scope.quoteParam.travellers=$scope.selectedTravellerArray,localStorageService.set("selectedTravellerArray",$scope.selectedTravellerArray),setTimeout(function(){$scope.calculateQuoteOnSubmit()},100)}},$scope.removePreDisease=function(data){var i;for(i=0;i<$scope.selectedDisease.diseaseList.length;i++)if($scope.selectedDisease.diseaseList[i]==data.diseaseId){$scope.selectedDisease.diseaseList.splice(i,1);break}for($rootScope.wordPressEnabled&&$scope.quoteTravelInputForm.travelInputForm.$setDirty(),i=0;i<$scope.diseaseList.length;i++)if($scope.diseaseList[i].diseaseId==data.diseaseId){$scope.diseaseList[i].travellersList=[];break}0==$scope.selectedDisease.diseaseList.length&&($scope.quoteParam.pedStatus="N",$scope.isDiseased=!1),$scope.submitPreDiseaseList()},($rootScope.flag||$rootScope.isOlarked)&&($rootScope.flag&&($scope.redirectToResult(),$rootScope.flag=!1),localStorageService.get("quoteUserInfo")&&($scope.EmailChoices[0].username=localStorageService.get("quoteUserInfo").emailId),$rootScope.loading=!1)},$scope.$watch(function(){return $rootScope.travelQuoteResult},function(){$rootScope.travelQuoteResult=$rootScope.travelQuoteResult,$rootScope.travelQuoteResult&&$rootScope.travelQuoteResult.length>0&&$scope.init()},!0),$scope.validatePremium=function(data){return Number(data.grossPremium)>0},$scope.buyProduct=function(selectedProduct){localStorageService.set("selectedProduct",selectedProduct),localStorageService.set("travelDetails",$scope.travelDetails),localStorageService.set("travelQuoteInputParamaters",$scope.quote);var buyScreenParam={documentType:"proposalScreenConfig"};buyScreenParam.businessLineId=Number(localStorageService.get("selectedBusinessLineId")),buyScreenParam.carrierId=selectedProduct.carrierId,buyScreenParam.productId=selectedProduct.productId,buyScreenParam.QUOTE_ID=localStorageService.get("TRAVEL_UNIQUE_QUOTE_ID"),$scope.selectedProduct=selectedProduct,1==imauticAutomation&&imatBuyClicked(localStorageService,$scope,"BuyClicked"),getDocUsingParam(RestAPI,$scope.globalLabel.transactionName.productDataReader,buyScreenParam,function(buyScreen){if(buyScreen.responseCode==$scope.globalLabel.responseCode.success){localStorageService.set("buyScreen",buyScreen.data),buyScreenParam.documentType="TravelPlan";var docId=$scope.globalLabel.documentType.buyScreen+"-"+localStorageService.get("selectedBusinessLineId");getDocUsingId(RestAPI,docId,function(buyScreenTooltip){if(localStorageService.set("buyScreenTooltip",buyScreenTooltip.toolTips),$rootScope.baseEnvEnabled&&!$rootScope.wordPressEnabled){if(String($location.search().leaddetails)!=$scope.globalLabel.errorMessage.undefinedError){var leaddetails=JSON.parse($location.search().leaddetails);localStorageService.set("quoteUserInfo",leaddetails)}$location.path("/buyTravel").search({quoteId:localStorageService.get("TRAVEL_UNIQUE_QUOTE_ID"),carrierId:selectedProduct.carrierId,productId:selectedProduct.productId,lob:localStorageService.get("selectedBusinessLineId")})}else $location.path("/buyTravel")})}else $rootScope.P365Alert("Policies365",$scope.globalLabel.validationMessages.generalisedErrMsg,"Ok")})}}]);