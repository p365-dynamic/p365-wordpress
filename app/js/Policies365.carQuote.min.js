"use strict";angular.module("carInstantQuote",["CoreComponentApp","LocalStorageModule"]).controller("carInstantQuoteController",["$scope","$rootScope","$window","$filter","RestAPI","localStorageService","$timeout","$location","$interval","$http","$sce","$q","$anchorScroll",function($scope,$rootScope,$window,$filter,RestAPI,localStorageService,$timeout,$location,$interval,$http,$sce,$q,$anchorScroll){$scope.p365Labels=insCarQuoteLabels,"/car"==$location.path()?$rootScope.title=$scope.p365Labels.policies365Title.carInstantQuoteLanding:$rootScope.title=$scope.p365Labels.policies365Title.carInstantQuote,$anchorScroll("home"),$scope.focusInput=!0,$rootScope.loading=!0,$rootScope.instantQuoteSummaryStatus=!0,$rootScope.instantQuoteInvalidSummaryStatus=!0,$rootScope.disableLandingLeadBtn=!1,$scope.resetDisplayVehicle=!1,$scope.carQuoteRequestFormation=function(carQuoteRequestParam){$scope.quoteRequest={},$scope.quoteRequest.vehicleInfo={},$scope.quoteRequest.quoteParam={},$scope.quoteRequest.vehicleInfo.IDV=carQuoteRequestParam.vehicleInfo.IDV,$scope.quoteRequest.vehicleInfo.PreviousPolicyExpiryDate=carQuoteRequestParam.vehicleInfo.PreviousPolicyExpiryDate,$scope.quoteRequest.vehicleInfo.TPPolicyExpiryDate=carQuoteRequestParam.vehicleInfo.TPPolicyExpiryDate,$scope.quoteRequest.vehicleInfo.TPPolicyStartDate=carQuoteRequestParam.vehicleInfo.TPPolicyStartDate,$scope.quoteRequest.vehicleInfo.RTOCode=carQuoteRequestParam.vehicleInfo.RTOCode,$scope.quoteRequest.vehicleInfo.city=carQuoteRequestParam.vehicleInfo.city,carQuoteRequestParam.vehicleInfo.dateOfRegistration&&($scope.quoteRequest.vehicleInfo.dateOfRegistration=carQuoteRequestParam.vehicleInfo.dateOfRegistration),$scope.quoteRequest.vehicleInfo.idvOption=carQuoteRequestParam.vehicleInfo.idvOption,$scope.quoteRequest.vehicleInfo.best_quote_id=carQuoteRequestParam.vehicleInfo.best_quote_id,$scope.quoteRequest.vehicleInfo.previousClaim=carQuoteRequestParam.vehicleInfo.previousClaim,$scope.quoteRequest.vehicleInfo.registrationNumber=carQuoteRequestParam.vehicleInfo.registrationNumber,$scope.quoteRequest.vehicleInfo.registrationPlace=carQuoteRequestParam.vehicleInfo.registrationPlace,$scope.quoteRequest.vehicleInfo.state=carQuoteRequestParam.vehicleInfo.state,$scope.quoteRequest.vehicleInfo.make=carQuoteRequestParam.vehicleInfo.make,$scope.quoteRequest.vehicleInfo.model=carQuoteRequestParam.vehicleInfo.model,$scope.quoteRequest.vehicleInfo.variant=carQuoteRequestParam.vehicleInfo.variant.toString(),carQuoteRequestParam.vehicleInfo.fuel&&($scope.quoteRequest.vehicleInfo.fuel="PETROL"),$scope.quoteRequest.vehicleInfo.cubicCapacity=carQuoteRequestParam.vehicleInfo.cubicCapacity,$scope.quoteRequest.quoteParam.ncb=carQuoteRequestParam.quoteParam.ncb,$scope.quoteRequest.quoteParam.ownedBy=carQuoteRequestParam.quoteParam.ownedBy,$scope.quoteRequest.quoteParam.policyType=carQuoteRequestParam.quoteParam.policyType,carQuoteRequestParam.quoteParam.riders&&($scope.quoteRequest.quoteParam.riders=carQuoteRequestParam.quoteParam.riders)},$scope.callForLanding=function(){$rootScope.Regpopup=!1,$scope.carDisplayNames=localStorageService.get("carMakeListDisplay");var carQuoteCookie=localStorageService.get("carQuoteInputParamaters");carQuoteCookie?($scope.vehicleInfo.make=carQuoteCookie.vehicleInfo.make,$scope.vehicleInfo.model=carQuoteCookie.vehicleInfo.model,$scope.vehicleInfo.variant=carQuoteCookie.vehicleInfo.variant,$scope.vehicleInfo.cubicCapacity=carQuoteCookie.vehicleInfo.cubicCapacity,$scope.vehicleInfo.fuel="PETROL",$scope.selectedVariantDetails={selectedItem:""},$scope.selectedVariantDetails.selectedItem=$scope.vehicleInfo.variant+"-"+$scope.vehicleInfo.cubicCapacity+"cc",$scope.carModelList=[],console.log("carQuoteCookie in callForLanding  is :",carQuoteCookie),angular.forEach($scope.carDisplayNames,function(value){value.make.includes($scope.vehicleInfo.make)&&$scope.carModelList.push(value.model)}),$scope.carVariantList=[],angular.forEach($scope.carDisplayNames,function(value){if(value.make==$scope.vehicleInfo.make&&value.model==$scope.vehicleInfo.model){var variantDetails=value.variant+"-"+value.cubicCapacity;$scope.carVariantList.push(variantDetails)}}),setTimeout(function(){$scope.vehicleInfo.make=carQuoteCookie.vehicleInfo.make,$scope.vehicleInfo.model=carQuoteCookie.vehicleInfo.model,$scope.vehicleInfo.variant=carQuoteCookie.vehicleInfo.variant,$scope.vehicleInfo.cubicCapacity=carQuoteCookie.vehicleInfo.cubicCapacity,$scope.vehicleInfo.fuel=carQuoteCookie.vehicleInfo.fuel,$scope.selectedVariantDetails={selectedItem:""},$scope.selectedVariantDetails.selectedItem=$scope.vehicleInfo.variant+"-"+$scope.vehicleInfo.cubicCapacity+"cc",$scope.carModelList=[],console.log("$scope.selectedVariantDetails in settimeout  is :",$scope.selectedVariantDetails),angular.forEach($scope.carDisplayNames,function(value){value.make.includes($scope.vehicleInfo.make)&&$scope.carModelList.push(value.model)}),$scope.carVariantList=[],angular.forEach($scope.carDisplayNames,function(value){if(value.make.includes($scope.vehicleInfo.make)&&value.model.includes($scope.vehicleInfo.model)){var variantDetails=value.variant+"-"+value.cubicCapacity;$scope.carVariantList.push(variantDetails)}})},100)):setTimeout(function(){$scope.vehicleInfo.IDV=0,$scope.vehicleInfo.RTOCode="MH01",$scope.vehicleInfo.previousClaim="false",$scope.vehicleInfo.registrationPlace="MH-01 Mumbai Tardeo",$scope.vehicleInfo.make="Maruti Suzuki",$scope.vehicleInfo.model="Alto 800",$scope.vehicleInfo.variant="LX",$scope.vehicleInfo.fuel="PETROL",$scope.vehicleInfo.cubicCapacity="796",$scope.vehicleInfo.idvOption=1,$scope.selectedVariantDetails={selectedItem:""},$scope.selectedVariantDetails.selectedItem=$scope.vehicleInfo.variant+"-"+$scope.vehicleInfo.cubicCapacity+"cc",$scope.carModelList=[],console.log("$scope.vehicleInfo in else part is :",$scope.vehicleInfo),angular.forEach($scope.carDisplayNames,function(value){value.make.includes($scope.vehicleInfo.make)&&$scope.carModelList.push(value.model)}),$scope.carVariantList=[],angular.forEach($scope.carDisplayNames,function(value){if(value.make==$scope.vehicleInfo.make&&value.model==$scope.vehicleInfo.model){var variantDetails=value.variant+"-"+value.cubicCapacity;$scope.carVariantList.push(variantDetails)}})},100),$scope.searchText=null,$scope.searchText1=null,$scope.searchText2=null,$scope.querySearch=function(query){var filteredVehicle=[];return angular.forEach($scope.carDisplayNames,function(value){filteredVehicle.length<=40&&($scope.selectedVehicle=value.make,value.make.toLowerCase().includes(query.toLowerCase())&&-1==filteredVehicle.indexOf(value.make)&&filteredVehicle.push(value.make))}),filteredVehicle},$scope.modelSearch=function(query){var filteredModel=[];return angular.forEach($scope.carModelList,function(model){filteredModel.length<=40&&model.toLowerCase().includes(query.toLowerCase())&&-1==filteredModel.indexOf(model)&&filteredModel.push(model)}),filteredModel},$scope.variantSearch=function(query){console.log("query in modelsearch is: ",query);var filteredVariant=[];return angular.forEach($scope.carVariantList,function(value){if(filteredVariant.length<=40&&value.toLowerCase().includes(query.toLowerCase())&&-1==filteredVariant.indexOf(value)){var variantDetails=value;filteredVariant.push(variantDetails)}}),console.log("filteredVariant list is: ",filteredVariant),filteredVariant}},$scope.selectedDisplayVehicle=function(selectedMake1){selectedMake1&&($scope.carModelList=[],console.log("**$scope.resetDisplayVehicle in selectedDisplayVehicle is ** : ",$scope.resetDisplayVehicle),$scope.resetDisplayVehicle&&($scope.vehicleInfo.model="",$scope.selectedVariantDetails={selectedItem:""}),angular.forEach($scope.carDisplayNames,function(value){-1==$scope.carModelList.indexOf(value.model)&&value.make.includes(selectedMake1)&&$scope.carModelList.push(value.model)}),console.log("$scope.carModelList is: ",$scope.carModelList))},$scope.selectedDisplayModel=function(selectedModel1){selectedModel1&&($scope.carVariantList=[],$scope.filteredCarVariantLst=[],$scope.resetDisplayVehicle&&($scope.selectedVariantDetails={selectedItem:""}),angular.forEach($scope.carDisplayNames,function(value){if(value.make==$scope.vehicleInfo.make&&value.model==$scope.vehicleInfo.model&&-1==$scope.carVariantList.indexOf(value.variant)){var variantDetails=value.variant+"-"+value.cubicCapacity+"cc";$scope.carVariantList.push(variantDetails)}}),console.log("$scope.carVariantList  is: ",$scope.carVariantList))},$scope.selectedDisplayVariant=function(selectedVariant){if(console.log("selectedVariant1 in selectedDisplayVariant step 1 is: ",selectedVariant),selectedVariant){console.log("** selectedVariant in step 2 is ** : ",selectedVariant),$scope.selectedVariantDetails.selectedItem=selectedVariant;var variantIndex=selectedVariant.lastIndexOf("-"),ccindex=selectedVariant.lastIndexOf("cc"),newccindex=ccindex-variantIndex;console.log("newccindex is ***: ",newccindex),-1!=variantIndex&&($scope.vehicleInfo.variant=selectedVariant.substr(0,variantIndex)),-1!=ccindex&&($scope.vehicleInfo.cubicCapacity=selectedVariant.substr(variantIndex+1,newccindex-1)),$scope.resetDisplayVehicle=!0,console.log(" $scope.resetDisplayVehicle  in  $scope.selectedVariantDetails is:",$scope.resetDisplayVehicle)}},$scope.instantQuoteCalculation=function(addOnCoverForCar){$scope.quoteParam={},$scope.vehicleInfo={},$scope.vehicleDetails={},$rootScope.vehicleInfo={},$rootScope.vehicleDetails={},$scope.toggleCounter=0,$scope.carInsuranceTypes=[],$scope.yearList=[],$scope.defaultMetroList=[];var carRegistrationDetails={},carQuoteCookie=localStorageService.get("carQuoteInputParamaters"),vehicleDetailsCookie=localStorageService.get("selectedCarDetails"),professionalCarQuoteCookie={},professionalCarParams=!1;$scope.defaultMetroList=localStorageService.get("defaultMetroCityList"),$scope.carInsuranceTypes=carInsuranceTypeGeneric,$scope.policyStatusList=policyStatusListGeneric,$scope.ncbList=ncbListGeneric,$scope.previousClaimStatus=previousClaimStatusGeneric,$scope.fuelList=["PETROL","DIESEL","LPG/CNG"],$rootScope.regNumStatus=!1,$rootScope.disableCarRegPopup=!0,$rootScope.wordPressEnabled?$scope.instantQuoteCarForm=!1:$scope.instantQuoteCarForm=!0,$scope.carInstantQuoteForm.$valid?$rootScope.instantQuoteInvalidSummaryStatus=!0:$rootScope.instantQuoteInvalidSummaryStatus=!1,$scope.defaultMetroList||($scope.defaultMetroList=commonResultLabels.popularRTOList.data,localStorageService.set("defaultMetroCityList",$scope.defaultMetroList)),localStorageService.get("professionalQuoteParams")&&(localStorageService.get("professionalQuoteParams").carInfo&&(professionalCarQuoteCookie=localStorageService.get("professionalQuoteParams").carInfo),professionalCarParams=!0),$scope.callForLanding(),$rootScope.openRegPopup=function(){$scope.vehicleDetails.insuranceType={type:"Insure New Car",value:"new"},$scope.alterRenewal(),$rootScope.Regpopup=!0},$scope.closePop=function(){$scope.disabledRedirectToResult&&($scope.disabledRedirectToResult=!1),$rootScope.Regpopup=!1},$scope.setRangesPrevPolicyExpiryDate=function(){var prevPolExpDateOption={};1==$scope.vehicleDetails.policyStatus.key?(prevPolExpDateOption.minimumDateStringFormat=$scope.vehicleInfo.dateOfRegistration,prevPolExpDateOption.maximumDateStringFormat=$scope.vehicleDetails.policyStatus.expiryDate):2==$scope.vehicleDetails.policyStatus.key?(prevPolExpDateOption.minimumDayLimit=-90,prevPolExpDateOption.maximumDayLimit=-1):(prevPolExpDateOption.minimumDayLimit=0,prevPolExpDateOption.maximumDayLimit=60),prevPolExpDateOption.changeMonth=!0,prevPolExpDateOption.changeYear=!0,prevPolExpDateOption.dateFormat="dd/mm/yy",$scope.previousPolicyExpiryDateOptions=setP365DatePickerProperties(prevPolExpDateOption)},$scope.validatePrevPolicyStartDate=function(){"undefined"!==String($scope.vehicleDetails.PreviousPolicyStartDate)&&"undefined"!==String($scope.vehicleDetails.PreviousPolicyExpiryDate)&&convertStringFormatToDate($scope.vehicleDetails.PreviousPolicyStartDate,function(formattedPrevPolStartDate){convertStringFormatToDate($scope.vehicleInfo.PreviousPolicyExpiryDate,function(formattedPrevPolExpDate){convertStringFormatToDate($scope.vehicleInfo.dateOfRegistration,function(formattedDateOfRegistration){var selPreviousPolicyExpiryDate=angular.copy(formattedPrevPolExpDate),tempCalcPrevPolStartDate=new Date(selPreviousPolicyExpiryDate.setFullYear(selPreviousPolicyExpiryDate.getFullYear()-1));tempCalcPrevPolStartDate=new Date(tempCalcPrevPolStartDate.setDate(tempCalcPrevPolStartDate.getDate()+1)),convertDateFormatToString(tempCalcPrevPolStartDate,function(formattedPrevPolStartDate){$scope.vehicleDetails.PreviousPolicyStartDate=formattedPrevPolStartDate})})})})},$scope.validateRegistrationDate=function(){"undefined"!==String($scope.vehicleInfo.dateOfRegistration)&&convertStringFormatToDate($scope.vehicleInfo.dateOfRegistration,function(formattedRegistrationDate){var selDateOfRegistration=new Date(angular.copy($scope.vehicleInfo.dateOfRegistration));new Date(angular.copy($scope.vehicleDetails.PreviousPolicyStartDate))<selDateOfRegistration?($scope.vehicleDetails.PreviousPolicyStartDate=$scope.vehicleInfo.dateOfRegistration,$scope.validatePrevPolicyStartDate()):($scope.prevPolicyStartDateWarning="",convertStringFormatToDate($scope.vehicleInfo.PreviousPolicyExpiryDate,function(formattedPolicyExpiryDate){var tempPreviousPolicyExpiryDate=new Date(angular.copy(formattedPolicyExpiryDate)),tempCalcPrevPolStartDate=new Date(tempPreviousPolicyExpiryDate.setFullYear(new Date(tempPreviousPolicyExpiryDate).getFullYear()-1));tempCalcPrevPolStartDate=new Date(new Date(String(tempCalcPrevPolStartDate)).setDate(new Date(String(tempCalcPrevPolStartDate)).getDate()+1)),convertDateFormatToString(tempCalcPrevPolStartDate,function(formattedPrevPolStartDate){$scope.vehicleDetails.PreviousPolicyStartDate=formattedPrevPolStartDate})})),$scope.setRangePrevPolicyExpiryDate(),$scope.calculatedVehicleRegistrationDate=getDateForDisplay($scope.vehicleInfo.dateOfRegistration),$scope.vehicleDetails.regYear=$scope.vehicleInfo.dateOfRegistration.split("/")[2],$scope.manufacturingYearList=listManufactureYear($scope.vehicleDetails.regYear,2),$scope.vehicleDetails.manufacturingYear=$scope.manufacturingYearList[0],$scope.registrationDateError=""})},$scope.getRegPlaceListRTO=function(regNumber,registrationNumber){return regNumber.indexOf("-")>0&&(regNumber=regNumber.replace("-","")),$http.get(getServiceLink+$scope.p365Labels.documentType.RTODetails+"&q="+regNumber).then(function(callback){if((callback=JSON.parse(callback.data)).responseCode==$scope.p365Labels.responseCode.success){$rootScope.selectedCarRegistrationObject=callback.data[0],$rootScope.vehicleDetails.registrationNumber=registrationNumber.trim(),$scope.vehicleInfo.registrationNumber=$rootScope.vehicleDetails.registrationNumber.toUpperCase();var rtoDetail={};rtoDetail.rtoName=$rootScope.selectedCarRegistrationObject.display,rtoDetail.rtoCity=$rootScope.selectedCarRegistrationObject.city,rtoDetail.rtoState=$rootScope.selectedCarRegistrationObject.state,rtoDetail.rtoObject=callback.data[0],rtoDetail.cityStatus=!0,rtoDetail.rtoStatus=!0,getPincodeFromCity($http,rtoDetail,function(resultedRTOInfo){var getCity;resultedRTOInfo.responseCode==$scope.p365Labels.responseCode.success?(rtoDetail.pincode=resultedRTOInfo.data[0].pincode,localStorageService.get("carRegAddress")?(localStorageService.get("carRegAddress").pincode=rtoDetail.pincode,localStorageService.get("carRegAddress").city=$rootScope.selectedCarRegistrationObject.city,localStorageService.get("carRegAddress").state=$rootScope.selectedCarRegistrationObject.state):((getCity={}).pincode=rtoDetail.pincode,getCity.city=$rootScope.selectedCarRegistrationObject.city,getCity.state=$rootScope.selectedCarRegistrationObject.state,localStorageService.set("carRegAddress",getCity))):($scope.pincode="",rtoDetail.pincode="",localStorageService.get("carRegAddress")?(localStorageService.get("carRegAddress").pincode=rtoDetail.pincode,localStorageService.get("carRegAddress").city=$rootScope.selectedCarRegistrationObject.city,localStorageService.get("carRegAddress").state=$rootScope.selectedCarRegistrationObject.state):((getCity={}).pincode=rtoDetail.pincode,getCity.city=$rootScope.selectedCarRegistrationObject.city,getCity.state=$rootScope.selectedCarRegistrationObject.state,localStorageService.set("carRegAddress",getCity)));localStorageService.set("carRegistrationPlaceUsingIP",rtoDetail),$scope.vehicleInfo.registrationPlace=rtoDetail.rtoName}),$scope.carInstantQuoteForm.$setDirty()}else $rootScope.regNumStatus=!0})},$scope.getRegNumber=function(registrationNumber){if("undefined"!=String(registrationNumber)){var registrationDetails={};if(registrationNumber=registrationNumber.replace(/[^a-zA-Z0-9]/gi,""),$scope.vehicleDetails=localStorageService.get("selectedCarDetails"),$scope.vehicleDetails.engineNumber="",$scope.vehicleDetails.chassisNumber="",$scope.vehicleDetails.isregNumberDisabled=!0,localStorageService.set("selectedCarDetails",$scope.vehicleDetails),$rootScope.isChasisNumber=!1,$rootScope.isEngineNumber=!1,$rootScope.isregNumber=!1,$scope.isCarFound=!0,registrationNumber.trim().match(/^[a-zA-Z]{2}[0-9]{1,2}[a-zA-Z]{0,3}[0-9]{1,4}$/)&&registrationNumber.trim().length<=11&&registrationNumber.trim().length>4){$rootScope.regNumStatus=!1,$scope.fetchingCar=!0,$scope.vehicleDetails.insuranceType.type==$scope.carInsuranceTypes[1].type&&($scope.vehicleInfo.dateOfRegistration=makeObjectEmpty($scope.vehicleInfo.dateOfRegistration,"text")),$scope.selectedVariantDetails={selectedItem:""},registrationDetails.registrationNumber=registrationNumber,localStorageService.set("carRegistrationDetails",registrationDetails);var request={};request.registrationNumber=registrationNumber.toUpperCase(),request.lob="car",request.requestType="VEHICLERTOREQCONFIG",RestAPI.invoke($scope.p365Labels.transactionName.getVehicleRTODetails,request).then(function(callback){if(callback.responseCode==$scope.p365Labels.responseCode.success)if(callback.data){var vehicleRTODetails=callback.data;if($scope.isCarFound=!0,$scope.vehicleDetails.insuranceType.type==$scope.carInsuranceTypes[1].type)if(vehicleRTODetails.registrationYear){var selectedRegYear=vehicleRTODetails.registrationYear;$scope.vehicleDetails.regYear=selectedRegYear.trim(),$scope.vehicleInfo.dateOfRegistration="01/07/"+$scope.vehicleDetails.regYear,$scope.validateRegistrationDate()}else $scope.isCarFound=!1,$scope.vehicleDetails.regYear="";vehicleRTODetails.uMake&&vehicleRTODetails.model&&vehicleRTODetails.variant&&vehicleRTODetails.fuelType?($scope.vehicleInfo.make=vehicleRTODetails.uMake,$scope.vehicleInfo.model=vehicleRTODetails.model,$scope.vehicleInfo.variant=vehicleRTODetails.variant,$scope.vehicleInfo.fuel=vehicleRTODetails.fuelType,vehicleRTODetails.cubicCapacity&&($scope.vehicleInfo.cubicCapacity=vehicleRTODetails.cubicCapacity),vehicleRTODetails.variant&&vehicleRTODetails.cubicCapacity&&($scope.selectedVariantDetails.selectedItem=$scope.selectedVariantDetails.selectedItem=vehicleRTODetails.variant+"-"+vehicleRTODetails.cubicCapacity+"cc")):($scope.selectedItem.displayVehicle="",$scope.vehicleInfo.make="",$scope.vehicleInfo.model="",$scope.vehicleInfo.variant="",$scope.vehicleInfo.fuel="",$scope.vehicleInfo.cubicCapacity="",$scope.isCarFound=!1,$scope.fetchingCar=!1),vehicleRTODetails.vechileIdentificationNumber&&($scope.vehicleDetails.chassisNumber=vehicleRTODetails.vechileIdentificationNumber),vehicleRTODetails.engineNumber&&($scope.vehicleDetails.engineNumber=vehicleRTODetails.engineNumber),$scope.fetchingCar=!1;var regNumber=registrationNumber.trim().slice(0,2)+""+registrationNumber.trim().slice(2,4);$scope.getRegPlaceListRTO(regNumber,registrationNumber)}else{$scope.isCarFound=!1,$scope.fetchingCar=!1,$scope.selectedItem.displayVehicle="",$scope.vehicleInfo.displayVehicle="",$scope.vehicleDetails.regYear="";regNumber=registrationNumber.trim().slice(0,2)+""+registrationNumber.trim().slice(2,4);$scope.getRegPlaceListRTO(regNumber,registrationNumber)}else{$scope.isCarFound=!1,$scope.fetchingCar=!1,$scope.selectedItem.displayVehicle="",$scope.vehicleInfo.displayVehicle="",$scope.vehicleDetails.regYear="";regNumber=registrationNumber.trim().slice(0,2)+""+registrationNumber.trim().slice(2,4);$scope.getRegPlaceListRTO(regNumber,registrationNumber)}})}else $rootScope.regNumStatus=!0}else $rootScope.regNumStatus=!0},$scope.changePolStatus=function(){if($scope.vehicleDetails.insuranceType.type==$scope.carInsuranceTypes[1].type?($scope.renewal=!0,$scope.vehicleInfo.PreviousPolicyExpiryDate=$scope.vehicleDetails.policyStatus.expiryDate):($scope.renewal=!1,$scope.vehicleInfo.PreviousPolicyExpiryDate=makeObjectEmpty($scope.vehicleInfo.PreviousPolicyExpiryDate,"text")),3==$scope.vehicleDetails.policyStatus.key?$scope.vehicleDetails.previousPolicyExpired="N":$scope.vehicleDetails.previousPolicyExpired="Y",1==$scope.toggleCounter)$location.path()},$scope.alterRenewal=function(){$scope.vehicleDetails.insuranceType.type!=$scope.carInsuranceTypes[1].type?($scope.polStatus=!1,$scope.renewal=!1,$scope.yearList=listRegistrationYear($scope.vehicleDetails.insuranceType.value,$scope.vehicleDetails.maxVehicleAge),$scope.vehicleDetails.regYear=$scope.yearList[0]):($scope.polStatus=!0,$scope.renewal=!0,$scope.yearList=listRegistrationYear($scope.vehicleDetails.insuranceType.value,$scope.vehicleDetails.maxVehicleAge)),$scope.quoteParam.policyType=$scope.vehicleDetails.insuranceType.value,$scope.changePolStatus()},$scope.updateAnnualPremiumRange=function(minPremiumValue,maxPremiumValue){minPremiumValue>maxPremiumValue?($rootScope.minAnnualPremium=maxPremiumValue,$rootScope.maxAnnualPremium=minPremiumValue):($rootScope.minAnnualPremium=minPremiumValue,$rootScope.maxAnnualPremium=maxPremiumValue)},$scope.errorMessage=function(errorMsg){"undefined"==String($rootScope.carQuoteResult)||0==$rootScope.carQuoteResult.length?($scope.updateAnnualPremiumRange(1e3,5e3),$rootScope.instantQuoteSummaryStatus=!1,$rootScope.instantQuoteSummaryError=errorMsg,$scope.instantQuoteCarForm=!1,$rootScope.disableCarRegPopup=!1):$rootScope.carQuoteResult.length>0&&($rootScope.instantQuoteSummaryStatus=!0,$scope.instantQuoteCarForm=!1,$rootScope.disableCarRegPopup=!1),$rootScope.loading=!1},$scope.tooltipPrepare=function(carResult){var i,resultCarrierId=[],testCarrierId=[];for(i=0;i<carResult.length;i++){var result=carResult[i];if(Number(result.netPremium)>0){var carrierInfo={};"new"==result.policyType&&result.comprehensive?(carrierInfo.id=result.carrierId,carrierInfo.name=result.insuranceCompany,carrierInfo.annualPremium=result.netPremium,carrierInfo.claimsRating=result.insurerIndex,$rootScope.wordPressEnabled&&(carrierInfo.insuredDeclareValue=result.insuredDeclareValue,carrierInfo.businessLineId="2"),0==p365Includes(testCarrierId,result.carrierId)&&(resultCarrierId.push(carrierInfo),testCarrierId.push(result.carrierId))):"renew"==result.policyType&&(carrierInfo.id=result.carrierId,carrierInfo.name=result.insuranceCompany,carrierInfo.annualPremium=result.netPremium,carrierInfo.claimsRating=result.insurerIndex,$rootScope.wordPressEnabled&&(carrierInfo.insuredDeclareValue=result.insuredDeclareValue,carrierInfo.businessLineId="2"),0==p365Includes(testCarrierId,result.carrierId)&&(resultCarrierId.push(carrierInfo),testCarrierId.push(result.carrierId)))}}$rootScope.resultedCarriers=resultCarrierId,$rootScope.resultCarrierId=resultCarrierId,$rootScope.calculatedQuotesLength=2==String(carResult.length).length?String(carResult.length):"0"+String(carResult.length),$rootScope.calculatedRidersLength=2==String(0).length?String(0):"0"+String(0),setTimeout(function(){scrollv=new scrollable({wrapperid:"scrollable-v",moveby:4,mousedrag:!0})},2e3)},$scope.processResult=function(){if($rootScope.carQuoteResult.length>0){$scope.instantQuoteCarForm=!1,$rootScope.disableCarRegPopup=!1,$rootScope.loading=!1,$rootScope.campaignFlag=!0,$rootScope.enabledProgressLoader=!1,$rootScope.carQuoteResult=$filter("orderBy")($rootScope.carQuoteResult,"grossPremium");for(var minAnnualPremiumValue=$rootScope.carQuoteResult[0].grossPremium,annualPremiumSliderArray=[],j=0;j<$rootScope.carQuoteResult.length;j++){var calculatedDiscAmt=0,discountAmtList=$rootScope.carQuoteResult[j].discountDetails;if("undefined"!=String(discountAmtList)){for(var i=0;i<discountAmtList.length;i++)calculatedDiscAmt+=discountAmtList[i]["com.sutrr.quote.carquotecalc.DiscountDetails"].discountAmount;calculatedDiscAmt+=$rootScope.carQuoteResult[j].grossPremium,annualPremiumSliderArray.push(calculatedDiscAmt)}else annualPremiumSliderArray.push($rootScope.carQuoteResult[j].grossPremium)}annualPremiumSliderArray=$filter("orderBy")(annualPremiumSliderArray),$scope.updateAnnualPremiumRange(minAnnualPremiumValue,annualPremiumSliderArray[annualPremiumSliderArray.length-1]),3==localStorageService.get("selectedBusinessLineId")&&$scope.tooltipPrepare($rootScope.carQuoteResult)}},$scope.singleClickCarQuote=function(){setTimeout(function(){if(!$scope.carInstantQuoteForm.$invalid){$scope.quote={},$rootScope.instantQuoteSummaryStatus=!0,$rootScope.instantQuoteInvalidSummaryStatus=!0,$scope.instantQuoteCarForm=!0,$rootScope.disableCarRegPopup=!0,$rootScope.loading=!0,$rootScope.quoteResultCount=0;var todayDate=new Date;if($scope.quoteParam.policyType==$scope.carInsuranceTypes[0].value)$scope.vehicleInfo.dateOfRegistration=("0"+todayDate.getDate().toString()).substr(-2)+"/"+("0"+(Number(todayDate.getMonth())+1).toString()).substr(-2)+"/"+$scope.vehicleDetails.regYear,$scope.vehicleInfo.PreviousPolicyExpiryDate=makeObjectEmpty($scope.vehicleInfo.PreviousPolicyExpiryDate,"text");else todayDate.getFullYear()==$scope.vehicleDetails.regYear?$scope.vehicleInfo.dateOfRegistration="01/01/"+$scope.vehicleDetails.regYear:$scope.vehicleInfo.dateOfRegistration="01/07/"+$scope.vehicleDetails.regYear,convertStringFormatToDate($scope.vehicleInfo.PreviousPolicyExpiryDate,function(formattedPolicyExpiryDate){var tempPreviousPolicyExpiryDate=new Date(angular.copy(formattedPolicyExpiryDate)),tempCalcPrevPolStartDate=new Date(tempPreviousPolicyExpiryDate.setFullYear(new Date(tempPreviousPolicyExpiryDate).getFullYear()-1));(tempCalcPrevPolStartDate=new Date(new Date(String(tempCalcPrevPolStartDate)).setDate(new Date(String(tempCalcPrevPolStartDate)).getDate()+1))).setHours(0,0,0,0)<new Date($scope.vehicleInfo.dateOfRegistration).setHours(0,0,0,0)?$scope.vehicleDetails.PreviousPolicyStartDate=$scope.vehicleInfo.dateOfRegistration:convertDateFormatToString(tempCalcPrevPolStartDate,function(formattedPrevPolStartDate){$scope.vehicleDetails.PreviousPolicyStartDate=formattedPrevPolStartDate})});if(null!=$rootScope.selectedCarRegistrationObject||"undefined"!=String($rootScope.selectedCarRegistrationObject))$scope.vehicleInfo.registrationPlace=$rootScope.selectedCarRegistrationObject.display,$rootScope.vehicleInfo.registrationPlace=$rootScope.selectedCarRegistrationObject.display,$scope.vehicleInfo.city=$rootScope.selectedCarRegistrationObject.city,$scope.vehicleInfo.RTOCode=$rootScope.selectedCarRegistrationObject.regisCode,$scope.vehicleInfo.state=$rootScope.selectedCarRegistrationObject.state;else for(var selectedMetroDetails,city=localStorageService.get("carRegAddress")?localStorageService.get("carRegAddress").city:"Mumbai",i=0;i<$scope.defaultMetroList.length;i++)if($scope.defaultMetroList[i].city==city)for(var j=0;j<$scope.defaultMetroList[i].RTODetails.length;j++)if((selectedMetroDetails=$scope.defaultMetroList[i].RTODetails[j]).display==$scope.vehicleInfo.registrationPlace){$scope.vehicleInfo.city=selectedMetroDetails.city,$scope.vehicleInfo.RTOCode=selectedMetroDetails.regisCode,$scope.vehicleInfo.state=selectedMetroDetails.state;break}$scope.vehicleDetails.registrationNumber="undefined"!=String($rootScope.vehicleDetails.registrationNumber)?$rootScope.vehicleDetails.registrationNumber:$scope.vehicleDetails.registrationNumber,$rootScope.showCarRegAreaStatus?$scope.vehicleInfo.RTOCode=$scope.vehicleInfo.registrationPlace.substr(0,2).toUpperCase()+$scope.vehicleInfo.registrationPlace.substr(3,2).toUpperCase():$scope.vehicleInfo.RTOCode=$scope.vehicleDetails.registrationNumber.substr(0,4).toUpperCase(),$scope.vehicleDetails.showCarRegAreaStatus=$rootScope.showCarRegAreaStatus,localStorageService.set("selectedBusinessLineId",3);var personDob=new Date((new Date).getFullYear()-46);if(convertDateFormatToString(personDob,function(formattedDateOfBirth){$scope.vehicleDetails.dateOfBirth=personDob,$scope.vehicleDetails.formattedDateOfBirth=formattedDateOfBirth}),"true"==$scope.vehicleInfo.previousClaim||"new"==$scope.quoteParam.policyType?$scope.quoteParam.ncb=0:$scope.quoteParam.ncb=$scope.vehicleDetails.ncb.value,$scope.vehicleDetails.idvOption=1,$scope.vehicleDetails.manufacturingYear=$scope.vehicleDetails.regYear,$scope.vehicleInfo.IDV=0,delete $scope.vehicleInfo.best_quote_id,$scope.quoteParam.quoteType&&delete $scope.quoteParam.quoteType,$scope.vehicleInfo.idvOption=$scope.vehicleDetails.idvOption,$scope.quote.quoteParam=$scope.quoteParam,$scope.quote.vehicleInfo=$scope.vehicleInfo,localStorageService.set("carQuoteInputParamaters",$scope.quote),localStorageService.set("selectedCarDetails",$scope.vehicleDetails),localStorageService.get("professionalQuoteParams"))if(localStorageService.get("professionalQuoteParams").carInfo){var professionalQuoteCookie=localStorageService.get("professionalQuoteParams");professionalQuoteCookie.carInfo.registrationYear=$scope.vehicleDetails.regYear,professionalQuoteCookie.carInfo.make=$scope.vehicleInfo.make,professionalQuoteCookie.carInfo.model=$scope.vehicleInfo.model,professionalQuoteCookie.carInfo.variant=$scope.vehicleInfo.variant,professionalQuoteCookie.carInfo.fuel=$scope.vehicleInfo.fuel,professionalQuoteCookie.carInfo.cubicCapacity=$scope.vehicleInfo.cubicCapacity,localStorageService.set("professionalQuoteParams",professionalQuoteCookie)}else $scope.profQuoteCookie={},$scope.profQuoteCookie.carInfo={},$scope.profQuoteCookie.carInfo.registrationYear=$scope.vehicleDetails.regYear,$scope.profQuoteCookie.carInfo.make=$scope.vehicleInfo.make,$scope.profQuoteCookie.carInfo.model=$scope.vehicleInfo.model,$scope.profQuoteCookie.carInfo.variant=$scope.vehicleInfo.variant,$scope.profQuoteCookie.carInfo.fuel=$scope.vehicleInfo.fuel,$scope.profQuoteCookie.carInfo.cubicCapacity=$scope.vehicleInfo.cubicCapacity,localStorageService.set("professionalQuoteParams",$scope.profQuoteCookie);else $scope.profQuoteCookie={},$scope.profQuoteCookie.carInfo={},$scope.profQuoteCookie.carInfo.registrationYear=$scope.vehicleDetails.regYear,$scope.profQuoteCookie.carInfo.make=$scope.vehicleInfo.make,$scope.profQuoteCookie.carInfo.model=$scope.vehicleInfo.model,$scope.profQuoteCookie.carInfo.variant=$scope.vehicleInfo.variant,$scope.profQuoteCookie.carInfo.fuel=$scope.vehicleInfo.fuel,$scope.profQuoteCookie.carInfo.cubicCapacity=$scope.vehicleInfo.cubicCapacity,localStorageService.set("professionalQuoteParams",$scope.profQuoteCookie);$rootScope.idvOptionCopy=angular.copy($scope.vehicleDetails.idvOption),$scope.requestId=null;localStorageService.get("quoteUserInfo");$scope.carQuoteRequestFormation($scope.quote),RestAPI.invoke(getCarQuote,$scope.quoteRequest).then(function(callback){$rootScope.carQuoteRequest=[],callback.responseCode==$scope.p365Labels.responseCode.success1?($scope.responseCodeList=[],$scope.requestId=callback.QUOTE_ID,$scope.UNIQUE_QUOTE_ID_ENCRYPTED=callback.encryptedQuoteId,localStorageService.set("CAR_UNIQUE_QUOTE_ID_ENCRYPTED",$scope.UNIQUE_QUOTE_ID_ENCRYPTED),localStorageService.set("CAR_UNIQUE_QUOTE_ID",$scope.requestId),localStorageService.set("car_best_quote_id",$scope.requestId),$rootScope.carQuoteRequest=callback.data,"undefined"!=String($rootScope.carQuoteResult)&&$rootScope.carQuoteResult.length>0&&($rootScope.carQuoteResult.length=0),$rootScope.carQuoteResult=[],angular.forEach($rootScope.carQuoteRequest,function(obj,i){var request={},header={};header.messageId=messageIDVar,header.campaignID=campaignIDVar,header.source=sourceOrigin,header.transactionName=getCarQuoteResult,header.deviceId=deviceIdOrigin,request.header=header,request.body=obj,$http({method:"POST",url:getQuoteCalcLink,data:request}).success(function(callback,status){var carQuoteResponse=JSON.parse(callback);if($rootScope.quoteResultCount+=1,carQuoteResponse.QUOTE_ID==$scope.requestId)if($scope.responseCodeList.push(carQuoteResponse.responseCode),carQuoteResponse.responseCode==$scope.p365Labels.responseCode.success1){for(var i=0;i<$rootScope.carQuoteRequest.length;i++)$rootScope.carQuoteRequest[i].messageId==carQuoteResponse.messageId&&($rootScope.loading=!1,$rootScope.carQuoteResult.push(carQuoteResponse.data.quotes[0]),$rootScope.carQuoteRequest[i].status=1);$scope.processResult()}else for(i=0;i<$rootScope.carQuoteRequest.length;i++)$rootScope.carQuoteRequest[i].messageId==carQuoteResponse.messageId&&($rootScope.carQuoteRequest[i].status=2,$rootScope.carQuoteRequest[i].message=$sce.trustAsHtml($scope.p365Labels.validationMessages.generalisedMotorErrMsg))}).error(function(data,status){$scope.responseCodeList.push($scope.p365Labels.responseCode.systemError)})}),$scope.$watch("responseCodeList",function(newValue,oldValue,scope){if(p365Includes($scope.responseCodeList,$scope.p365Labels.responseCode.success)&&($rootScope.loading=!1),$scope.responseCodeList.length==$rootScope.carQuoteRequest.length){$rootScope.loading=!1,$rootScope.setTooltip=!1;for(var i=0;i<$rootScope.carQuoteRequest.length;i++)0==$rootScope.carQuoteRequest[i].status&&($rootScope.carQuoteRequest[i].status=2,$rootScope.carQuoteRequest[i].message=$sce.trustAsHtml($scope.p365Labels.validationMessages.generalisedMotorErrMsg));p365Includes($scope.responseCodeList,$scope.p365Labels.responseCode.success)||(p365Includes($scope.responseCodeList,$scope.p365Labels.responseCode.quoteNotAvailable)?$scope.errorMessage($scope.p365Labels.validationMessages.productNotFoundMsg):$scope.errorMessage($sce.trustAsHtml($scope.p365Labels.validationMessages.generalisedMotorErrMsg)))}},!0)):($scope.responseCodeList=[],"undefined"!=String($rootScope.carQuoteResult)&&$rootScope.carQuoteResult.length>0&&($rootScope.carQuoteResult.length=0),$rootScope.carQuoteResult=[],$scope.errorMessage(callback.message))})}},100)},$scope.changeRegYear=function(){},$scope.prePopulateFields=function(){if(localStorageService.get("selectedCarDetails")){if(localStorageService.get("selectedCarDetails").policyStatus){var getPolicyStatus=localStorageService.get("selectedCarDetails").policyStatus;for(i=0;i<$scope.policyStatusList.length;i++)if(getPolicyStatus.key==$scope.policyStatusList[i].key){$scope.vehicleDetails.policyStatus=$scope.policyStatusList[i];break}}else for(i=0;i<$scope.policyStatusList.length;i++)if($scope.vehicleDetails.policyStatusKey==$scope.policyStatusList[i].key){$scope.vehicleDetails.policyStatus=$scope.policyStatusList[i];break}}else for(var i=0;i<$scope.policyStatusList.length;i++)if($scope.vehicleDetails.policyStatusKey==$scope.policyStatusList[i].key){$scope.vehicleDetails.policyStatus=$scope.policyStatusList[i];break}for(i=0;i<$scope.carInsuranceTypes.length;i++)if($scope.quoteParam.policyType==$scope.carInsuranceTypes[i].value){$scope.vehicleDetails.insuranceType=$scope.carInsuranceTypes[i];break}for(i=0;i<$scope.ncbList.length;i++)if($scope.quoteParam.ncb==$scope.ncbList[i].value){$scope.vehicleDetails.ncb=$scope.ncbList[i];break}$scope.yearList=listRegistrationYear($scope.vehicleDetails.insuranceType.value,$scope.vehicleDetails.maxVehicleAge),$scope.alterRenewal(),$scope.toggleCounter=1,""==$scope.vehicleDetails.regYear&&($scope.vehicleDetails.regYear=$rootScope.regYearCopy);var carRegistrationDetails=localStorageService.get("carRegistrationDetails");carRegistrationDetails&&"undefined"!=String(carRegistrationDetails.registrationNumber)&&null!=carRegistrationDetails.registrationNumber&&($rootScope.vehicleDetails.registrationNumber=carRegistrationDetails.registrationNumber),console.log("** vehicleInfo in prepopulate field is **",$scope.vehicleInfo)},$scope.fetchDefaultInputParamaters=function(defaultQuoteStatus,defaultInputParamCallback){if($scope.renewal=!0,$scope.polStatus=!0,defaultQuoteStatus){if(console.log("inside defaultQuoteStatus: ",defaultCarQuoteParam),$scope.quoteParam=defaultCarQuoteParam.quoteParam,$scope.vehicleDetails=defaultCarQuoteParam.vehicleDetails,$scope.vehicleInfo.IDV=0,$scope.vehicleInfo.RTOCode="MH01",$scope.vehicleInfo.previousClaim="false",$scope.vehicleInfo.registrationPlace="MH-01 Mumbai Tardeo",$scope.vehicleInfo.idvOption=1,$scope.vehicleInfo.make="Maruti Suzuki",$scope.vehicleInfo.model="Alto 800",$scope.vehicleInfo.variant="LX",$scope.vehicleInfo.fuel="PETROL",$scope.vehicleInfo.cubicCapacity="796",$rootScope.vehicleInfo=$scope.vehicleInfo,console.log("** $rootScope.vehicleInfo in fetchDefaultParam is ** :",$rootScope.vehicleInfo),$rootScope.wordPressEnabled){$rootScope.disableCarRegPopup=!1,$scope.quote={},$scope.quote.quoteParam=$scope.quoteParam,$scope.quote.vehicleInfo=$scope.vehicleInfo;for(var i=0;i<$scope.policyStatusList.length;i++)if($scope.vehicleDetails.policyStatusKey==$scope.policyStatusList[i].key){$scope.vehicleDetails.policyStatus=$scope.policyStatusList[i];break}localStorageService.set("selectedBusinessLineId",3),localStorageService.set("selectedCarDetails",$scope.vehicleDetails)}console.log("** $scope.quote in carQuoteInputParamaters is ** :",$scope.quote),professionalCarParams&&($scope.vehicleDetails.regYear=professionalCarQuoteCookie.registrationYear,professionalCarQuoteCookie.registrationPlace&&($rootScope.vehicleInfo.registrationPlace=professionalCarQuoteCookie.registrationPlace,$scope.vehicleInfo.registrationPlace=professionalCarQuoteCookie.registrationPlace),$scope.vehicleInfo.make=professionalCarQuoteCookie.make,$scope.vehicleInfo.model=professionalCarQuoteCookie.model,$scope.vehicleInfo.variant=professionalCarQuoteCookie.variant,$scope.vehicleInfo.fuel=professionalCarQuoteCookie.fuel,$scope.vehicleInfo.cubicCapacity=professionalCarQuoteCookie.cubicCapacity,console.log("** professionalCarQuoteCookie is **",$scope.vehicleInfo)),$rootScope.showCarRegAreaStatus=!0,$scope.prePopulateFields()}else carQuoteCookie.quoteParam&&($scope.quoteParam=carQuoteCookie.quoteParam),$rootScope.wordPressEnabled&&($rootScope.disableCarRegPopup=!1),$scope.vehicleDetails=vehicleDetailsCookie,localStorageService.get("selectedCarDetails")&&(vehicleDetailsCookie.displayVehicle=localStorageService.get("selectedCarDetails").displayVehicle),$scope.vehicleInfo=carQuoteCookie.vehicleInfo,console.log("inside else part of defaultQuoteStatus: ",$scope.vehicleInfo),professionalCarParams&&($scope.vehicleDetails.regYear=professionalCarQuoteCookie.registrationYear,professionalCarQuoteCookie.registrationPlace&&($rootScope.vehicleInfo={},$rootScope.vehicleInfo.registrationPlace=professionalCarQuoteCookie.registrationPlace,$scope.vehicleInfo.registrationPlace=professionalCarQuoteCookie.registrationPlace),$scope.vehicleInfo.make=professionalCarQuoteCookie.make,$scope.vehicleInfo.model=professionalCarQuoteCookie.model,$scope.vehicleInfo.variant=professionalCarQuoteCookie.variant,$scope.vehicleInfo.fuel=professionalCarQuoteCookie.fuel,$scope.vehicleInfo.cubicCapacity=professionalCarQuoteCookie.cubicCapacity,$scope.selectedItem={displayVehicle:vehicleDetailsCookie.displayVehicle}),$scope.quoteParam.riders=makeObjectEmpty($scope.quoteParam.riders,"array"),$scope.vehicleDetails.selectedAddOnCovers=makeObjectEmpty($scope.vehicleDetails.selectedAddOnCovers,"array"),$scope.vehicleDetails.addOnCoverCustomAmount=makeObjectEmpty($scope.vehicleDetails.addOnCoverCustomAmount,"array"),$scope.vehicleDetails.checkforNonElectrical=!1,$scope.vehicleDetails.checkforElectrical=!1,$scope.vehicleDetails.checkforPsgCover=!1,$scope.vehicleDetails.checkforLpgCngCover=!1,$scope.vehicleDetails.checkforDriverAccCover=!1,$scope.vehicleDetails.checkforAccessoriesCover=!1,void 0!=localStorageService.get("carRegistrationPlaceUsingIP")&&null!=localStorageService.get("carRegistrationPlaceUsingIP")&&1==localStorageService.get("carRegistrationPlaceUsingIP").rtoStatus&&($scope.vehicleInfo.registrationPlace=localStorageService.get("carRegistrationPlaceUsingIP").rtoName,$rootScope.vehicleInfo.registrationPlace=localStorageService.get("carRegistrationPlaceUsingIP").rtoName,$rootScope.selectedCarRegistrationObject=localStorageService.get("carRegistrationPlaceUsingIP").rtoObject),$rootScope.showCarRegAreaStatus=vehicleDetailsCookie.showCarRegAreaStatus,$rootScope.vehicleDetails.registrationNumber=carRegistrationDetails.registrationNumber,$scope.prePopulateFields();console.log("$scope.vehicle info in step 2 is: ",$scope.vehicleInfo),defaultInputParamCallback()},carQuoteCookie?$scope.fetchDefaultInputParamaters(!1,function(){}):$scope.fetchDefaultInputParamaters(!0,function(){}),$scope.$on("callSingleClickCarQuote",function(){$scope.singleClickCarQuote()})},localStorageService.get("ridersCarStatus")?$scope.instantQuoteCalculation(localStorageService.get("addOnCoverListForCar")):getRiderList(RestAPI,$scope.p365Labels.documentType.riderList,$scope.p365Labels.documentType.car,$scope.p365Labels.request.findAppConfig,function(addOnCoverForCar){localStorageService.set("addOnCoverListForCar",addOnCoverForCar),localStorageService.set("ridersCarStatus",!0),getListFromDB(RestAPI,"","CarDataList",$scope.p365Labels.request.findAppConfig,function(callbackCar5){callbackCar5.responseCode==$scope.p365Labels.responseCode.success&&(localStorageService.set("carMakeListDisplay",callbackCar5.data),$scope.instantQuoteCalculation(addOnCoverForCar))})}),$scope.backToProfessionalJourney=function(){$location.path("/professionalJourney")}}]);var jsonEncodeCarrierList=[];angular.module("carResult",["CoreComponentApp","LocalStorageModule","checklist-model","ngMessages"]).controller("carResultController",["$scope","$rootScope","$window","$filter","RestAPI","localStorageService","$timeout","$location","$interval","$http","$sce","$q","$controller","$anchorScroll",function($scope,$rootScope,$window,$filter,RestAPI,localStorageService,$timeout,$location,$interval,$http,$sce,$q,$controller,$anchorScroll){$scope.EmailChoices=[{username:"",addNew:!0,paramMap:{docId:"",LOB:localStorageService.get("selectedBusinessLineId").toString(),userId:"",selectedPolicyType:"",make:"",model:"",registrationNum:"",Variant:""}}],$scope.p365Labels=insCarQuoteLabels;var applicationLabels=localStorageService.get("applicationLabels");$scope.globalLabel=applicationLabels.globalLabels;var updateQuoteStatus=!1;$anchorScroll("home"),$rootScope.title=$scope.p365Labels.policies365Title.carResultQuote,$scope.isRiderFormDirty=!1,$scope.buyOptionDisabled=!1,$scope.isThirdPartyResource=!1,$scope.resetDisplayVehicle=!1,$scope.odOnlyPlan=!1,$rootScope.wordPressEnabled?$scope.rippleColor="":$scope.rippleColor="#f8a201",$scope.carPremiumTemplate=wp_path+"buy/common/html/garageModal.html",$rootScope.iquoteTabNavigation=wp_path+"buy/common/html/iquoteTabNavigation.html",$scope.carInputSectionHTML=wp_path+"buy/car/html/CarInputSection.html",$scope.carRiderSectionHTML=wp_path+"buy/car/html/CarRiderSection.html",$scope.carIDVSectionHTML=wp_path+"buy/car/html/CarIDVSection.html",$scope.carShareEmailSectionHTML=wp_path+"buy/car/html/CarShareEmailSection.html",$scope.carInsuranceTypeSectionHTML=wp_path+"buy/car/html/CarInsuranceTypeSection.html",$scope.vehicalOwnerTypeSectionHTML=wp_path+"buy/car/html/VehicalOwnerTypeSection.html",$scope.carPACoverSectionHTML=wp_path+"buy/car/html/CarPACoverSection.html","/PBCarResult"==$location.path()&&($scope.PBCarInputSection=wp_path+"buy/common/html/PBHTML/PBCarInputSection.html",$scope.PBCarRidersSection=wp_path+"buy/common/html/PBHTML/PBCarRidersSection.html",$scope.PBCarBestResultSection=wp_path+"buy/common/html/PBHTML/PBCarBestResultSection.html",$scope.inputSectionEnabled=!0,$scope.ridersSectionEnabled=!1,$scope.resultSectionEnabled=!1,$scope.PACoverDeclaration=!1,$scope.commonInfo=localStorageService.get("professionalQuoteParams").commonInfo),$scope.focusInput=!0,$scope.quoteUserInfo={},$scope.quoteUserInfo.messageId="",$scope.carrierVarients="",$scope.selectedAddOn="",$scope.quoteUserInfo.termsCondition=!0,$scope.showPrevRiderPlanStatusDiv=!1,$scope.isPrevPolStatusRiderSelected=!1,$rootScope.loading=!0,$scope.resetDisplayVehicle=!1,$scope.CarPACoverDetails={},$scope.CarPACoverDetails.isPACoverApplicable=!1,$scope.fuelList=["PETROL","DIESEL","LPG/CNG"];var docId=$scope.p365Labels.documentType.quoteResultScreen+"-"+localStorageService.get("selectedBusinessLineId"),sharePDFQuote={};if($scope.carInputSection=!1,$scope.idvInputSection=!1,$scope.riderInputSection=!1,$scope.discountInfoInputSection=!1,$scope.carInsuranceInputSection=!1,$scope.ownerInputSection=!1,$rootScope.isCarProductTabClicked=!1,$scope.showCarrierVehicleVariants=!1,$scope.displayLoader=!1,$scope.noCarrierVariantFound=!1,$scope.carQuoteRequestFormation=function(carQuoteRequestParam){$scope.quoteRequest={},$scope.quoteRequest.vehicleInfo={},$scope.quoteRequest.quoteParam={},$scope.quoteRequest.vehicleInfo.IDV=carQuoteRequestParam.vehicleInfo.IDV,$scope.quoteRequest.vehicleInfo.PreviousPolicyExpiryDate=carQuoteRequestParam.vehicleInfo.PreviousPolicyExpiryDate,$scope.quoteRequest.vehicleInfo.TPPolicyStartDate=carQuoteRequestParam.vehicleInfo.TPPolicyStartDate,$scope.quoteRequest.vehicleInfo.TPPolicyExpiryDate=carQuoteRequestParam.vehicleInfo.TPPolicyExpiryDate,$scope.quoteRequest.vehicleInfo.RTOCode=carQuoteRequestParam.vehicleInfo.RTOCode,$scope.quoteRequest.vehicleInfo.city=carQuoteRequestParam.vehicleInfo.city,carQuoteRequestParam.vehicleInfo.dateOfRegistration&&($scope.quoteRequest.vehicleInfo.dateOfRegistration=carQuoteRequestParam.vehicleInfo.dateOfRegistration),$scope.quoteRequest.vehicleInfo.idvOption=carQuoteRequestParam.vehicleInfo.idvOption,$scope.quoteRequest.vehicleInfo.best_quote_id=carQuoteRequestParam.vehicleInfo.best_quote_id,$scope.quoteRequest.vehicleInfo.previousClaim=carQuoteRequestParam.vehicleInfo.previousClaim,$scope.quoteRequest.vehicleInfo.registrationNumber=carQuoteRequestParam.vehicleInfo.registrationNumber,$scope.quoteRequest.vehicleInfo.registrationPlace=carQuoteRequestParam.vehicleInfo.registrationPlace,$scope.quoteRequest.vehicleInfo.state=carQuoteRequestParam.vehicleInfo.state,$scope.quoteRequest.vehicleInfo.make=carQuoteRequestParam.vehicleInfo.make,$scope.quoteRequest.vehicleInfo.model=carQuoteRequestParam.vehicleInfo.model,$scope.quoteRequest.vehicleInfo.variant=carQuoteRequestParam.vehicleInfo.variant.toString(),carQuoteRequestParam.vehicleInfo.fuel&&($scope.quoteRequest.vehicleInfo.fuel="PETROL"),$scope.quoteRequest.vehicleInfo.cubicCapacity=carQuoteRequestParam.vehicleInfo.cubicCapacity,$scope.quoteRequest.quoteParam.ncb=carQuoteRequestParam.quoteParam.ncb,$scope.quoteRequest.quoteParam.ownedBy=carQuoteRequestParam.quoteParam.ownedBy,$scope.quoteRequest.quoteParam.policyType=carQuoteRequestParam.quoteParam.policyType,carQuoteRequestParam.quoteParam.riders&&($scope.quoteRequest.quoteParam.riders=carQuoteRequestParam.quoteParam.riders)},$scope.fetchCarrierSpecificVariants=function(){var searchValue;searchValue=$scope.vehicleInfo.variantId;$scope.carrierVariantList=[],getListFromDB(RestAPI,searchValue,"CarMapping","findAppConfig",function(callback){imatCarLeadQuoteInfo(localStorageService,$scope,"LeadSubmitted"),1e3==callback.responseCode?($scope.carrierVariantList=callback.data,$scope.displayLoader=!1,$scope.noCarrierVariantFound=!1):($scope.noCarrierVariantFound=!0,$scope.displayLoader=!1)})},localStorageService.get("quoteUserInfo")&&($scope.quoteUserInfo=localStorageService.get("quoteUserInfo").emailId),console.log("quote user info in result page is: ",JSON.stringify(localStorageService.get("quoteUserInfo"))),localStorage.getItem("quoteUserInfo")){const quoteUserInfo=JSON.parse(localStorage.getItem("quoteUserInfo"));quoteUserInfo&&($scope.quoteUserInfo=quoteUserInfo,localStorageService.set("quoteUserInfo",$scope.quoteUserInfo))}if($location.search().messageId){if(1==imauticAutomation)if($location.search().source)if("ramp"==$location.search().source){docId="LeadProfile-"+$location.search().messageId;getDocUsingIdTransDB(RestAPI,docId,function(callback){if(callback){var quoteUserInfo={};callback.LeadDetails?(callback.LeadDetails.lastActivity.contactInfo.firstName&&(quoteUserInfo.firstName=callback.LeadDetails.lastActivity.contactInfo.firstName),callback.LeadDetails.lastActivity.contactInfo.lastName&&(quoteUserInfo.lastName=callback.LeadDetails.lastActivity.contactInfo.lastName),callback.LeadDetails.lastActivity.contactInfo.emailId&&(quoteUserInfo.emailId=callback.LeadDetails.lastActivity.contactInfo.emailId),callback.LeadDetails.lastActivity.contactInfo.mobileNumber&&(quoteUserInfo.mobileNumber=callback.LeadDetails.lastActivity.contactInfo.mobileNumber),quoteUserInfo.termsCondition=!0,quoteUserInfo.createLeadStatus=!1,localStorageService.set("quoteUserInfo",quoteUserInfo),$scope.fetchCarrierSpecificVariants()):$scope.fetchCarrierSpecificVariants()}else $scope.fetchCarrierSpecificVariants()})}else $scope.fetchCarrierSpecificVariants();else $scope.fetchCarrierSpecificVariants()}else($rootScope.agencyPortalEnabled||pospEnabled)&&$scope.fetchCarrierSpecificVariants();if($rootScope.baseEnvEnabled&&!$rootScope.wordPressEnabled){if($location.search().messageId&&(messageIDVar=$location.search().messageId),"undefined"!=String($location.search().leaddetails)){var leaddetails=JSON.parse($location.search().leaddetails);leaddetails.messageId||(leaddetails.messageId=$location.search().messageId),localStorageService.set("quoteUserInfo",leaddetails)}$scope.carInputSection=!0,$scope.idvInputSection=!0,$scope.riderInputSection=!0,$scope.discountInfoInputSection=!0}$scope.showVehicleDetails=function(){$scope.carInputSection=!$scope.carInputSection},$scope.showOwnerDetails=function(){$scope.ownerInputSection=!$scope.ownerInputSection},$scope.showRiderDetails=function(){$scope.riderInputSection=!$scope.riderInputSection},$scope.showInsuranceDetails=function(){$scope.carInsuranceInputSection=!$scope.carInsuranceInputSection},$scope.showIDVDetails=function(){$scope.idvInputSection=!$scope.idvInputSection},$scope.showDiscountInfoDetails=function(){$scope.discountInfoInputSection=!$scope.discountInfoInputSection},$scope.backToResultScreen=function(){$rootScope.isProfessionalJourneySelected?$location.path("/professionalJourneyResult"):$location.path("/PBQuote")},$scope.ownDamageYears=carOwnDamageYears,$scope.personalAccidentYears=carPersonalAccidentYears,$scope.thirdPartyDamageCoveredYears=carThirdPartyDamageCoveredYears,$rootScope.thirdPartyDamageValidity=[3],$rootScope.personalAccidentValidity=[1,3],$rootScope.ownDamageValidity=[1,3],$scope.KotakDeclarationForPACover=KotakDeclarationForPACover,$scope.idvOptions=IDVOptionsGen,$scope.carInsuranceTypes=[],$scope.yearList=[],$scope.addOnCovers=[],$rootScope.vehicleInfo={},$rootScope.vehicleDetails={},$scope.quote={},$scope.insuranceCompanyList={},$scope.insuranceCompanyList.selectedInsuranceCompany=[],$scope.selectedAddOnCovers=[],$rootScope.carAddOnCoversList={},$rootScope.carAddOnCoversList.selectedAddOnCovers=[],$scope.selectPremiumFromResult={},$scope.emailInputParameters={},$scope.emailInputParameters.paramMap={},$scope.defaultMetroList=[],$scope.vehicleInfo={};var professionalQuoteCarCookie,variantList=[],resultCnfrmBuyFlag=!1,buyConfrmFlag=!1;$scope.userIDVError=!1,$scope.basicExpanded=!1,$scope.savingsExpanded=!1,$scope.ridersExpanded=!1,$scope.prevPolZeroDepStatus=!1,$scope.riderDetailsModal=!1,$scope.idvDetailsModal=!1,$scope.OdOnlyModal=!1,$scope.toggleBasicExpanded=function(){$scope.basicExpanded=!$scope.basicExpanded},$scope.toggleSavingsExpanded=function(){$scope.savingsExpanded=!$scope.savingsExpanded},$scope.toggleRidersExpanded=function(){$scope.ridersExpanded=!$scope.ridersExpanded},$scope.quoteParam=localStorageService.get("carQuoteInputParamaters").quoteParam,$scope.vehicleInfo=localStorageService.get("carQuoteInputParamaters").vehicleInfo,$scope.vehicleInfo.displayVehicle&&($scope.vehicleDisplayName=$scope.vehicleInfo.displayVehicle);var professionalCarParams=!1;localStorageService.get("professionalQuoteParams")&&localStorageService.get("professionalQuoteParams").carInfo&&(professionalQuoteCarCookie=localStorageService.get("professionalQuoteParams").carInfo,professionalCarParams=!0),professionalCarParams&&(professionalQuoteCarCookie.registrationPlace?$scope.vehicleInfo.registrationPlace=professionalQuoteCarCookie.registrationPlace:professionalQuoteCarCookie.registrationNumber&&($scope.vehicleInfo.registrationNumber=professionalQuoteCarCookie.registrationNumber),$scope.vehicleDetails.regYear=professionalQuoteCarCookie.registrationYear),$scope.vehicleDetails=localStorageService.get("selectedCarDetails"),$scope.garageDetails=localStorageService.get("garageDetails"),$scope.UNIQUE_QUOTE_ID=localStorageService.get("CAR_UNIQUE_QUOTE_ID");var UNIQUE_QUOTE_ID_ENCRYPTED;if(UNIQUE_QUOTE_ID_ENCRYPTED=localStorageService.get("CAR_UNIQUE_QUOTE_ID_ENCRYPTED"),localStorageService.get("PROF_QUOTE_ID_ENCRYPTED")&&($scope.UNIQUE_PROF_QUOTE_ID_ENCRYPTED=localStorageService.get("PROF_QUOTE_ID_ENCRYPTED")),$scope.defaultMetroList=localStorageService.get("defaultMetroCityList"),localStorageService.get("carQuoteInputParamaters"),$scope.passengerCoverSAList=passengerCoverSAList,$scope.driverAccidentSAList=driverAccidentSAList,$scope.sortTypes=sortTypesVehicleGeneric,$scope.autoAssociationStatus=autoAssociationStatusGeneric,$scope.antiTheftDeviceStatus=antiTheftDeviceStatusGeneric,$scope.carInsuranceTypes=carInsuranceTypeGeneric,$scope.policyStatusList=policyStatusListGeneric,$scope.ncbList=ncbListGeneric,$scope.passengerCoverList=defaultPassengerCover,$scope.previousClaimStatus=previousClaimStatusGeneric,$scope.carIgnoredRiders=carIngnoredRidersForUI,$scope.comparePoliciesDisplayList=comparePoliciesDisplayValues,$scope.comparePoliciesTypeList=comparePoliciesTypeListGen,$scope.insurancePlanTypes=carInsurancePlanTypesGen,$scope.insuranceTypeList=insuranceTypeListGen,$rootScope.selectedInsuranceType=$scope.insuranceTypeList[0].value,$scope.selectedSortOption=$scope.sortTypes[0],$rootScope.carQuoteRequest&&$rootScope.carQuoteRequest.length==$rootScope.quoteResultCount&&$rootScope.carQuoteResult&&0==$rootScope.carQuoteResult.length&&($scope.noQuoteResultFound=!0,$rootScope.carQuoteRequest=[],$rootScope.carQuoteRequest.push({status:2,message:$sce.trustAsHtml($scope.p365Labels.validationMessages.generalisedMotorErrMsg)})),$scope.defaultMetroList||($scope.defaultMetroList=commonResultLabels.popularRTOList.data,localStorageService.set("defaultMetroCityList",$scope.defaultMetroList)),$scope.individualClick=function(getOwner){$scope.ownerTypeModal=!1,$scope.quoteCarInputForm.$dirty=!0,$scope.vehicleDetails.idvOption=1,$scope.singleClickCarQuote()},$scope.ownerChanged=function(_owneredBy){$scope.vehicleDetails.idvOption=1,$scope.quoteParam.ownedBy=_owneredBy?"Organization":"Individual"},$scope.backToQuotes=function(){$location.path("/professionalJourneyResult")},$scope.confirmInput=function(){$scope.inputSectionEnabled=!1,$scope.resultSectionEnabled=!1,$scope.ridersSectionEnabled=!0},$scope.showEditInputSection=function(){$scope.inputSectionEnabled=!0,$scope.resultSectionEnabled=!1,$scope.ridersSectionEnabled=!1},$scope.backToRiderSection=function(){$scope.inputSectionEnabled=!1,$scope.resultSectionEnabled=!1,$scope.ridersSectionEnabled=!0},console.log("$location.search().sharePDF : ",$location.search().sharePDF),$location.search().sharePDF){if($rootScope.parseCarrierList)for(var j=0;j<$rootScope.carQuoteResult.length;j++)if($rootScope.carQuoteResult[j].carrierId==$rootScope.parseCarrierList[0]){sharePDFQuote=$rootScope.carQuoteResult[j];break}var getImageFromUrl=function(url,callback){var img=new Image;img.onError=function(){alert('Cannot load image: "'+url+'"')},img.onload=function(){callback(img)},img.src=url},createPDF=function(imgData){var doc=new jsPDF;doc.internal.pageSize.width,doc.internal.pageSize.height;$scope.displayPDF=!0,console.log("sharePDFQuote is : ",sharePDFQuote);var doc_name=sharePDFQuote.insuranceCompany+"_premiumBreakup.pdf";doc.addImage(imgData,"PNG",10,10,35,20,"p365logo");var yaxis=20;doc.setTextColor(100),doc.setFontSize(18),doc.text(10,40,"Premium Breakup"),doc.setTextColor(150),doc.setFontSize(12),doc.text(10,50,"Company Name :"),doc.text(60,50,sharePDFQuote.insuranceCompany),doc.text(10,60,"Vehicle Details :");var vehicleDetails=$scope.vehicleInfo.make+"  "+$scope.vehicleInfo.model+"  "+$scope.vehicleInfo.variant+"  ("+$scope.vehicleInfo.cubicCapacity+"  cc)";doc.text(60,60,vehicleDetails),doc.text(10,80,"Basic coverage :"),doc.text(60,90,"Basic own damage"),doc.text(120,90,String(sharePDFQuote.odpremium)),doc.text(60,100,"Basic third party"),doc.text(120,100,String(sharePDFQuote.tppremium));var totalBasicCoverage1="+"+(Number(sharePDFQuote.odpremium)+Number(sharePDFQuote.tppremium));doc.text(120,110,totalBasicCoverage1);var ycords=yaxis=110,discountListFlag=!1;if(sharePDFQuote.totalDiscountAmount>0){discountListFlag=!0,doc.text(10,120,"Savings/Discounts :");var discountCount=sharePDFQuote.discountList.length,count=0;ycords+=10,count<discountCount&&(doc.text(60,ycords,sharePDFQuote.discountList[count].type),doc.text(120,ycords,String(sharePDFQuote.discountList[count].discountAmount)),count+=1),ycords+=10;var totalDiscountAmount="-"+sharePDFQuote.totalDiscountAmount;doc.text(120,ycords,totalDiscountAmount)}if(discountListFlag)if(sharePDFQuote.ridersList){for(var riderCount=0,i=0;i<sharePDFQuote.ridersList.length;i++)"NA"!=sharePDFQuote.ridersList[i].riderType&&"included"!=sharePDFQuote.ridersList[i].riderType&&sharePDFQuote.ridersList[i].riderValue>0&&(0==riderCount&&doc.text(10,ycords,"Add-on cover :"),riderCount+=1,ycords+=10,doc.text(60,ycords,sharePDFQuote.ridersList[i].riderName),doc.text(120,ycords,String(sharePDFQuote.ridersList[i].riderValue)));sharePDFQuote.totalRiderAmount>0?setTimeout(function(){console.log("inside rider list timeout-1"),ycords+=10;var totalRiderAmount="+"+sharePDFQuote.totalRiderAmount;doc.text(120,ycords,totalRiderAmount),yaxis=ycords+10},500):yaxis=ycords+10}else yaxis=ycords+10;else if(sharePDFQuote.ridersList&&sharePDFQuote.totalRiderAmount>0){for(riderCount=0,i=0;i<sharePDFQuote.ridersList.length;i++)"NA"!=sharePDFQuote.ridersList[i].riderType&&"included"!=sharePDFQuote.ridersList[i].riderType&&sharePDFQuote.ridersList[i].riderValue>0&&(0==riderCount&&doc.text(10,ycords,"Add-on cover :"),riderCount+=1,ycords+=10,doc.text(60,ycords,sharePDFQuote.ridersList[i].riderName),doc.text(120,ycords,String(sharePDFQuote.ridersList[i].riderValue)));sharePDFQuote.totalRiderAmount>0?(ycords+=10,setTimeout(function(){console.log("inside rider list timeout-2"),ycords+=10;var totalRiderAmount="+"+sharePDFQuote.totalRiderAmount;doc.text(120,ycords,totalRiderAmount),yaxis=ycords+10},500)):yaxis=ycords+10}setTimeout(function(){yaxis+=10,console.log("yaxis in step 6 is :",yaxis),doc.text(10,yaxis,"Net Premium :"),doc.text(120,yaxis,String(sharePDFQuote.netPremium)),yaxis+=10,doc.text(10,yaxis,"GST :"),doc.text(120,yaxis,String(sharePDFQuote.serviceTax)),yaxis+=10,doc.text(10,yaxis,"Total Premium :"),doc.text(120,yaxis,String(sharePDFQuote.grossPremium)),yaxis+=10,doc.text(10,yaxis,"Total Payable :"),doc.text(120,yaxis,String(sharePDFQuote.grossPremium)),console.log("yaxis in step 7 is :",yaxis),doc.setTextColor(100),doc.setFontSize(10),yaxis+=30,doc.text(70,yaxis,"Navnit Insurance Broking Private Limited"),doc.setTextColor(150),doc.setFontSize(10),yaxis+=5,doc.text(40,yaxis,"172 Solitaire Corporate Park Building No 1,7th Floor,Andheri-Ghatkopar Link Road,"),yaxis+=5,doc.text(40,yaxis,"Andheri(East),Mumbai,400093,Maharashtra,India.Email-contact@policies365.com"),yaxis+=5,doc.text(40,yaxis,"Product Information is authentic and solely based on the information received from the insurer"),yaxis+=5,doc.text(40,yaxis,"IRDAI Broker Licence Code No"),yaxis+=5,doc.text(40,yaxis,"IRDA/ CB 446/09/2021"),$scope.displayPDF=!1,doc.save(doc_name)},500)};idepProdEnv?getImageFromUrl("https://www.policies365.com/app/img/clogo/logo.png",createPDF):getImageFromUrl("https://www.policies365.com/app/img/clogo/logo.png",createPDF)}console.log("$rootScope.flag in result page is : ",$rootScope.flag),$rootScope.flag?($scope.vehicleDetails.passengerCover||($scope.vehicleDetails.passengerCover=defaultPassengerCover.riderAmount),$scope.vehicleDetails.driverAccidentCover||($scope.vehicleDetails.driverAccidentCover=defaultDriverAccidentCover.riderAmount),$scope.vehicleDetails.lpgCngKitCover||($scope.vehicleDetails.lpgCngKitCover=defaultLpgCngKitCover.riderAmount),$scope.vehicleDetails.electricalAccessories||($scope.vehicleDetails.electricalAccessories=defaultElectricalAccessoriesCover.riderAmount),$scope.vehicleDetails.nonElectricalAccessories||($scope.vehicleDetails.nonElectricalAccessories=defaultNoElectricalAccessoriesCover.riderAmount)):($scope.vehicleDetails.passengerCover=defaultPassengerCover.riderAmount,$scope.vehicleDetails.driverAccidentCover=defaultDriverAccidentCover.riderAmount,$scope.vehicleDetails.lpgCngKitCover=defaultLpgCngKitCover.riderAmount,$scope.vehicleDetails.electricalAccessories=defaultElectricalAccessoriesCover.riderAmount,$scope.vehicleDetails.nonElectricalAccessories=defaultNoElectricalAccessoriesCover.riderAmount),$location.search().isForRenewal&&($scope.vehicleDetails.checkforDriverAccCover?($scope.checkforDriverAccCoverCopy=angular.copy($scope.vehicleDetails.checkforDriverAccCover),$scope.vehicleDetails.addOnCoverCustomAmount.driverAccidentCover=defaultDriverAccidentCover.riderAmount):$scope.checkforDriverAccCoverCopy=angular.copy($scope.vehicleDetails.checkforDriverAccCover),$scope.vehicleDetails.checkforPsgCover?($scope.checkforPsgCoverCopy=angular.copy($scope.vehicleDetails.checkforPsgCover),$scope.vehicleDetails.addOnCoverCustomAmount.passengerCover=defaultPassengerCover.riderAmount):$scope.checkforPsgCoverCopy=angular.copy($scope.vehicleDetails.checkforPsgCover),$scope.vehicleDetails.checkforLpgCngCover?($scope.checkforLpgCngCoverCopy=angular.copy($scope.vehicleDetails.checkforLpgCngCover),$scope.vehicleDetails.addOnCoverCustomAmount.lpgCngKitCover=defaultLpgCngKitCover.riderAmount):$scope.checkforLpgCngCoverCopy=angular.copy($scope.vehicleDetails.checkforLpgCngCover)),$scope.vehicleDetails.isAntiTheftDevice="undefined"!=String($scope.quoteParam.isAntiTheftDevice)?"Y"==$scope.quoteParam.isAntiTheftDevice?"Yes":"No":"Yes",$scope.vehicleDetails.isAutoAssociation="undefined"!=String($scope.quoteParam.isARAIMember)&&"Y"==$scope.quoteParam.isARAIMember?"Yes":"No",$scope.vehicleDetails.showCarRegAreaStatus&&($rootScope.showCarRegAreaStatus=$scope.vehicleDetails.showCarRegAreaStatus),$rootScope.vehicleDetails.registrationNumber=$scope.vehicleDetails.registrationNumber,$scope.vehicleDetails.regYear=$scope.vehicleInfo.dateOfRegistration.split("/")[2],$scope.manufacturingYearList=listManufactureYear($scope.vehicleDetails.regYear,2),$scope.vehicleDetails.manufacturingYear=$scope.manufacturingYearList[0],$scope.calculatedVehicleRegistrationDate=getDateForDisplay($scope.vehicleInfo.dateOfRegistration),$scope.addOnCovers=localStorageService.get("addOnCoverListForCar"),$rootScope.carAddOnCoversList.selectedAddOnCovers=void 0==$scope.vehicleDetails.selectedAddOnCovers?[]:$scope.vehicleDetails.selectedAddOnCovers,$scope.vehicleAge=getAgeFromDOB($scope.vehicleInfo.dateOfRegistration),addOnCoversWithStatus($scope.addOnCovers,$scope.vehicleAge,function(){}),$scope.previousPolicyExpiryDateCopy=angular.copy($scope.vehicleInfo.PreviousPolicyExpiryDate);var vehicleDetailsCookie=localStorageService.get("carRegistrationDetails");if(vehicleDetailsCookie&&"undefined"!=String(vehicleDetailsCookie.registrationNumber)&&null!=vehicleDetailsCookie.registrationNumber&&($rootScope.vehicleDetails.registrationNumber=vehicleDetailsCookie.registrationNumber),localStorageService.get("carQuoteInputParamaters").quoteParam.riders&&($scope.selectedAddOn=localStorageService.get("carQuoteInputParamaters").quoteParam.riders.length),$rootScope.carAddOnCoversList.selectedAddOnCovers=[],$scope.quoteParam.riders)for(var i=0;i<$scope.addOnCovers.length;i++)for(j=0;j<$scope.quoteParam.riders.length;j++)if($scope.addOnCovers[i].riderId==$scope.quoteParam.riders[j].riderId){if(20==$scope.addOnCovers[i].riderId){$scope.vehicleDetails.checkforDriverAccCover=!0,$scope.vehicleDetails.driverAccidentCover=$scope.quoteParam.riders[j].riderAmount,$scope.vehicleDetails.addOnCoverCustomAmount.driverAccidentCover=$scope.vehicleDetails.driverAccidentCover;break}if(21==$scope.addOnCovers[i].riderId){$scope.vehicleDetails.checkforPsgCover=!0,$scope.vehicleDetails.passengerCover=$scope.quoteParam.riders[j].riderAmount,$scope.vehicleDetails.addOnCoverCustomAmount.passengerCover=$scope.vehicleDetails.passengerCover;break}if(35==$scope.addOnCovers[i].riderId){$scope.vehicleDetails.checkforLpgCngCover=!0,$scope.vehicleDetails.lpgCngKitCover=$scope.quoteParam.riders[j].riderAmount,$scope.vehicleDetails.addOnCoverCustomAmount.lpgCngKitCover=$scope.vehicleDetails.lpgCngKitCovers;break}if(25==$scope.addOnCovers[i].riderId){$scope.vehicleDetails.checkforAccessoriesCover=!0,$scope.vehicleDetails.checkforElectrical=!0,$scope.vehicleDetails.lpgCngKitCover=$scope.quoteParam.riders[j].riderAmount,$scope.vehicleDetails.addOnCoverCustomAmount.lpgCngKitCover=$scope.vehicleDetails.lpgCngKitCovers;break}if(30==$scope.addOnCovers[i].riderId){$scope.vehicleDetails.checkforAccessoriesCover=!0,$scope.vehicleDetails.checkforNonElectrical=!0,$scope.vehicleDetails.lpgCngKitCover=$scope.quoteParam.riders[j].riderAmount,$scope.vehicleDetails.addOnCoverCustomAmount.lpgCngKitCover=$scope.vehicleDetails.lpgCngKitCovers;break}if(6==$scope.addOnCovers[i].riderId&&($scope.vehicleDetails.checkZeroDepCover=!0),20!=$scope.addOnCovers[i].riderId&&21!=$scope.addOnCovers[i].riderId&&35!=$scope.addOnCovers[i].riderId&&25!=$scope.addOnCovers[i].riderId&&30!=$scope.addOnCovers[i].riderId){$rootScope.carAddOnCoversList.selectedAddOnCovers.push($scope.addOnCovers[i]);break}}if($scope.quoteParam.riders)for(i=0;i<$scope.quoteParam.riders.length;i++)if(11==$scope.quoteParam.riders[i].riderId){$scope.CarPACoverDetails={},$scope.CarPACoverDetails.isPACoverApplicable=!0,$scope.PACoverModal=!1,$scope.PACoverFlag=1;break}$scope.addOnCoverCustomAmt=function(){null!=$scope.vehicleDetails.addOnCoverCustomAmount&&"undefined"!=JSON.stringify($scope.vehicleDetails.addOnCoverCustomAmount)?($scope.vehicleDetails.passengerCover=$scope.vehicleDetails.addOnCoverCustomAmount.driverAccidentCover>0?$scope.vehicleDetails.addOnCoverCustomAmount.driverAccidentCover:$scope.vehicleDetails.passengerCover,$scope.vehicleDetails.driverAccidentCover=($scope.vehicleDetails.addOnCoverCustomAmount.driverAccidentCover,$scope.vehicleDetails.driverAccidentCover),$scope.vehicleDetails.electricalAccessories=$scope.vehicleDetails.addOnCoverCustomAmount.electricalAccessories>0?$scope.vehicleDetails.addOnCoverCustomAmount.electricalAccessories:$scope.vehicleDetails.electricalAccessories,$scope.vehicleDetails.nonElectricalAccessories=$scope.vehicleDetails.addOnCoverCustomAmount.nonElectricalAccessories>0?$scope.vehicleDetails.addOnCoverCustomAmount.nonElectricalAccessories:$scope.vehicleDetails.nonElectricalAccessories,$scope.vehicleDetails.lpgCngKitCover=$scope.vehicleDetails.addOnCoverCustomAmount.lpgCngKitCover>0?$scope.vehicleDetails.addOnCoverCustomAmount.lpgCngKitCover:$scope.vehicleDetails.lpgCngKitCover):($scope.vehicleDetails.checkforNonElectrical=!1,$scope.vehicleDetails.checkforElectrical=!1,$scope.vehicleDetails.checkforPsgCover=!1,$scope.vehicleDetails.checkforLpgCngCover=!1,$scope.vehicleDetails.checkforDriverAccCover=!1,$scope.vehicleDetails.checkforAccessoriesCover=!1)},$scope.resetVehicleDetails=function(){$scope.vehicleInfoCopy=angular.copy($scope.vehicleInfo),$scope.vehicleDetailsCopy=angular.copy($scope.vehicleDetails)},$scope.addOnCoverCustomAmt(),$scope.displayIDVOption=function(){$scope.displayIDVLabel="IDV ",1==$scope.vehicleDetails.idvOption?$scope.selectedIDV=$scope.displayIDVLabel+" - Best Deal":2==$scope.vehicleDetails.idvOption?$scope.selectedIDV=$scope.displayIDVLabel+" - Your IDV":$scope.selectedIDV=$scope.displayIDVLabel+" - min IDV"},$scope.displayIDVOption(),$scope.calcRiderAmt=function(selectedPremium){if("undefined"!=String(selectedPremium.ridersList)){for(var selectedRiderAmount=0,i=0;i<selectedPremium.ridersList.length;i++)null!=selectedPremium.ridersList[i].riderValue&&(selectedRiderAmount+=selectedPremium.ridersList[i].riderValue);return selectedRiderAmount}return 0},$scope.calcDiscountAmt=function(selectedPremium){for(var selectedDiscountAmount=0,i=0;i<selectedPremium.discountList.length;i++)null!=selectedPremium.discountList[i].discountAmount&&(selectedDiscountAmount+=selectedPremium.discountList[i].discountAmount);return selectedDiscountAmount},$scope.getPopup=function(selectedPremium){$scope.selectPremiumFromResult=selectedPremium,$scope.selectPremiumFromResult.selectedRiderAmount=$scope.calcRiderAmt(selectedPremium),$scope.selectPremiumFromResult.selectedDiscountAmount=$scope.calcDiscountAmt(selectedPremium),$scope.modalMoreDetails=!0},$scope.validatePremium=function(data){return Number(data.netPremium)>0},$scope.validateInsurancePlanType=function(data){return"new"==data.policyType?!("comprehensive"!=$rootScope.selectedInsuranceType||!data.comprehensive)||!("liability"!=$rootScope.selectedInsuranceType||!data.liability):"renew"==data.policyType||"odonly"==data.policyType},$scope.submitPACoverDetails=function(key){$scope.PACoverModal=!1,$scope.CarPACoverDetails[key]=!0,localStorageService.set("CarPACoverDetails",$scope.CarPACoverDetails),$scope.singleClickCarQuote()},$scope.planTypeError=!1,$scope.submitInsuranceType=function(policyType){policyType==$scope.insuranceTypeList[0].value&&0==$rootScope.ownDamageValidity.length?$scope.planTypeError=!0:$scope.CarPACoverDetails.isPACoverApplicable&&0==$rootScope.personalAccidentValidity.length?$scope.planTypeError=!0:($scope.planTypeError=!1,$scope.insuranceTypeModal=!1,$scope.filterResult(policyType))},$scope.filterResult=function(policyType){if($rootScope.selectedInsuranceType=policyType,localStorageService.set("selectedInsuranceType",policyType),"new"==$scope.quoteParam.policyType)if($rootScope.carQuotePolicyType=$rootScope.carQuoteResultCopy,$rootScope.carQuoteResult=[],policyType==$scope.insuranceTypeList[0].value)for(var i=0;i<$rootScope.carQuotePolicyType.length;i++)$rootScope.carQuotePolicyType[i][policyType]&&($scope.CarPACoverDetails.isPACoverApplicable?-1!=$rootScope.ownDamageValidity.indexOf($rootScope.carQuotePolicyType[i].ownDamagePolicyTerm)&&-1!=$rootScope.thirdPartyDamageValidity.indexOf($rootScope.carQuotePolicyType[i].liabilityPolicyTerm)&&-1!=$rootScope.personalAccidentValidity.indexOf($rootScope.carQuotePolicyType[i].PACover)&&$rootScope.carQuoteResult.push($rootScope.carQuotePolicyType[i]):-1!=$rootScope.ownDamageValidity.indexOf($rootScope.carQuotePolicyType[i].ownDamagePolicyTerm)&&-1!=$rootScope.thirdPartyDamageValidity.indexOf($rootScope.carQuotePolicyType[i].liabilityPolicyTerm)&&$rootScope.carQuoteResult.push($rootScope.carQuotePolicyType[i]));else if(policyType==$scope.insuranceTypeList[1].value)for(i=0;i<$rootScope.carQuotePolicyType.length;i++)if($rootScope.carQuotePolicyType[i][policyType])for(var j=0;j<$rootScope.thirdPartyDamageValidity.length;j++)$rootScope.carQuotePolicyType[i].liabilityPolicyTerm==$rootScope.thirdPartyDamageValidity[j]&&$rootScope.carQuoteResult.push($rootScope.carQuotePolicyType[i])},setTimeout(function(){$rootScope.carQuoteResultCopy=$rootScope.carQuoteResult,"new"==$scope.quoteParam.policyType&&($rootScope.ownDamageValidity=[1,3],$scope.PACoverValidity($scope.CarPACoverDetails.isPACoverApplicable),$scope.filterResult($rootScope.selectedInsuranceType))},100),$scope.toggleIDVChangeClose=function(){$scope.vehicleInfo.IDV=localStorageService.get("carQuoteInputParamaters").vehicleInfo.IDV,$scope.vehicleDetails.idvOption=angular.copy($rootScope.idvOptionCopy),$scope.displayIDVOption(),$scope.idvDetailsModal=!1},$scope.validateUserIDV=function(){Number($scope.vehicleInfo.IDV)<$scope.minIDVSuggested||Number($scope.vehicleInfo.IDV)>$scope.maxIDVSuggested?($scope.userIDVError=!0,$scope.quoteCarInputForm.$setDirty()):$scope.userIDVError=!1},$scope.updateIDVRange=function(){for(var i=0;i<$rootScope.carQuoteResult.length;i++)$rootScope.carQuoteResult[i].minIdvValue=Number($rootScope.carQuoteResult[i].minIdvValue),$rootScope.carQuoteResult[i].maxIdvValue=Number($rootScope.carQuoteResult[i].maxIdvValue);2==$scope.vehicleDetails.idvOption?($rootScope.carQuoteResultMin=$filter("orderBy")($rootScope.carQuoteResult,"minIdvValue"),$rootScope.carQuoteResultMax=$filter("orderBy")($rootScope.carQuoteResult,"-maxIdvValue"),$scope.minIDVSuggested=parseFloat($rootScope.carQuoteResultMin[0].minIdvValue).toFixed(0),$scope.maxIDVSuggested=parseFloat($rootScope.carQuoteResultMax[0].maxIdvValue).toFixed(0),0==$scope.vehicleInfo.IDV&&($scope.vehicleInfo.IDV=Number($scope.minIDVSuggested))):3==$scope.vehicleDetails.idvOption&&($rootScope.carQuoteResult=$filter("orderBy")($rootScope.carQuoteResult,"minIdvValue"),$scope.minIDVSuggested=parseFloat($rootScope.carQuoteResult[0].minIdvValue).toFixed(0),$scope.maxIDVSuggested=parseFloat($rootScope.carQuoteResult[0].maxIDV).toFixed(0),0==$scope.vehicleInfo.IDV&&($scope.vehicleInfo.IDV=Number($scope.minIDVSuggested)))},$scope.updateUserIDV=function(){$scope.displayIDVOption(),2==$scope.vehicleDetails.idvOption?($scope.quoteCarInputForm.$setDirty(),$scope.updateIDVRange(),$scope.vehicleInfo.IDV=Number($scope.minIDVSuggested),Number($scope.vehicleInfo.IDV)<$scope.minIDVSuggested||Number($scope.vehicleInfo.IDV)>$scope.maxIDVSuggested?$scope.userIDVError=!0:$scope.userIDVError=!1):3==$scope.vehicleDetails.idvOption?($scope.updateIDVRange(),$scope.vehicleInfo.IDV=Number($scope.minIDVSuggested),$scope.quoteCarInputForm.$setDirty(),$scope.singleClickCarQuote()):($scope.userIDVError=!1,$scope.quoteCarInputForm.$setDirty(),$scope.singleClickCarQuote())},$scope.garageDataCheck=function(selCarrierID){var returnGarageDataCheck=!1;if($scope.garageDetails)for(var i=0;i<$scope.garageDetails.length;i++)$scope.garageDetails[i].carrierId==selCarrierID&&(returnGarageDataCheck=!0);return returnGarageDataCheck},2!=$scope.vehicleDetails.idvOption&&3!=$scope.vehicleDetails.idvOption||$scope.updateIDVRange(),$scope.data={},$scope.data.group1=1,$scope.modalCompare=!1,$scope.cardView=!0,$scope.compareView=!1,$scope.showCompareBtn=!0,$scope.showCardBtn=!0,$scope.disableSort=!1,$scope.compareViewClick=function(){$scope.disableSort=!1,$scope.dataLoaded=!0,$scope.slickLoaded=!0,$scope.cardView=!0,$scope.compareView=!1,$scope.showCompareBtn=!0,$scope.showCardBtn=!0},$scope.cardViewClick=function(){$scope.dataLoaded=!0,$scope.slickLoaded=!0,$scope.cardView=!1,$scope.compareView=!0,$scope.showCompareBtn=!0,$scope.showCardBtn=!0,$scope.disableSort=!0;var riderJson={};$scope.consolatedRiderList=[],$scope.consolatedDiscountList=[],angular.forEach($rootScope.carQuoteResult,function(quote){angular.forEach(quote.ridersList,function(rider){null==riderJson[rider.riderId]&&($scope.consolatedRiderList.push(rider),riderJson[rider.riderId]=rider.riderName)})});var discountJson={};angular.forEach($rootScope.carQuoteResult,function(quote){angular.forEach(quote.discountList,function(discount){null==discountJson[discount.discountId]&&null!=discount.discountAmount&&0!=discount.discountAmount&&($scope.consolatedDiscountList.push(discount),discountJson[discount.discountId]=discount.type)})})},$scope.findRider=function(riderId,selRiderData){var returnRidervalue="NA";if(selRiderData||(returnRidervalue="NA"),selRiderData)for(var i=0;i<selRiderData.length;i++)selRiderData[i].riderId==riderId&&(selRiderData[i].riderType||(selRiderData[i].riderType="NA"),returnRidervalue=selRiderData[i].riderType);return returnRidervalue},$scope.findDiscount=function(discountId,selData){var returnvalue="NA";if(selData||(returnvalue="NA"),selData)for(var i=0;i<selData.length;i++)selData[i].discountId==discountId&&(selData[i].discountAmount||(selData[i].discountAmount="NA"),returnvalue=selData[i].discountAmount);return returnvalue},$scope.modalVehicleRegistration=!1,$scope.toggleVehicleRegistrationPopup=function(regAreaStatus){$rootScope.selectedRegData="",$rootScope.vehicleDetails.registrationNumber="",$scope.quoteCarInputForm.$setDirty(),$rootScope.isChasisNumber=!1,$rootScope.isEngineNumber=!1,$rootScope.isregNumber=!1,$scope.vehicleDetails=localStorageService.get("selectedCarDetails"),$scope.vehicleDetails.engineNumber="",$scope.vehicleDetails.chassisNumber="",$scope.vehicleDetails.isregNumberDisabled=!1,localStorageService.set("selectedCarDetails",$scope.vehicleDetails),0==regAreaStatus?($scope.modalVehicleRegistration=!1,$rootScope.showCarRegAreaStatus=!1):1==regAreaStatus&&($scope.modalVehicleRegistration=!0,$rootScope.showCarRegAreaStatus=!0),$scope.hideModal=function(){$scope.modalVehicleRegistration=!1},setTimeout(function(){$(".clickMetro").css("height","50px"),$(".showMetro").hide()},100),setTimeout(function(){$(".clickMetro").click(function(){$(".showMetro").hide(),$(this).find(".showMetro").show(),$(".thumbnail").removeClass("RToButtonActive"),$(".thumbnail").addClass("RToButton"),$(this).find(".thumbnail").addClass("RToButtonActive");var getHeight=$(this).find(".showMetro").height();$(".clickMetro").css("height","50px"),$(this).css("height",getHeight+50)})},2e3)},$scope.hideStatus=!0,$scope.oldMetroSelected=makeObjectEmpty($scope.oldMetroSelected,"array"),$scope.selectedMetroRTO=function(metrosRTOList){$scope.metros=metrosRTOList,$scope.oldMetroSelected==metrosRTOList?($scope.hideStatus=!0,$scope.oldMetroSelected=makeObjectEmpty($scope.oldMetroSelected,"array"),setTimeout(function(){$(".clickMetro").css("height","50px"),$(".showMetro").hide(),$(".thumbnail").addClass("RToButton")},100)):($scope.hideStatus=!1,$scope.oldMetroSelected=metrosRTOList),$scope.metros.RTODetails.length%3==2?$scope.dummyLength=1:$scope.metros.RTODetails.length%3==1?$scope.dummyLength=2:$scope.dummyLength=0},$scope.getRegPlaceList=function(city){return city.indexOf("-")>0&&(city=city.replace("-","")),$http.get(getServiceLink+$scope.p365Labels.documentType.RTODetails+"&q="+city).then(function(response){return JSON.parse(response.data).data})},$scope.onSelect=function(item){$scope.modalVehicleRegistration=!1,$rootScope.selectedCarRegistrationObject=item,$rootScope.isregNumber=!1,$scope.vehicleDetails=localStorageService.get("selectedCarDetails"),$scope.vehicleDetails.engineNumber="",$scope.vehicleDetails.chassisNumber="",$scope.vehicleDetails.isregNumberDisabled=!1,$scope.vehicleDetails.idvOption=1,$rootScope.carAddOnCoversList.selectedAddOnCovers=[],$scope.vehicleInfo.registrationNumber&&delete $scope.vehicleInfo.registrationNumber,localStorageService.set("selectedCarDetails",$scope.vehicleDetails);var rtoDetail={};rtoDetail.rtoName=item.display,rtoDetail.rtoCity=item.city,rtoDetail.rtoState=item.state,rtoDetail.rtoStatus=!0,getPincodeFromCity($http,rtoDetail,function(resultedRTOInfo){var getCity;resultedRTOInfo.responseCode==$scope.p365Labels.responseCode.success?(rtoDetail.rtoPincode=resultedRTOInfo.data[0].pincode,localStorageService.get("carRegAddress")?(localStorageService.get("carRegAddress").pincode=rtoDetail.pincode,localStorageService.get("carRegAddress").city=$rootScope.selectedCarRegistrationObject.city,localStorageService.get("carRegAddress").state=$rootScope.selectedCarRegistrationObject.state):((getCity={}).pincode=rtoDetail.pincode,getCity.city=$rootScope.selectedCarRegistrationObject.city,getCity.state=$rootScope.selectedCarRegistrationObject.state,localStorageService.set("carRegAddress",getCity))):(rtoDetail.rtoPincode="",localStorageService.get("carRegAddress")?(localStorageService.get("carRegAddress").pincode=rtoDetail.pincode,localStorageService.get("carRegAddress").city=$rootScope.selectedCarRegistrationObject.city,localStorageService.get("carRegAddress").state=$rootScope.selectedCarRegistrationObject.state):((getCity={}).pincode=rtoDetail.pincode,getCity.city=$rootScope.selectedCarRegistrationObject.city,getCity.state=$rootScope.selectedCarRegistrationObject.state,localStorageService.set("carRegAddress",getCity)));$scope.quoteCarInputForm.$setDirty(),$scope.quoteCarInputForm.carInputForm.$setDirty()}),localStorageService.set("carRegistrationPlaceUsingIP",rtoDetail),$scope.vehicleInfo.registrationPlace=item.display,$rootScope.vehicleDetails.registrationNumber=""},$scope.setRangePrevPolicyExpiryDate=function(){var prevPolExpDateOption={};(1==$scope.vehicleDetails.policyStatus.key?(prevPolExpDateOption.minimumDateStringFormat=$scope.vehicleInfo.dateOfRegistration,prevPolExpDateOption.maximumDateStringFormat=$scope.vehicleDetails.policyStatus.expiryDate):2==$scope.vehicleDetails.policyStatus.key?(prevPolExpDateOption.minimumDayLimit=-90,prevPolExpDateOption.maximumDayLimit=-1):(prevPolExpDateOption.minimumDayLimit=0,prevPolExpDateOption.maximumDayLimit=60),prevPolExpDateOption.changeMonth=!0,prevPolExpDateOption.changeYear=!0,prevPolExpDateOption.dateFormat="dd/mm/yy",$scope.previousPolicyExpiryDateOptions=setP365DatePickerProperties(prevPolExpDateOption),$scope.odPolicyExpiryDate=setP365DatePickerProperties(prevPolExpDateOption),$scope.vehicleInfo.TPPolicyExpiryDate)&&((prevPolExpDateOption={}).minimumDateStringFormat=$scope.vehicleInfo.PreviousPolicyExpiryDate,$scope.tpPolicyExpiryDate=setP365DatePickerProperties(prevPolExpDateOption))},$scope.changePolStatus=function(){$location.search().isForRenewal?$scope.vehicleDetails.insuranceType.type==$scope.carInsuranceTypes[1].type?($scope.renewal=!0,$scope.setRangePrevPolicyExpiryDate()):($scope.renewal=!1,$rootScope.flag||($scope.vehicleInfo.PreviousPolicyExpiryDate=makeObjectEmpty($scope.vehicleInfo.PreviousPolicyExpiryDate,"text"))):$scope.vehicleDetails.insuranceType.type==$scope.carInsuranceTypes[1].type?($scope.renewal=!0,$rootScope.flag||($scope.vehicleInfo.PreviousPolicyExpiryDate=$scope.vehicleDetails.policyStatus.expiryDate),$scope.setRangePrevPolicyExpiryDate()):($scope.renewal=!1,$rootScope.flag||($scope.vehicleInfo.PreviousPolicyExpiryDate=makeObjectEmpty($scope.vehicleInfo.PreviousPolicyExpiryDate,"text"))),($scope.quoteParam.policyType="renew")&&(3==$scope.vehicleDetails.policyStatus.key?$scope.vehicleDetails.previousPolicyExpired="N":$scope.vehicleDetails.previousPolicyExpired="Y")},$scope.validateLpgCngKitCover=function(){if($scope.vehicleDetails.checkforLpgCngCover){var minLimit=minLpgCngKitCoverLimit,maxLimit=maxLpgCngKitCoverLimit;return $scope.vehicleDetails.lpgCngKitCover>=minLimit&&$scope.vehicleDetails.lpgCngKitCover<=maxLimit?($scope.invalidLpgCngKitCoverAmount="",null!=$scope.vehicleDetails.addOnCoverCustomAmount&&$scope.vehicleDetails.addOnCoverCustomAmount.lpgCngKitCover==Number($scope.vehicleDetails.lpgCngKitCover)||(updateQuoteStatus=!0),!0):($scope.invalidLpgCngKitCoverAmount="Please enter amount between "+minLimit+"-"+maxLimit+".",updateQuoteStatus=!1,!1)}"undefined"!=String($scope.vehicleDetails.addOnCoverCustomAmount.lpgCngKitCover)&&$scope.vehicleDetails.addOnCoverCustomAmount.lpgCngKitCover>0&&($rootScope.wordPressEnabled||$scope.singleClickCarQuote())},$scope.validateAccessories=function(){$scope.vehicleDetails.checkforAccessoriesCover||($scope.vehicleDetails.checkforElectrical||$scope.vehicleDetails.checkforNonElectrical)&&($scope.vehicleDetails.checkforElectrical=!1,$scope.vehicleDetails.checkforNonElectrical=!1,$rootScope.wordPressEnabled||$scope.singleClickCarQuote())},$scope.validateElectricalAccessories=function(){var minLimit=minCarAccessoriesLimit,maxLimit=maxCarAccessoriesLimit;return $scope.vehicleDetails.electricalAccessories>=minLimit&&$scope.vehicleDetails.electricalAccessories<=maxLimit?($scope.invalidElectricalAccessoriesAmount="",null!=$scope.vehicleDetails.addOnCoverCustomAmount&&$scope.vehicleDetails.addOnCoverCustomAmount.electricalAccessories==Number($scope.vehicleDetails.electricalAccessories)||(updateQuoteStatus=!0),!0):($scope.invalidElectricalAccessoriesAmount="Please enter amount between "+minLimit+"-"+maxLimit+".",updateQuoteStatus=!1,!1)},$scope.validateNonElectricalAccessories=function(quoteCallStatus){var minLimit=minCarAccessoriesLimit,maxLimit=maxCarAccessoriesLimit;return $scope.vehicleDetails.nonElectricalAccessories>=minLimit&&$scope.vehicleDetails.nonElectricalAccessories<=maxLimit?($scope.invalidNonElectricalAccessoriesAmount="",null!=$scope.vehicleDetails.addOnCoverCustomAmount&&$scope.vehicleDetails.addOnCoverCustomAmount.nonElectricalAccessories==Number($scope.vehicleDetails.nonElectricalAccessories)||(updateQuoteStatus=!0),!0):($scope.invalidNonElectricalAccessoriesAmount="Please enter amount between "+minLimit+"-"+maxLimit+".",updateQuoteStatus=!1,!1)},$scope.updateQuoteResult=function(){var updateQuoteResultStatus=!1;$scope.vehicleDetails.checkforNonElectrical&&$scope.validateNonElectricalAccessories(!1)&&(null!=$scope.vehicleDetails.addOnCoverCustomAmount&&$scope.vehicleDetails.addOnCoverCustomAmount.nonElectricalAccessories==Number($scope.vehicleDetails.nonElectricalAccessories)||(updateQuoteResultStatus=!0,updateQuoteStatus=!1)),$scope.vehicleDetails.checkforElectrical&&$scope.validateElectricalAccessories(!1)&&(null!=$scope.vehicleDetails.addOnCoverCustomAmount&&$scope.vehicleDetails.addOnCoverCustomAmount.electricalAccessories==Number($scope.vehicleDetails.electricalAccessories)||(updateQuoteResultStatus=!0,updateQuoteStatus=!1)),updateQuoteStatus&&(updateQuoteResultStatus=!0),updateQuoteResultStatus&&($rootScope.wordPressEnabled||$scope.singleClickCarQuote())},$scope.updateQuoteResultStatus=function(){updateQuoteStatus=!0},$scope.alterRenewal=function(){var todayDate=new Date;if($scope.vehicleDetails.insuranceType.type!=$scope.carInsuranceTypes[1].type)$scope.quoteParam.policyType="new",$scope.polStatus=!1,$scope.renewal=!1,$scope.vehicleDetails.regYear=todayDate.getFullYear().toString(),$scope.manufacturingYearList=listManufactureYear($scope.vehicleDetails.regYear,2),$scope.selectedYear=$scope.manufacturingYearList[0],$rootScope.flag||($scope.vehicleInfo.dateOfRegistration=("0"+todayDate.getDate().toString()).substr(-2)+"/"+("0"+(Number(todayDate.getMonth())+1).toString()).substr(-2)+"/"+$scope.vehicleDetails.regYear,$scope.vehicleDetails.PreviousPolicyStartDate=makeObjectEmpty($scope.vehicleDetails.PreviousPolicyStartDate,"text"),$scope.vehicleInfo.PreviousPolicyExpiryDate=makeObjectEmpty($scope.vehicleInfo.PreviousPolicyExpiryDate,"text")),$scope.vehicleDetails.manufacturingYear=$scope.manufacturingYearList[0];else{$scope.quoteParam.policyType="renew",$scope.polStatus=!0,$scope.renewal=!0,$scope.manufacturingYearList=listManufactureYear($scope.vehicleDetails.regYear,2);var current_Year=todayDate.getFullYear();$rootScope.flag||(current_Year==$scope.vehicleDetails.regYear?$scope.vehicleInfo.dateOfRegistration="01/01/"+$scope.vehicleDetails.regYear:$scope.vehicleInfo.dateOfRegistration="01/07/"+$scope.vehicleDetails.regYear,$scope.vehicleDetails.manufacturingYear=$scope.manufacturingYearList[0],convertStringFormatToDate($scope.vehicleInfo.PreviousPolicyExpiryDate,function(formattedPolicyExpiryDate){var tempPreviousPolicyExpiryDate=new Date(angular.copy(formattedPolicyExpiryDate)),tempCalcPrevPolStartDate=new Date(tempPreviousPolicyExpiryDate.setFullYear(new Date(tempPreviousPolicyExpiryDate).getFullYear()-1));tempCalcPrevPolStartDate=new Date(new Date(String(tempCalcPrevPolStartDate)).setDate(new Date(String(tempCalcPrevPolStartDate)).getDate()+1)),convertDateFormatToString(tempCalcPrevPolStartDate,function(formattedPrevPolStartDate){$scope.vehicleDetails.PreviousPolicyStartDate=formattedPrevPolStartDate})}))}$scope.changePolStatus()},$scope.alterRenewal(),$scope.validateVehicleDetails=function(){$scope.setValidityFlag=[],$scope.vehicleDetails.displayVehicle?$scope.setValidityFlag.pop("selVehicleRequiredFlag"):$scope.setValidityFlag.push("selVehicleRequiredFlag")},$scope.calculatePersonAge=function(){$scope.quoteParam.personAge=getAgeFromDOB($scope.vehicleDetails.formattedDateOfBirth)},$scope.modalMoreDetails=!1,$scope.toggleMoreDetails=function(){$scope.modalMoreDetails=!$scope.modalMoreDetails,$scope.hideModal=function(){$scope.modalMoreDetails=!1}},$scope.updateSort=function(sortOption){$scope.activeSort=sortOption.key,$scope.selectedSortOption=sortOption,1==sortOption.key?($scope.sortKey="grossPremium",$scope.sortReverse=!1):2==sortOption.key?($scope.sortKey="insuredDeclareValue",$scope.sortReverse=!0):3==sortOption.key&&($scope.sortKey="insurerIndex",$scope.sortReverse=!0),$scope.toggleState()},$scope.updateSortOrder=function(){1==$scope.selectedSortOption.key?$scope.sortKey="grossPremium":2==$scope.selectedSortOption.key?$scope.sortKey="insuredDeclareValue":3==$scope.selectedSortOption.key&&($scope.sortKey="insurerIndex"),$scope.sortReverse=!$scope.sortReverse},$scope.changePrevZeroDepValue=function(selectedZeroDepStatus){"undefined"!=String($scope.selectedCarrier)&&$scope.selectedCarrier.length>0&&($scope.selectedCarrier.length=0),$scope.tempPrevPolicyZeroDepStatus!=selectedZeroDepStatus&&$scope.singleClickCarQuote()},$scope.showPrevPolZeroDepCoverModal=function(selRiderId){if("renew"==$scope.quoteParam.policyType){for(var riderStatus=!1,i=0;i<$rootScope.carAddOnCoversList.selectedAddOnCovers.length;i++)if($rootScope.carAddOnCoversList.selectedAddOnCovers[i].riderId==selRiderId){riderStatus=!0;break}$scope.zeroDepRiderListCopy=angular.copy($rootScope.carAddOnCoversList.selectedAddOnCovers),riderStatus?($scope.vehicleInfo.previousPolicyZeroDepStatus=!1,$rootScope.wordPressEnabled?$scope.quoteCarInputForm.$setDirty():$scope.singleClickCarQuote(),setTimeout(function(){},500)):$rootScope.wordPressEnabled||($scope.modalPrevPolZeroDepCover=!0)}else $scope.vehicleInfo.previousPolicyZeroDepStatus=!0,$rootScope.wordPressEnabled?$scope.quoteCarInputForm.$setDirty():$scope.singleClickCarQuote(),setTimeout(function(){},500)},$scope.hidePrevPolZeroDepCoverModal=function(){$scope.zeroDepRiderListCopy?angular.copy($scope.zeroDepRiderListCopy,$rootScope.carAddOnCoversList.selectedAddOnCovers):$rootScope.carAddOnCoversList.selectedAddOnCovers=[],$scope.modalPrevPolZeroDepCover=!1,$scope.resetRiderSelection()},$scope.submitPrevPolZeroDepCover=function(){$scope.modalPrevPolZeroDepCover=!1,$scope.singleClickCarQuote()},$scope.submitPrevPolInvoiceCover=function(){$scope.modalPrevInvoiceCover=!1,$scope.singleClickCarQuote()},$scope.hidePrevInvoiceCoverModal=function(){$scope.modalPrevInvoiceCover=!1,$scope.resetRiderSelection()},$scope.submitEngineProtectorCover=function(){$scope.modalPrevEngineProtector=!1,$scope.singleClickCarQuote()},$scope.hidePrevEngineProtectorModal=function(){$scope.modalPrevEngineProtector=!1,$scope.resetRiderSelection()},$scope.submitPrevTyreSecureCover=function(){$scope.modalPrevTyreSecure=!1,$scope.singleClickCarQuote()},$scope.hidePrevTyreSecureModal=function(){$scope.modalPrevTyreSecure=!1,$scope.resetRiderSelection()},$scope.isMinPremium=function(grossPremiumValue,carrierIDValue){for(var min=$rootScope.carQuoteResult[0].grossPremium,i=0;i<=$rootScope.carQuoteResult.length-1;i++){var carrierIdMin=$rootScope.carQuoteResult[i].carrierId;Number($rootScope.carQuoteResult[i].grossPremium)<min&&(min=$rootScope.carQuoteResult[i].grossPremium,carrierIDValue=carrierIdMin)}return min===grossPremiumValue&&($scope.selMinCarrierId=carrierIDValue,!0)};var googleMapURL="https://www.google.co.in/maps/search/";$scope.openMap=function(garage){$scope.searchKey=googleMapURL+""+garage.repairerName+","+garage.pincode,window.open($scope.searchKey,"_blank")},$scope.toggleChangeClose=function(){angular.copy($scope.vehicleInfoCopy,$scope.vehicleInfo),angular.copy($scope.vehicleDetailsCopy,$scope.vehicleDetails),$scope.quoteCarInputForm.carInputForm.$setPristine(),$scope.validateVehicleDetails()},$rootScope.editForMobile=function(){$rootScope.showonEdit="inline !important",$rootScope.hideonEdit="none !important",$scope.flagforMobile=!0},$scope.toggleChange=function(){$scope.flagforMobile&&($rootScope.showonEdit="none !important",$rootScope.hideonEdit="inline !important",$scope.flagforMobile=!1),$scope.vehicleDetails.idvOption=1,$scope.quoteParam.riders&&($scope.checkedRider=!1);var prevPolExpDateOption={};$scope.vehicleInfo.TPPolicyExpiryDat=$scope.vehicleInfo.PreviousPolicyExpiryDate,prevPolExpDateOption.minimumDayLimit=$scope.vehicleInfo.PreviousPolicyExpiryDate,prevPolExpDateOption.changeMonth=!0,prevPolExpDateOption.changeYear=!0,prevPolExpDateOption.dateFormat="dd/mm/yy",$scope.tpPolicyExpiryDate=setP365DatePickerProperties(prevPolExpDateOption),convertStringFormatToDate($scope.vehicleInfo.PreviousPolicyExpiryDate,function(formattedPrevpolicyExpirytDate){convertStringFormatToDate($scope.vehicleInfo.TPPolicyExpiryDate,function(formattedTPpolicyExpiryDate){var selPrevpolicyExpirytDate=angular.copy(formattedPrevpolicyExpirytDate),tempCalcTPPolicyExpiryDate=new Date(selPrevpolicyExpirytDate.setFullYear(selPrevpolicyExpirytDate.getFullYear()));tempCalcTPPolicyExpiryDate=new Date(tempCalcTPPolicyExpiryDate.setDate(tempCalcTPPolicyExpiryDate.getDate()+1)),convertDateFormatToString(tempCalcTPPolicyExpiryDate,function(formattedTPpolicyExpiryDate){$scope.vehicleInfo.TPPolicyExpiryDate=formattedTPpolicyExpiryDate})})}),$scope.singleClickCarQuote()},$scope.toggleReportClose=function(){angular.copy($scope.vehicleInfoCopy,$scope.vehicleInfo),$scope.quoteCarInputForm.$setPristine()},$scope.toggleReportChange=function(){$(".thirdPane").addClass("opened"),$(".thirdPaneContent").show(),1==$(".viewReportDiv").is(":visible")||1==$(".modifyReportDiv").is(":visible")&&($scope.quoteCarInputForm.$dirty=!0,$scope.singleClickCarQuote())},$(".toggleResetChange").click(function(){$(this).closest(".InsideWrapper").find(".changeReportText").text("Edit"),$(this).closest(".InsideWrapper").find(".substituteIcon").addClass("changeicon"),$(this).closest(".InsideWrapper").find(".substituteIcon").removeClass("submiticon")}),$scope.callSingleClickCarQuote=function(){localStorageService.get("carProductToBeAddedInCart")&&($scope.productInCart=localStorageService.get("carProductToBeAddedInCart"),$scope.carDetailsCopy=angular.copy(localStorageService.get("carDetailsCopy")),$scope.carVehicleInfoCopy=angular.copy(localStorageService.get("carVehicleInfoCopy")),$scope.carInfoCopy=angular.copy(localStorageService.get("carInfoCopy"))),$scope.resultSectionEnabled=!0,$scope.inputSectionEnabled=!1,$scope.ridersSectionEnabled=!1,$scope.quoteCarInputForm.$dirty||$scope.isRiderFormDirty?$scope.singleClickCarQuote():($rootScope.carQuote={},$rootScope.carQuote=$scope.productInCart)},$scope.errorMessage=function(errorMsg){!$scope.errorRespCounter||"undefined"!=String($rootScope.carQuoteResult)&&0!=$rootScope.carQuoteResult.length?$rootScope.carQuoteResult.length>0&&($scope.quoteCalculationError=""):($scope.errorRespCounter=!1,$scope.quoteCalcSummaryError=!0,$scope.quoteCalculationError=errorMsg),$rootScope.loading=!1,$scope.tooltipPrepare($rootScope.carQuoteResult)},$scope.tooltipPrepare=function(carResult){if(null!=carResult&&"undefined"!=carResult&&carResult.length>0){for(var resultCarrierId=[],testCarrierId=[],i=0;i<carResult.length;i++){var carrierInfo={};carrierInfo.id=carResult[i].carrierId,carrierInfo.name=carResult[i].insuranceCompany,0==p365Includes(testCarrierId,carResult[i].carrierId)&&(resultCarrierId.push(carrierInfo),testCarrierId.push(carResult[i].carrierId))}$rootScope.resultedCarriers=resultCarrierId}},$scope.customFilterCar=function(){$scope.netPremiumTotalCar=0,$scope.netPremiumAverageCar=0,$scope.netPremiumMaxCar=0,$scope.proffesionalRatingCar=0;for(var i=0;i<$rootScope.carQuoteResult.length;i++)$rootScope.carQuoteResult[i].premiumRatio=$rootScope.carQuoteResult[i].netPremium/$rootScope.carQuoteResult[i].insuredDeclareValue,$scope.netPremiumTotalCar+=$rootScope.carQuoteResult[i].premiumRatio,$scope.netPremiumAverageCar=Number(($scope.netPremiumTotalCar/$rootScope.carQuoteResult.length).toFixed(5));for(i=0;i<$scope.carQuoteResult.length;i++)$rootScope.carQuoteResult[i].netPremiumMax=Number(($scope.netPremiumAverageCar/$rootScope.carQuoteResult[i].premiumRatio).toFixed(5)),$rootScope.carQuoteResult[i].netPremiumMax>$scope.netPremiumMaxCar&&($scope.netPremiumMaxCar=$rootScope.carQuoteResult[i].netPremiumMax);for(i=0;i<$rootScope.carQuoteResult.length;i++)$rootScope.carQuoteResult[i].netPremiumMean=Number(($rootScope.carQuoteResult[i].netPremiumMax/$scope.netPremiumMaxCar*5).toFixed(1)),$rootScope.carQuoteResult[i].proffesionalRating=.3*$rootScope.carQuoteResult[i].netPremiumMean+.2*$rootScope.carQuoteResult[i].garageIndex+.2*$rootScope.carQuoteResult[i].claimIndex+.3*$rootScope.carQuoteResult[i].insurerIndex,$rootScope.carQuoteResult[i].proffesionalRating=$rootScope.carQuoteResult[i].proffesionalRating,$rootScope.carQuoteResult[i].netPremiumMean||($rootScope.carQuoteResult[i].netPremiumMean=3.5),$rootScope.carQuoteResult[i].proffesionalRating||($rootScope.carQuoteResult[i].proffesionalRating=3.5),$rootScope.carQuoteResult[i].insurerIndex||($rootScope.carQuoteResult[i].insurerIndex=3.5),$rootScope.carQuoteResult[i].claimIndex||($rootScope.carQuoteResult[i].claimIndex=3.5),$rootScope.carQuoteResult[i].garageIndex||($rootScope.carQuoteResult[i].garageIndex=3.5);return $rootScope.carQuoteResult=$filter("orderBy")($rootScope.carQuoteResult,"proffesionalRating"),$scope.sortReverse=!0,!0},$scope.customFilterCarSelectedProduct=function(){$scope.netPremiumTotalCar=0,$scope.netPremiumAverageCar=0,$scope.netPremiumMaxCar=0,$scope.proffesionalRatingCar=0;for(var i=0;i<$rootScope.carQuoteResult.length;i++)$scope.netPremiumTotalCar+=$rootScope.carQuoteResult[i].premiumRatio,$scope.netPremiumAverageCar=Number(($scope.netPremiumTotalCar/$rootScope.carQuoteResult.length).toFixed(5));for(i=0;i<$scope.carQuoteResult.length;i++)$rootScope.carQuoteResult[i].netPremiumMax=Number(($scope.netPremiumAverageCar/$rootScope.carQuoteResult[i].premiumRatio).toFixed(5)),$rootScope.carQuoteResult[i].netPremiumMax>$scope.netPremiumMaxCar&&($scope.netPremiumMaxCar=$rootScope.carQuoteResult[i].netPremiumMax);for(i=0;i<$rootScope.carQuoteResult.length;i++)$rootScope.carQuoteResult[i].netPremiumMean=Number(($rootScope.carQuoteResult[i].netPremiumMax/$scope.netPremiumMaxCar*5).toFixed(1)),$rootScope.carQuoteResult[i].proffesionalRating=.3*$rootScope.carQuoteResult[i].netPremiumMean+.2*$rootScope.carQuoteResult[i].garageIndex+.2*$rootScope.carQuoteResult[i].claimIndex+.3*$rootScope.carQuoteResult[i].insurerIndex,$rootScope.carQuoteResult[i].proffesionalRating=$rootScope.carQuoteResult[i].proffesionalRating;var carrierAllReadyAdded=!1;if(localStorageService.get("carProductToBeAddedInCart"))for(i=0;i<$rootScope.carQuoteResult.length;i++)if(localStorageService.get("carProductToBeAddedInCart").carrierId==$rootScope.carQuoteResult[i].carrierId){$scope.selectProduct($rootScope.carQuoteResult[i],!1),$rootScope.carQuote=$rootScope.carQuoteResult[i],$scope.isGotCarQuotes=!0;carrierAllReadyAdded=!0;break}carrierAllReadyAdded||($scope.customFilterCar(),$rootScope.carQuote=$rootScope.carQuoteResult[0],$scope.isGotCarQuotes=!0)},$scope.processResult=function(_transactionName){$rootScope.tabSelectionStatus=!0,$rootScope.carQuoteResultCopy=$rootScope.carQuoteResult,"carQuote"==_transactionName&&($rootScope.carQuoteResultResponseCopy=$rootScope.carQuoteResult),$scope.customFilterCarSelectedProduct(),$scope.tooltipPrepare($rootScope.carQuoteResult)},$scope.garageListFilter=function(){$scope.garageList={},$scope.garageList.city=$scope.vehicleInfo.city,$scope.garageList.regisCode=$scope.vehicleInfo.RTOCode,$scope.garageList.make=$scope.vehicleInfo.make,RestAPI.invoke(getGarageDetails,$scope.garageList).then(function(callbackGarage){if(callbackGarage.responseCode==$scope.p365Labels.responseCode.success){var garageResponse=callbackGarage;null!=garageResponse&&"undefined"!=String(garageResponse)?($scope.garageDetails=garageResponse.data,localStorageService.set("garageDetails",garageResponse.data)):(localStorageService.set("garageDetails",void 0),$scope.garageDetails="")}else localStorageService.set("garageDetails",void 0),$scope.garageDetails=""})},$scope.calculateCarQuote=function(carQuoteResult,_transactionName,quoteIdStatus){if($rootScope.carQuoteRequest=[],$rootScope.carQuoteResult=[],$rootScope.carQuoteResultCopy=[],$rootScope.carQuoteErrorResponse=[],"calculateCarProductQuote"==_transactionName&&($rootScope.carQuoteResult=$rootScope.carQuoteResultResponseCopy),$scope.odOnlyPlan&&($scope.quoteParam.policyType="odonly"),$scope.quote.quoteParam=$scope.quoteParam,$scope.quote.vehicleInfo=$scope.vehicleInfo,localStorageService.set("carQuoteInputParamaters",$scope.quote),localStorageService.set("selectedCarDetails",$scope.vehicleDetails),$scope.resetVehicleDetails(),$scope.dataLoaded=!1,carQuoteResult.responseCode==$scope.p365Labels.responseCode.success1){$scope.dataLoaded=!0,$rootScope.loading=!1,$scope.responseCodeList=[],$rootScope.carQuoteRequest=carQuoteResult.data,$scope.requestId=carQuoteResult.QUOTE_ID,$scope.wordPressEnabled||"carQuote"!=_transactionName||($scope.carrierQuoteList=[],carQuoteResult.unMappedCarrierId&&($scope.carrierQuoteList=carQuoteResult.unMappedCarrierId)),quoteIdStatus&&localStorageService.set("CAR_UNIQUE_QUOTE_ID",$scope.requestId),carQuoteResult.encryptedQuoteId&&localStorageService.set("CAR_UNIQUE_QUOTE_ID_ENCRYPTED",carQuoteResult.encryptedQuoteId),1==$scope.vehicleDetails.idvOption&&localStorageService.set("car_best_quote_id",$scope.requestId),olarkCustomParam(localStorageService.get("CAR_UNIQUE_QUOTE_ID"),localStorageService.get("selectedBusinessLineId"),localStorageService.get("quoteUserInfo"),!1);var quoteResultCount=0;angular.forEach($rootScope.carQuoteRequest,function(obj,i){var request={},header={};header.messageId=messageIDVar,header.campaignID=campaignIDVar,header.source=sourceOrigin,header.transactionName=getCarQuoteResult,header.deviceId=deviceIdOrigin,request.header=header,request.body=obj,$http({method:"POST",url:getQuoteCalcLink,data:request}).success(function(callback,status){var carQuoteResponse=JSON.parse(callback);if(quoteResultCount+=1,carQuoteResponse.QUOTE_ID==$scope.requestId)if($scope.responseCodeList.push(carQuoteResponse.responseCode),carQuoteResponse.responseCode==$scope.p365Labels.responseCode.success1){for(var i=0;i<$rootScope.carQuoteRequest.length;i++)$rootScope.carQuoteRequest[i].messageId==carQuoteResponse.messageId&&($rootScope.carQuoteResult.push(carQuoteResponse.data.quotes[0]),$rootScope.carQuoteRequest[i].status=1);$scope.processResult(_transactionName)}else if(carQuoteResponse.responseCode==$scope.p365Labels.responseCode.invalidPlan){$scope.responseCodeList.push(carQuoteResponse.responseCode),$scope.wordPressEnabled||"carQuote"!=_transactionName||$scope.carrierQuoteList.push(obj),$rootScope.carQuoteRequest.length==quoteResultCount&&"carQuote"==_transactionName&&0==$rootScope.carQuoteResult.length&&($scope.noQuoteResultFound=!0),carQuoteResponse.invalidRiderMessage?$scope.errorMsg=carQuoteResponse.invalidRiderMessage:$scope.errorMsg=carQuoteResponse.message,$rootScope.carQuoteErrorResponse.push({status:0,carrierId:obj.carrierId,message:$sce.trustAsHtml("<div>We did not get quote from the Insurer. It may be because:</b></div><br/><ul class=errorUL><li class=errorPlacementLeft>1.{{errorMsg}}</li></div>")});for(i=0;i<$rootScope.carQuoteRequest.length;i++)$rootScope.carQuoteRequest[i].messageId==carQuoteResponse.messageId&&($rootScope.carQuoteRequest[i].status=2,carQuoteResponse.invalidRiderMessage?($scope.invalidPlanOption=carQuoteResponse.invalidRiderMessage,$rootScope.carQuoteRequest[i].message=$sce.trustAsHtml("<div>We did not get quote from the Insurer. It may be because </b></div><br/><ul class=errorUL><li class=errorPlacementLeft>{{invalidPlanOption}}</li></div>")):$rootScope.carQuoteRequest[i].message=$sce.trustAsHtml($scope.p365Labels.validationMessages.generalisedMotorErrMsg));$scope.processResult(_transactionName)}else{$scope.wordPressEnabled||"carQuote"!=_transactionName||$scope.carrierQuoteList.push(obj),$scope.errorMsg=carQuoteResponse.message,$rootScope.carQuoteErrorResponse.push({status:0,carrierId:obj.carrierId,message:$sce.trustAsHtml("<div>We did not get quote from the Insurer. It may be because : </b></div><br/><ul class=errorUL><li class=errorPlacementLeft>1.{{errorMsg}}</li></div>")}),$rootScope.carQuoteRequest.length==quoteResultCount&&"carQuote"==_transactionName&&0==$rootScope.carQuoteResult.length&&($scope.noQuoteResultFound=!0);for(i=0;i<$rootScope.carQuoteRequest.length;i++)$rootScope.carQuoteRequest[i].messageId==carQuoteResponse.messageId&&($rootScope.carQuoteRequest[i].status=2,$rootScope.carQuoteRequest[i].message=$sce.trustAsHtml($scope.p365Labels.validationMessages.generalisedMotorErrMsg))}}).error(function(data,status){$scope.responseCodeList.push($scope.p365Labels.responseCode.systemError)})}),$scope.carRequestStatus=0,$scope.$watch("responseCodeList",function(newValue,oldValue,scope){if(p365Includes($scope.responseCodeList,$scope.p365Labels.responseCode.success)&&$scope.responseCodeList.length==$rootScope.carQuoteRequest.length){for(var i=0;i<$rootScope.carQuoteRequest.length;i++)0==$rootScope.carQuoteRequest[i].status&&($rootScope.carQuoteRequest[i].status=2,$rootScope.carQuoteRequest[i].message=$sce.trustAsHtml($scope.p365Labels.validationMessages.generalisedMotorErrMsg));p365Includes($scope.responseCodeList,$scope.p365Labels.responseCode.success)?$scope.carRequestStatus=1:p365Includes($scope.responseCodeList,$scope.p365Labels.responseCode.quoteNotAvailable)?($scope.carRequestStatus=2,0==$rootScope.carQuoteResult.length&&"carQuote"==_transactionName&&($scope.noQuoteResultFound=!0,$rootScope.carQuoteResultResponseCopy=$rootScope.carQuoteResult,$rootScope.carQuoteRequest.push({status:2,message:""}),$rootScope.carQuoteRequest[0].message=$sce.trustAsHtml($scope.p365Labels.validationMessages.generalisedMotorErrMsg)),$scope.errorMessage($scope.p365Labels.validationMessages.productNotFoundMsg)):($scope.carRequestStatus=2,$scope.errorMessage($scope.p365Labels.validationMessages.generalisedErrMsg))}},!0),setTimeout(function(){"new"==$scope.quoteParam.policyType&&($rootScope.ownDamageValidity=[1,3],$scope.PACoverValidity($scope.CarPACoverDetails.isPACoverApplicable),$rootScope.selectedInsuranceType="comprehensive",$scope.filterResult($rootScope.selectedInsuranceType))},100)}else $scope.responseCodeList=[],"carQuote"==_transactionName&&($scope.noQuoteResultFound=!0,$rootScope.carQuoteResultResponseCopy=$rootScope.carQuoteResult,$rootScope.carQuoteRequest.push({status:2,message:$sce.trustAsHtml($scope.p365Labels.validationMessages.generalisedMotorErrMsg)}),"undefined"!=String($rootScope.carQuoteResult)&&$rootScope.carQuoteResult.length>0&&($rootScope.carQuoteResult.length=0)),$scope.errorMessage(carQuoteResult.message)},$scope.onSelectCarrierVariant=function(variant,data){$scope.calcQuoteOnVariant=!0,$scope.carrierVarients=variant,variant.carrierId=data.carrierId;var variantIdAlreadyExist=!1;if(variantList.length>0)for(var i=0;i<variantList.length;i++)if(variantList[i].carrierId==variant.carrierId){variantList[i]=variant,variantIdAlreadyExist=!0;break}console.log("variantIdAlreadyExist flag  is::",variantIdAlreadyExist),variantIdAlreadyExist||variantList.push(variant),console.log("variant list is::",variantList)},$scope.callForLanding=function(){$rootScope.Regpopup=!1,$scope.carDisplayNames=localStorageService.get("carMakeListDisplay");var carQuoteCookie=localStorageService.get("carQuoteInputParamaters");carQuoteCookie?($scope.vehicleInfo.make=carQuoteCookie.vehicleInfo.make,$scope.vehicleInfo.model=carQuoteCookie.vehicleInfo.model,$scope.vehicleInfo.variant=carQuoteCookie.vehicleInfo.variant,$scope.vehicleInfo.cubicCapacity=carQuoteCookie.vehicleInfo.cubicCapacity,$scope.vehicleInfo.fuel="PETROL",$scope.selectedVariantDetails={selectedItem:""},$scope.selectedVariantDetails.selectedItem=$scope.vehicleInfo.variant+"-"+$scope.vehicleInfo.cubicCapacity+"cc",$scope.carModelList=[],console.log("$scope.selectedVariantDetails in step 1 carQuoteCookie  is :",$scope.selectedVariantDetails),angular.forEach($scope.carDisplayNames,function(value){value.make==$scope.vehicleInfo.make&&$scope.carModelList.push(value.model)}),$scope.carVariantList=[],angular.forEach($scope.carDisplayNames,function(value){if(value.make==$scope.vehicleInfo.make&&value.model==$scope.vehicleInfo.model){var variantDetails=value.variant+"-"+value.cubicCapacity;$scope.carVariantList.push(variantDetails)}}),setTimeout(function(){$scope.vehicleInfo.make=carQuoteCookie.vehicleInfo.make,$scope.vehicleInfo.model=carQuoteCookie.vehicleInfo.model,$scope.vehicleInfo.variant=carQuoteCookie.vehicleInfo.variant,$scope.vehicleInfo.cubicCapacity=carQuoteCookie.vehicleInfo.cubicCapacity,$scope.vehicleInfo.fuel="PETROL",$scope.selectedVariantDetails={selectedItem:""},$scope.selectedVariantDetails.selectedItem=$scope.vehicleInfo.variant+"-"+$scope.vehicleInfo.cubicCapacity+"cc",$scope.carModelList=[],console.log("$scope.selectedVariantDetails in settimeout  is :",$scope.selectedVariantDetails),angular.forEach($scope.carDisplayNames,function(value){value.make==$scope.vehicleInfo.make&&$scope.carModelList.push(value.model)}),$scope.carVariantList=[],angular.forEach($scope.carDisplayNames,function(value){if(value.make==$scope.vehicleInfo.make&&value.model==$scope.vehicleInfo.model){var variantDetails=value.variant+"-"+value.cubicCapacity;$scope.carVariantList.push(variantDetails)}})},100)):setTimeout(function(){$scope.vehicleInfo={},$scope.vehicleInfo.IDV=0,$scope.vehicleInfo.RTOCode="MH01",$scope.vehicleInfo.previousClaim="false",$scope.vehicleInfo.registrationPlace="MH-01 Mumbai Tardeo",$scope.vehicleInfo.idvOption=1,$scope.vehicleInfo.make="Maruti Suzuki",$scope.vehicleInfo.model="Alto 800",$scope.vehicleInfo.variant="LX",$scope.vehicleInfo.fuel="PETROL",$scope.vehicleInfo.cubicCapacity="796",$scope.selectedVariantDetails={selectedItem:""},$scope.selectedVariantDetails.selectedItem=$scope.vehicleInfo.variant+"-"+$scope.vehicleInfo.cubicCapacity+"cc",$scope.carModelList=[],console.log("$scope.vehicleInfo.make in else part is :",$scope.selectedVariantDetails),angular.forEach($scope.carDisplayNames,function(value){value.make==$scope.vehicleInfo.make&&$scope.carModelList.push(value.model)}),$scope.carVariantList=[],angular.forEach($scope.carDisplayNames,function(value){if(value.make==$scope.vehicleInfo.make&&value.model==$scope.vehicleInfo.model){var variantDetails=value.variant+"-"+value.cubicCapacity;$scope.carVariantList.push(variantDetails)}})},100),$scope.searchText=null,$scope.searchText1=null,$scope.searchText2=null,$scope.querySearch=function(query){var filteredVehicle=[];return angular.forEach($scope.carDisplayNames,function(value){filteredVehicle.length<=40&&($scope.selectedVehicle=value.make,value.make.toLowerCase().includes(query.toLowerCase())&&(console.log("filtered vehicle is : ",filteredVehicle),-1==filteredVehicle.indexOf(value.make)&&filteredVehicle.push(value.make)))}),filteredVehicle},$scope.modelSearch=function(query){var filteredModel=[];return angular.forEach($scope.carModelList,function(model){filteredModel.length<=40&&model.toLowerCase().includes(query.toLowerCase())&&-1==filteredModel.indexOf(model)&&filteredModel.push(model)}),filteredModel},$scope.variantSearch=function(query){console.log("query in modelsearch is: ",query);var filteredVariant=[];return angular.forEach($scope.carVariantList,function(value){if(filteredVariant.length<=40&&(console.log("variant details is : ",value),value.toLowerCase().includes(query.toLowerCase())&&-1==filteredVariant.indexOf(value))){var variantDetails=value;filteredVariant.push(variantDetails)}}),console.log("filteredVariant list is: ",filteredVariant),filteredVariant}},$scope.selectedDisplayVehicle=function(selectedMake1){selectedMake1&&($scope.carModelList=[],$scope.vehicleInfo.model="",$scope.selectedVariantDetails={selectedItem:""},angular.forEach($scope.carDisplayNames,function(value){-1==$scope.carModelList.indexOf(value.model)&&value.make==selectedMake1&&$scope.carModelList.push(value.model)}),$scope.vehicleDetails.idvOption=1,$rootScope.carAddOnCoversList.selectedAddOnCovers=[],console.log("$scope.carModelList is: ",$scope.carModelList))},$scope.selectedDisplayModel=function(selectedModel1){selectedModel1&&($scope.carVariantList=[],$scope.filteredCarVariantLst=[],$scope.selectedVariantDetails={selectedItem:""},angular.forEach($scope.carDisplayNames,function(value){if(value.make==$scope.vehicleInfo.make&&value.model==$scope.vehicleInfo.model&&-1==$scope.carVariantList.indexOf(value.variant)){var variantDetails=value.variant+"-"+value.cubicCapacity+"cc";$scope.carVariantList.push(variantDetails)}}),console.log("$scope.carVariantList  is: ",$scope.carVariantList))},$scope.selectedDisplayVariant=function(selectedVariant){if(console.log("selectedVariant1 in selectedDisplayVariant step 1 is: ",selectedVariant),selectedVariant){console.log("** selectedVariant in step 2 is ** : ",selectedVariant),$scope.selectedVariantDetails.selectedItem=selectedVariant;var variantIndex=selectedVariant.lastIndexOf("-"),ccindex=selectedVariant.lastIndexOf("cc"),newccindex=ccindex-variantIndex;console.log("newccindex is ***: ",newccindex),-1!=variantIndex&&($scope.vehicleInfo.variant=selectedVariant.substr(0,variantIndex)),-1!=ccindex&&($scope.vehicleInfo.cubicCapacity=selectedVariant.substr(variantIndex+1,newccindex-1)),$scope.resetDisplayVehicle=!0,console.log("$scope.selectedVariantDetails in else part is:",$scope.selectedVariantDetails)}},$scope.callForLanding(),selectedRiderList($scope.addOnCovers,$rootScope.carAddOnCoversList.selectedAddOnCovers,$scope.quoteParam.riders,function(){}),$scope.wordPressEnabled||$rootScope.agencyPortalEnabled||$scope.fetchCarrierSpecificVariants(),$scope.singleClickCarQuote=function(_transactionName){var i,selectedMetroDetails;_transactionName=_transactionName||getCarQuote,$scope.quoteCarInputForm.$valid&&$scope.quoteCarInputForm.$dirty||$scope.quoteCarInputForm.carInputForm.$valid&&$scope.quoteCarInputForm.carInputForm.$dirty||$scope.isRiderFormDirty||$scope.calcQuoteOnVariant?setTimeout(function(){$scope.flagforMobile&&($rootScope.showonEdit="none !important",$rootScope.hideonEdit="inline !important",$scope.flagforMobile=!1),$rootScope.loading=!0,$scope.dataLoaded=!1,$scope.riderDetailsModal=!1,$scope.idvDetailsModal=!1,$scope.OdOnlyModal=!1,$scope.quoteCalcSummaryError=!1,$scope.isRiderFormDirty=!1,$scope.carRequestStatus=0,$scope.isGotCarQuotes=!1,$scope.noCarrierVariantFound=!1,$scope.noQuoteResultFound=!1,$scope.quoteCarInputForm.$setPristine(),$scope.vehicleDetails.addOnCoverCustomAmount={},$scope.vehicleInfo.IDV=Number($scope.vehicleInfo.IDV),"undefined"!=String($scope.selectedCarrier)&&$scope.selectedCarrier.length>0&&($scope.selectedCarrier.length=0),$rootScope.carAddOnCoversList.selectedAddOnCovers.length>0&&($scope.riderListCopy=angular.copy($rootScope.carAddOnCoversList.selectedAddOnCovers)),$scope.quoteParam.quoteType&&delete $scope.quoteParam.quoteType,$scope.quoteParam.riders=[],1==$scope.PACoverFlag&&$scope.PACoverAddon(),selectedRiderList($scope.addOnCovers,$rootScope.carAddOnCoversList.selectedAddOnCovers,$scope.quoteParam.riders,function(){if($scope.quote={},$scope.errorRespCounter=!0,defaultPassengerCover.riderAmount=Number($scope.vehicleDetails.passengerCover),defaultPassengerCover.seatingCapacity=Number($scope.vehicleInfo.seatingCapacity),defaultDriverAccidentCover.riderAmount=Number($scope.vehicleDetails.driverAccidentCover),defaultLpgCngKitCover.riderAmount=Number($scope.vehicleDetails.lpgCngKitCover),$scope.validateElectricalAccessories(!1)?defaultElectricalAccessoriesCover.riderAmount=Number($scope.vehicleDetails.electricalAccessories):(defaultElectricalAccessoriesCover.riderAmount=defaultElectricalAccessoriesCover.riderAmount,$scope.vehicleDetails.electricalAccessories=defaultElectricalAccessoriesCover.riderAmount,$scope.invalidElectricalAccessoriesAmount=""),$scope.validateNonElectricalAccessories(!1)?defaultNoElectricalAccessoriesCover.riderAmount=Number($scope.vehicleDetails.nonElectricalAccessories):(defaultNoElectricalAccessoriesCover.riderAmount=defaultNoElectricalAccessoriesCover.riderAmount,$scope.vehicleDetails.nonElectricalAccessories=defaultNoElectricalAccessoriesCover.riderAmount,$scope.invalidNonElectricalAccessoriesAmount=""),$scope.vehicleDetails.checkforDriverAccCover?($scope.quoteParam.riders.push(defaultDriverAccidentCover),$scope.checkforDriverAccCoverCopy=angular.copy($scope.vehicleDetails.checkforDriverAccCover),$scope.vehicleDetails.addOnCoverCustomAmount.driverAccidentCover=defaultDriverAccidentCover.riderAmount):($scope.vehicleDetails.addOnCoverCustomAmount.driverAccidentCover=0,$scope.checkforDriverAccCoverCopy=angular.copy($scope.vehicleDetails.checkforDriverAccCover)),$scope.vehicleDetails.checkforPsgCover?($scope.quoteParam.riders.push(defaultPassengerCover),$scope.checkforPsgCoverCopy=angular.copy($scope.vehicleDetails.checkforPsgCover),$scope.vehicleDetails.addOnCoverCustomAmount.passengerCover=defaultPassengerCover.riderAmount):($scope.vehicleDetails.addOnCoverCustomAmount.passengerCover=0,$scope.checkforPsgCoverCopy=angular.copy($scope.vehicleDetails.checkforPsgCover)),$scope.vehicleDetails.checkforLpgCngCover?($scope.quoteParam.riders.push(defaultLpgCngKitCover),$scope.checkforLpgCngCoverCopy=angular.copy($scope.vehicleDetails.checkforLpgCngCover),$scope.vehicleDetails.addOnCoverCustomAmount.lpgCngKitCover=defaultLpgCngKitCover.riderAmount):($scope.vehicleDetails.addOnCoverCustomAmount.lpgCngKitCover=0,$scope.checkforLpgCngCoverCopy=angular.copy($scope.vehicleDetails.checkforLpgCngCover)),$scope.vehicleDetails.checkforAccessoriesCover?($scope.vehicleDetails.checkforElectrical?($scope.quoteParam.riders.push(defaultElectricalAccessoriesCover),$scope.vehicleDetails.addOnCoverCustomAmount.electricalAccessories=defaultElectricalAccessoriesCover.riderAmount):$scope.vehicleDetails.addOnCoverCustomAmount.electricalAccessories=0,$scope.vehicleDetails.checkforNonElectrical?($scope.quoteParam.riders.push(defaultNoElectricalAccessoriesCover),$scope.vehicleDetails.addOnCoverCustomAmount.nonElectricalAccessories=defaultNoElectricalAccessoriesCover.riderAmount):$scope.vehicleDetails.addOnCoverCustomAmount.nonElectricalAccessories=0):($scope.vehicleDetails.addOnCoverCustomAmount.nonElectricalAccessories=0,$scope.vehicleDetails.addOnCoverCustomAmount.electricalAccessories=0),$scope.vehicleDetails.selectedAddOnCovers=$rootScope.carAddOnCoversList.selectedAddOnCovers,0==$scope.quoteParam.riders.length&&($scope.quoteParam.riders=makeObjectEmpty($scope.quoteParam.riders,"array")),1==$scope.vehicleDetails.idvOption&&($scope.vehicleInfo.IDV=0),$scope.displayIDVOption(),$rootScope.idvOptionCopy=angular.copy($scope.vehicleDetails.idvOption),$scope.vehicleDetails.insuranceType.value==$scope.carInsuranceTypes[0].value?$scope.quoteParam.policyType="new":$scope.quoteParam.policyType="renew",null!=$rootScope.selectedCarRegistrationObject||"undefined"!=String($rootScope.selectedCarRegistrationObject))$scope.vehicleInfo.city=$rootScope.selectedCarRegistrationObject.city,$scope.vehicleInfo.registrationPlace=$rootScope.selectedCarRegistrationObject.display,$scope.vehicleInfo.RTOCode=$rootScope.selectedCarRegistrationObject.regisCode,$scope.vehicleInfo.state=$rootScope.selectedCarRegistrationObject.state;else for(i=0;i<$scope.defaultMetroList.length;i++)if($scope.defaultMetroList[i].city==$scope.vehicleInfo.city)for(var j=0;j<$scope.defaultMetroList[i].RTODetails.length;j++)if((selectedMetroDetails=$scope.defaultMetroList[i].RTODetails[j]).display==$scope.vehicleInfo.registrationPlace){$scope.vehicleInfo.city=selectedMetroDetails.city,$scope.vehicleInfo.RTOCode=selectedMetroDetails.regisCode,$scope.vehicleInfo.state=selectedMetroDetails.state;break}if($scope.calculatedVehicleRegistrationDate=getDateForDisplay($scope.vehicleInfo.dateOfRegistration),$scope.vehicleDetails.registrationNumber="undefined"!=String($rootScope.vehicleDetails.registrationNumber)?$rootScope.vehicleDetails.registrationNumber:$scope.vehicleDetails.registrationNumber,$scope.vehicleDetails.showCarRegAreaStatus=$rootScope.showCarRegAreaStatus,$rootScope.showCarRegAreaStatus?-1!=$scope.vehicleInfo.registrationPlace.indexOf("-")?$scope.vehicleInfo.RTOCode=$scope.vehicleInfo.registrationPlace.substr(0,2).toUpperCase()+$scope.vehicleInfo.registrationPlace.substr(3,2).toUpperCase():$scope.vehicleInfo.RTOCode=$scope.vehicleInfo.registrationPlace.substr(0,4):$scope.vehicleInfo.RTOCode=$scope.vehicleDetails.registrationNumber.substr(0,4).toUpperCase(),$scope.vehicleDetails.regYear=String($scope.vehicleInfo.dateOfRegistration.split("/")[2]),$scope.vehicleAge=getAgeFromDOB($scope.vehicleInfo.dateOfRegistration),addOnCoversWithStatus($scope.addOnCovers,$scope.vehicleAge,function(){}),"true"==$scope.vehicleInfo.previousClaim||"new"==$scope.quoteParam.policyType?$scope.quoteParam.ncb=0:$scope.quoteParam.ncb=$scope.vehicleDetails.ncb.value,buyConfrmFlag?(resultCnfrmBuyFlag=!0,buyConfrmFlag=!1):resultCnfrmBuyFlag=!1,2==$scope.vehicleDetails.idvOption||3==$scope.vehicleDetails.idvOption?$scope.vehicleInfo.best_quote_id=localStorageService.get("car_best_quote_id"):delete $scope.vehicleInfo.best_quote_id,1==imauticAutomation&&imatCarLeadQuoteInfo(localStorageService,$scope,"ViewQuote"),$scope.wordPressEnabled||"calculateCarProductQuote"!=_transactionName||($scope.calcQuoteOnVariant=!1,$scope.vehicleInfo.carrierVariants=[],variantList.length>0&&($scope.vehicleInfo.carrierVariants=variantList)),$scope.quoteParam.riders&&($scope.selectedAddOn=$scope.quoteParam.riders.length),$scope.odOnlyPlan&&($scope.quoteParam.policyType="odonly"),$scope.vehicleInfo.idvOption=$scope.vehicleDetails.idvOption,$scope.quote.quoteParam=$scope.quoteParam,$scope.quote.vehicleInfo=$scope.vehicleInfo,$scope.requestId=null,updateQuoteStatus=!1,"calculateCarProductQuote"==_transactionName&&localStorageService.get("carProductToBeAddedInCart")&&($scope.quote.carrierId=localStorageService.get("carProductToBeAddedInCart").carrierId,$scope.quote.productId=localStorageService.get("carProductToBeAddedInCart").productId),professionalQuoteCarCookie)localStorageService.get("professionalQuoteParams");else professionalQuoteCarCookie={};professionalQuoteCarCookie.registrationYear=$scope.vehicleDetails.regYear,professionalQuoteCarCookie.TPPolicyStartDate=$scope.vehicleInfo.TPPolicyStartDate,professionalQuoteCarCookie.TPPolicyExpiryDate=$scope.vehicleInfo.TPPolicyExpiryDate,professionalQuoteCarCookie.make=$scope.vehicleInfo.make,professionalQuoteCarCookie.model=$scope.vehicleInfo.model,professionalQuoteCarCookie.variant=$scope.vehicleInfo.variant,professionalQuoteCarCookie.fuel=$scope.vehicleInfo.fuel,professionalQuoteCarCookie.cubicCapacity=$scope.vehicleInfo.cubicCapacity,professionalQuoteCarCookie.registrationPlace=$scope.vehicleInfo.registrationPlace,localStorageService.set("professionalQuoteParams.carInfo",professionalQuoteCarCookie),$scope.carQuoteRequestFormation($scope.quote),RestAPI.invoke(_transactionName,$scope.quoteRequest).then(function(callback){callback&&($scope.calculateCarQuote(callback,_transactionName,!0),$scope.garageListFilter())})})},100):($scope.riderDetailsModal=!1,$scope.idvDetailsModal=!1,$scope.OdOnlyModal=!1)},$scope.displaySelecteRidersModal=!1,$scope.showSelectedRiders=function(){$scope.displaySelecteRidersModal=!0},$scope.hideSelectedRiders=function(){$scope.displaySelecteRidersModal=!1},$scope.calculateQuoteOnAddOnCover=function(selRider){var i,quoteCalcFlag=!0;if("renew"==$scope.quoteParam.policyType)if(8==selRider.riderId){$scope.vehicleInfo.checkEngineProtector=!0;var engineProtectorRiderStatus=!1;for(i=0;i<$rootScope.carAddOnCoversList.selectedAddOnCovers.length;i++)if($rootScope.carAddOnCoversList.selectedAddOnCovers[i].riderId==selRider.riderId){engineProtectorRiderStatus=!0;break}engineProtectorRiderStatus?($scope.vehicleInfo.checkEngineProtector=!1,$scope.vehicleInfo.engineProtectorStatus=!1,$scope.modalPrevEngineProtector=!1):$rootScope.wordPressEnabled||(quoteCalcFlag=!1,$scope.modalPrevEngineProtector=!0)}else if(10==selRider.riderId){$scope.vehicleInfo.checkInvoiceCover=!0;var invoiceCoverStatus=!1;for(i=0;i<$rootScope.carAddOnCoversList.selectedAddOnCovers.length;i++)if($rootScope.carAddOnCoversList.selectedAddOnCovers[i].riderId==selRider.riderId){invoiceCoverStatus=!0;break}invoiceCoverStatus?($scope.vehicleInfo.checkInvoiceCover=!1,$scope.vehicleInfo.invoiceCoverStatus=!1,$scope.modalPrevInvoiceCover=!1):$rootScope.wordPressEnabled||(quoteCalcFlag=!1,$scope.modalPrevInvoiceCover=!0)}else if(37==selRider.riderId){$scope.vehicleInfo.checkTyreCoverRider=!0;var tyreCoverRiderStatus=!1;for(i=0;i<$rootScope.carAddOnCoversList.selectedAddOnCovers.length;i++)if($rootScope.carAddOnCoversList.selectedAddOnCovers[i].riderId==selRider.riderId){tyreCoverRiderStatus=!0;break}tyreCoverRiderStatus?($scope.vehicleInfo.checkTyreCoverRider=!1,$scope.vehicleInfo.tyreCoverStatus=!1,$scope.modalPrevTyreSecure=!1):$rootScope.wordPressEnabled||(quoteCalcFlag=!1,$scope.modalPrevTyreSecure=!0)}!$rootScope.wordPressEnabled&&quoteCalcFlag?$scope.singleClickCarQuote():$scope.quoteCarInputForm.$setDirty(),setTimeout(function(){},500)},$scope.calculateQuoteOnClick=function(){$rootScope.wordPressEnabled?$scope.quoteCarInputForm.$setDirty():$scope.singleClickCarQuote(),setTimeout(function(){},500)},$scope.resetRiderSelection=function(){if(localStorageService.get("carQuoteInputParamaters").quoteParam.riders&&($scope.selectedAddOn=localStorageService.get("carQuoteInputParamaters").quoteParam.riders.length),$scope.vehicleDetails.checkforDriverAccCover=!1,$scope.vehicleDetails.checkforPsgCover=!1,$scope.vehicleDetails.checkforLpgCngCover=!1,$scope.vehicleDetails.checkforAccessoriesCover=!1,$scope.vehicleDetails.checkforElectrical=!1,$scope.vehicleDetails.checkforNonElectrical=!1,$rootScope.carAddOnCoversList.selectedAddOnCovers=[],$scope.quoteParam.riders)for(var i=0;i<$scope.addOnCovers.length;i++)for(var j=0;j<$scope.quoteParam.riders.length;j++)if($scope.addOnCovers[i].riderId==$scope.quoteParam.riders[j].riderId){if(20==$scope.addOnCovers[i].riderId){$scope.vehicleDetails.checkforDriverAccCover=!0,$scope.vehicleDetails.driverAccidentCover=$scope.quoteParam.riders[j].riderAmount,$scope.vehicleDetails.addOnCoverCustomAmount.driverAccidentCover=$scope.vehicleDetails.driverAccidentCover;break}if(21==$scope.addOnCovers[i].riderId){$scope.vehicleDetails.checkforPsgCover=!0,$scope.vehicleDetails.passengerCover=$scope.quoteParam.riders[j].riderAmount,$scope.vehicleDetails.addOnCoverCustomAmount.passengerCover=$scope.vehicleDetails.passengerCover;break}if(35==$scope.addOnCovers[i].riderId){$scope.vehicleDetails.checkforLpgCngCover=!0,$scope.vehicleDetails.lpgCngKitCover=$scope.quoteParam.riders[j].riderAmount,$scope.vehicleDetails.addOnCoverCustomAmount.lpgCngKitCover=$scope.vehicleDetails.lpgCngKitCovers;break}if(25==$scope.addOnCovers[i].riderId){$scope.vehicleDetails.checkforAccessoriesCover=!0,$scope.vehicleDetails.checkforElectrical=!0,$scope.vehicleDetails.lpgCngKitCover=$scope.quoteParam.riders[j].riderAmount,$scope.vehicleDetails.addOnCoverCustomAmount.lpgCngKitCover=$scope.vehicleDetails.lpgCngKitCovers;break}if(30==$scope.addOnCovers[i].riderId){$scope.vehicleDetails.checkforAccessoriesCover=!0,$scope.vehicleDetails.checkforNonElectrical=!0,$scope.vehicleDetails.lpgCngKitCover=$scope.quoteParam.riders[j].riderAmount,$scope.vehicleDetails.addOnCoverCustomAmount.lpgCngKitCover=$scope.vehicleDetails.lpgCngKitCovers;break}if(20!=$scope.addOnCovers[i].riderId&&21!=$scope.addOnCovers[i].riderId&&35!=$scope.addOnCovers[i].riderId&&25!=$scope.addOnCovers[i].riderId&&30!=$scope.addOnCovers[i].riderId){$rootScope.carAddOnCoversList.selectedAddOnCovers.push($scope.addOnCovers[i]);break}}angular.copy($scope.vehicleInfoCopy,$scope.vehicleInfo),$scope.riderDetailsModal=!1},$scope.deleteReceipient=function(index){$scope.EmailChoices.splice(index,1),$scope.EmailChoices.length<3&&($scope.emailPopUpDisabled=!1,1==$scope.EmailChoices.length?($scope.EmailChoices[0].addNew=!0,$scope.EmailChoices[1].addNew=!1):($scope.EmailChoices[0].addNew=!1,$scope.EmailChoices[1].addNew=!0))},$scope.setRangePrevPolicyStartDate=function(){var prevPolStartDateOption={},tempCalcPrevPolStartDate="";$scope.productValidation.isShortFallSupported?(convertStringFormatToDate($scope.vehicleInfo.PreviousPolicyExpiryDate,function(formattedPrevPolExpDate){var tempPreviousPolicyExpiryDate=new Date(angular.copy(formattedPrevPolExpDate));tempCalcPrevPolStartDate=new Date(tempPreviousPolicyExpiryDate.setFullYear(new Date(tempPreviousPolicyExpiryDate).getFullYear()-1)),tempCalcPrevPolStartDate=new Date(new Date(String(tempCalcPrevPolStartDate)).setDate(new Date(String(tempCalcPrevPolStartDate)).getDate()+1)),prevPolStartDateOption.maximumDateLimit=formattedPrevPolExpDate}),"undefined"!=String($scope.prevPolicyStartDateWarning)&&""!=$scope.prevPolicyStartDateWarning?convertStringFormatToDate($scope.vehicleInfo.dateOfRegistration,function(formattedRegistrationDate){prevPolStartDateOption.minimumDateLimit=formattedRegistrationDate}):prevPolStartDateOption.minimumDateLimit=tempCalcPrevPolStartDate):(convertStringFormatToDate($scope.vehicleInfo.PreviousPolicyExpiryDate,function(formattedPrevPolExpDate){var tempPreviousPolicyExpiryDate=new Date(angular.copy(formattedPrevPolExpDate));tempCalcPrevPolStartDate=new Date(tempPreviousPolicyExpiryDate.setFullYear(new Date(tempPreviousPolicyExpiryDate).getFullYear()-1)),tempCalcPrevPolStartDate=new Date(new Date(String(tempCalcPrevPolStartDate)).setDate(new Date(String(tempCalcPrevPolStartDate)).getDate()+1))}),"undefined"!=String($scope.prevPolicyStartDateWarning)&&""!=$scope.prevPolicyStartDateWarning?convertStringFormatToDate($scope.vehicleInfo.dateOfRegistration,function(formattedRegistrationDate){prevPolStartDateOption.minimumDateLimit=formattedRegistrationDate,prevPolStartDateOption.maximumDateLimit=formattedRegistrationDate}):(prevPolStartDateOption.minimumDateLimit=tempCalcPrevPolStartDate,prevPolStartDateOption.maximumDateLimit=tempCalcPrevPolStartDate)),prevPolStartDateOption.changeMonth=!0,prevPolStartDateOption.changeYear=!0,prevPolStartDateOption.dateFormat="dd/mm/yy",$scope.previousPolicyStartDateOptions=setP365DatePickerProperties(prevPolStartDateOption)},$scope.validatePrevPolicyStartDate=function(){"undefined"!==String($scope.vehicleDetails.PreviousPolicyStartDate)&&"undefined"!==String($scope.vehicleInfo.PreviousPolicyExpiryDate)&&convertStringFormatToDate($scope.vehicleDetails.PreviousPolicyStartDate,function(formattedPrevPolStartDate){convertStringFormatToDate($scope.vehicleInfo.PreviousPolicyExpiryDate,function(formattedPrevPolExpDate){convertStringFormatToDate($scope.vehicleInfo.dateOfRegistration,function(formattedDateOfRegistration){var selPreviousPolicyExpiryDate=angular.copy(formattedPrevPolExpDate),tempCalcPrevPolStartDate=new Date(selPreviousPolicyExpiryDate.setFullYear(selPreviousPolicyExpiryDate.getFullYear()-1));tempCalcPrevPolStartDate=new Date(tempCalcPrevPolStartDate.setDate(tempCalcPrevPolStartDate.getDate()+1)),convertDateFormatToString(tempCalcPrevPolStartDate,function(formattedPrevPolStartDate){$scope.vehicleDetails.PreviousPolicyStartDate=formattedPrevPolStartDate})})})})},$scope.$watch("vehicleInfo.PreviousPolicyExpiryDate",function(){$scope.validatePrevPolicyStartDate()}),$scope.validateRegistrationDate=function(){"undefined"!==String($scope.vehicleInfo.dateOfRegistration)&&convertStringFormatToDate($scope.vehicleInfo.dateOfRegistration,function(formattedRegistrationDate){var selDateOfRegistration=new Date(angular.copy($scope.vehicleInfo.dateOfRegistration));new Date(angular.copy($scope.vehicleDetails.PreviousPolicyStartDate))<selDateOfRegistration?($scope.vehicleDetails.PreviousPolicyStartDate=$scope.vehicleInfo.dateOfRegistration,$scope.validatePrevPolicyStartDate()):($scope.prevPolicyStartDateWarning="",convertStringFormatToDate($scope.vehicleInfo.PreviousPolicyExpiryDate,function(formattedPolicyExpiryDate){var tempPreviousPolicyExpiryDate=new Date(angular.copy(formattedPolicyExpiryDate)),tempCalcPrevPolStartDate=new Date(tempPreviousPolicyExpiryDate.setFullYear(new Date(tempPreviousPolicyExpiryDate).getFullYear()-1));tempCalcPrevPolStartDate=new Date(new Date(String(tempCalcPrevPolStartDate)).setDate(new Date(String(tempCalcPrevPolStartDate)).getDate()+1)),convertDateFormatToString(tempCalcPrevPolStartDate,function(formattedPrevPolStartDate){$scope.vehicleDetails.PreviousPolicyStartDate=formattedPrevPolStartDate})})),$scope.setRangePrevPolicyExpiryDate(),$scope.calculatedVehicleRegistrationDate=getDateForDisplay($scope.vehicleInfo.dateOfRegistration),$scope.vehicleDetails.regYear=$scope.vehicleInfo.dateOfRegistration.split("/")[2],$scope.manufacturingYearList=listManufactureYear($scope.vehicleDetails.regYear,2),$scope.vehicleDetails.manufacturingYear=$scope.manufacturingYearList[0],$scope.registrationDateError=""})},$scope.initFourWheelerResultCtrl=function(){$rootScope.loading=!1;var dobDateOption={minimumYearLimit:"-100Y",maximumYearLimit:"-18Y",changeMonth:!0,changeYear:!0,dateFormat:"dd/mm/yy"};$scope.userDateOfBirthOptions=setP365DatePickerProperties(dobDateOption);var regDateOption={};$scope.vehicleDetails.insuranceType.type!=carInsuranceTypeGeneric[1].type?((regDateOption={}).minimumDayLimit=-9,regDateOption.maximumDayLimit=30,regDateOption.changeMonth=!0,regDateOption.changeYear=!0,regDateOption.dateFormat="dd/mm/yy",$scope.dateOfRegistrationOptions=setP365DatePickerProperties(regDateOption)):((regDateOption={}).minimumYearLimit="-15Y",regDateOption.maximumYearLimit="-0Y",regDateOption.changeMonth=!0,regDateOption.changeYear=!0,regDateOption.dateFormat="dd/mm/yy",$scope.dateOfRegistrationOptions=setP365DatePickerProperties(regDateOption)),$scope.setRangePrevPolicyExpiryDate()},$rootScope.flag&&($scope.validateRegistrationDate(),$scope.validatePrevPolicyStartDate(),$scope.vehicleInfo.PreviousPolicyExpiryDate=$scope.previousPolicyExpiryDateCopy,$scope.prevPolZeroDepStatus=$rootScope.prevPolZeroDepStatus,$scope.vehicleDetails=localStorageService.get("selectedCarDetails"),$scope.vehicleDetails.idvOption=$scope.vehicleInfo.idvOption,$scope.displayIDVOption(),$scope.customFilterCar(),$scope.riderListCopy=angular.copy($rootScope.carAddOnCoversList.selectedAddOnCovers),localStorageService.get("quoteUserInfo")&&($scope.EmailChoices[0].username=localStorageService.get("quoteUserInfo").emailId),$rootScope.loading=!1,$rootScope.flag=!1),$scope.initFourWheelerResultCtrl(),$scope.getRegNumber=function(registrationNumber){if("undefined"!=String(registrationNumber)){var registrationDetails={};if(registrationNumber=registrationNumber.replace(/[^a-zA-Z0-9]/gi,""),$scope.vehicleDetails=localStorageService.get("selectedCarDetails"),$scope.vehicleDetails.engineNumber="",$scope.vehicleDetails.chassisNumber="",$scope.vehicleDetails.isregNumberDisabled=!0,localStorageService.set("selectedCarDetails",$scope.vehicleDetails),$rootScope.isChasisNumber=!1,$rootScope.isEngineNumber=!1,$rootScope.isregNumber=!1,registrationNumber.trim().match(/^[a-zA-Z]{2}[0-9]{1,2}[a-zA-Z]{0,3}[0-9]{1,4}$/)&&registrationNumber.trim().length<=11&&registrationNumber.trim().length>4){$rootScope.regNumStatus=!1,$scope.vehicleDetails.insuranceType.type==$scope.carInsuranceTypes[1].type&&($scope.vehicleInfo.dateOfRegistration=makeObjectEmpty($scope.vehicleInfo.dateOfRegistration,"text")),$scope.selectedVariantDetails={selectedItem:""},registrationDetails.registrationNumber=registrationNumber,localStorageService.set("carRegistrationDetails",registrationDetails);var request={};request.registrationNumber=registrationNumber.toUpperCase(),request.lob="car",request.requestType="VEHICLERTOREQCONFIG",RestAPI.invoke($scope.p365Labels.transactionName.getVehicleRTODetails,request).then(function(callback){if(callback.responseCode==$scope.p365Labels.responseCode.success)if(callback.data){var vehicleRTODetails=callback.data;if($scope.isCarFound=!0,$scope.vehicleDetails.insuranceType.type==$scope.carInsuranceTypes[1].type){if(vehicleRTODetails.registrationYear){var selectedRegYear=vehicleRTODetails.registrationYear;$scope.vehicleDetails.regYear=selectedRegYear.trim(),$scope.vehicleInfo.dateOfRegistration="01/07/"+$scope.vehicleDetails.regYear,$scope.validateRegistrationDate()}else $scope.isCarFound=!1,$scope.vehicleInfo.dateOfRegistration="";vehicleRTODetails.dateOfRegistration?$scope.vehicleInfo.dateOfRegistration=vehicleRTODetails.dateOfRegistration:$scope.vehicleInfo.dateOfRegistration=""}vehicleRTODetails.uMake&&vehicleRTODetails.model&&vehicleRTODetails.variant&&vehicleRTODetails.fuelType?($scope.vehicleInfo.make=vehicleRTODetails.uMake,$scope.vehicleInfo.model=vehicleRTODetails.model,$scope.vehicleInfo.variant=vehicleRTODetails.variant,$scope.vehicleInfo.fuel=vehicleRTODetails.fuelType,vehicleRTODetails.variant&&vehicleRTODetails.cubicCapacity&&($scope.selectedVariantDetails.selectedItem=$scope.selectedVariantDetails.selectedItem=vehicleRTODetails.variant+"-"+vehicleRTODetails.cubicCapacity+"cc")):($scope.vehicleInfo.make="",$scope.vehicleInfo.model="",$scope.vehicleInfo.variant="",$scope.vehicleInfo.fuel="",$scope.vehicleInfo.cubicCapacity="",$scope.isCarFound=!1,$scope.fetchingCar=!1),vehicleRTODetails.vechileIdentificationNumber&&($scope.vehicleDetails.chassisNumber=vehicleRTODetails.vechileIdentificationNumber),vehicleRTODetails.engineNumber&&($scope.vehicleDetails.engineNumber=vehicleRTODetails.engineNumber),$scope.fetchingCar=!1;var regNumber=registrationNumber.trim().slice(0,2)+""+registrationNumber.trim().slice(2,4);$scope.getRegPlaceListRTO(regNumber,registrationNumber)}else{$scope.isCarFound=!1,$scope.fetchingCar=!1,$scope.selectedItem.displayVehicle="",$scope.vehicleDetails.regYear="";regNumber=registrationNumber.trim().slice(0,2)+""+registrationNumber.trim().slice(2,4);$scope.getRegPlaceListRTO(regNumber,registrationNumber)}else{$scope.isCarFound=!1,$scope.fetchingCar=!1,$scope.selectedItem.displayVehicle="",$scope.vehicleDetails.regYear="";regNumber=registrationNumber.trim().slice(0,2)+""+registrationNumber.trim().slice(2,4);$scope.getRegPlaceListRTO(regNumber,registrationNumber)}})}else $rootScope.regNumStatus=!0}else $rootScope.regNumStatus=!0},$scope.getRegPlaceListRTO=function(regNumber,registrationNumber){return regNumber.indexOf("-")>0&&(regNumber=regNumber.replace("-","")),$http.get(getServiceLink+$scope.p365Labels.documentType.RTODetails+"&q="+regNumber).then(function(callback){if((callback=JSON.parse(callback.data)).responseCode==$scope.p365Labels.responseCode.success){$rootScope.selectedCarRegistrationObject=callback.data[0],$rootScope.vehicleDetails.registrationNumber=registrationNumber.trim(),$scope.vehicleInfo.registrationNumber=$rootScope.vehicleDetails.registrationNumber;var rtoDetail={};rtoDetail.rtoName=$rootScope.selectedCarRegistrationObject.display,rtoDetail.rtoCity=$rootScope.selectedCarRegistrationObject.city,rtoDetail.rtoState=$rootScope.selectedCarRegistrationObject.state,rtoDetail.rtoObject=callback.data[0],rtoDetail.cityStatus=!0,rtoDetail.rtoStatus=!0,getPincodeFromCity($http,rtoDetail,function(resultedRTOInfo){if(resultedRTOInfo.responseCode==$scope.p365Labels.responseCode.success)if(rtoDetail.pincode=resultedRTOInfo.data[0].pincode,localStorageService.get("carRegAddress"))localStorageService.get("carRegAddress").pincode=rtoDetail.pincode,localStorageService.get("carRegAddress").city=$rootScope.selectedCarRegistrationObject.city,localStorageService.get("carRegAddress").state=$rootScope.selectedCarRegistrationObject.state;else{var getCity={};getCity.pincode=rtoDetail.pincode,getCity.city=$rootScope.selectedCarRegistrationObject.city,getCity.state=$rootScope.selectedCarRegistrationObject.state,localStorageService.set("carRegAddress",getCity)}else $scope.pincode="";localStorageService.set("carRegistrationPlaceUsingIP",rtoDetail),$scope.vehicleInfo.registrationPlace=rtoDetail.rtoName}),$rootScope.carAddOnCoversList.selectedAddOnCovers=[],$scope.vehicleDetails.idvOption=1,$scope.quoteCarInputForm.$setDirty(),$scope.vehicleInfo.displayVehicle?($scope.selectedItem.displayVehicle=$scope.vehicleInfo.displayVehicle,$rootScope.wordPressEnabled||($scope.carrierVariantList=[],$scope.carrierQuoteList=[],$scope.noCarrierVariantFound=!1,variantList=[])):$scope.selectedItem={}}else $rootScope.regNumStatus=!0})},$scope.hideResultCnfrmBuyModal=function(){$scope.modalResultCnfrmBuy=!1},$scope.submitResultCnfrmBuy=function(){$scope.modalResultCnfrmBuy=!1,$scope.resultCnfrmBuy.$dirty?($scope.resultCnfrmBuy.$setPristine(),resultCnfrmBuyFlag=!0,buyConfrmFlag=!0,$scope.quoteCarInputForm.$setDirty(),$scope.singleClickCarQuote()):$rootScope.baseEnvEnabled&&!$rootScope.wordPressEnabled?($rootScope.loading=!0,$location.path("/buyFourWheeler").search({quoteId:localStorageService.get("CAR_UNIQUE_QUOTE_ID"),carrierId:$scope.selectedProduct.carrierId,productId:$scope.selectedProduct.productId,lob:$scope.selectedProduct.quoteType})):($scope.quoteUserInfo=localStorageService.get("quoteUserInfo"),$rootScope.loading=!0,$location.path("/buyFourWheeler"))},$scope.checkPrevPolStatusRider=function(param){$scope.isPrevPolStatusRiderSelected=param,$scope.isPrevPolStatusRiderSelected||($scope.modalResultCnfrmBuy=!1)},$scope.selectProduct=function(selectedProduct,_redirectTOResult){_redirectTOResult=0!=_redirectTOResult||_redirectTOResult;var QUOTE_ID=localStorageService.get("CAR_UNIQUE_QUOTE_ID");updateSelectedProduct(RestAPI,QUOTE_ID,selectedProduct,function(updatedProductCallback){if(updatedProductCallback.data){var updatedProduct=updatedProductCallback.data;updatedProduct.selectedCarrier&&updatedProduct.selectedProduct&&($rootScope.selectedCarrierIdForCar=updatedProduct.selectedCarrier,$rootScope.selectedProductIdForCar=updatedProduct.selectedProduct),_redirectTOResult&&$location.path("/professionalJourneyResult")}})},$scope.confirmBuyProduct=function(_selectedProduct){resultCnfrmBuyFlag=!0,$scope.buyProduct(_selectedProduct)},$scope.buyProduct=function(selectedProduct){$rootScope.title=$scope.p365Labels.policies365Title.confirmPopup,$scope.buyScreenTemplate(selectedProduct)},$scope.buyScreenTemplate=function(selectedProduct){$scope.showPrevRiderPlanStatusDiv=!1,localStorageService.set("carSelectedProduct",selectedProduct),$scope.selectedProduct=selectedProduct,$scope.requestId&&(2!=$scope.vehicleDetails.idvOption&&3!=$scope.vehicleDetails.idvOption||localStorageService.set("CAR_UNIQUE_QUOTE_ID",$scope.requestId),UNIQUE_QUOTE_ID_ENCRYPTED&&localStorageService.set("CAR_UNIQUE_QUOTE_ID_ENCRYPTED",UNIQUE_QUOTE_ID_ENCRYPTED)),$scope.modalCompare&&($scope.modalCompare=!1),1==imauticAutomation&&imatBuyClicked(localStorageService,$scope,"BuyClicked");var buyScreenParam={};buyScreenParam.documentType=proposalScreenConfig,buyScreenParam.businessLineId=localStorageService.get("selectedBusinessLineId"),buyScreenParam.carrierId=selectedProduct.carrierId,buyScreenParam.productId=selectedProduct.productId,buyScreenParam.QUOTE_ID=localStorageService.get("CAR_UNIQUE_QUOTE_ID"),$rootScope.voluntaryDeductable=0,$rootScope.antiTheftDeviceAmount=0;for(var i=0;i<selectedProduct.discountList.length;i++)"Voluntary Deductible Discount"==selectedProduct.discountList[i].type&&selectedProduct.discountList[i].discountAmount>0&&($rootScope.voluntaryDeductable=selectedProduct.discountList[i].discountAmount),"Anti-Theft Discount"==selectedProduct.discountList[i].type&&selectedProduct.discountList[i].discountAmount>0&&($rootScope.antiTheftDeviceAmount=selectedProduct.discountList[i].discountAmount);getDocUsingParam(RestAPI,productDataReader,buyScreenParam,function(buyScreen){if(buyScreen.responseCode==$scope.p365Labels.responseCode.success){if(localStorageService.set("buyScreen",buyScreen.data),$scope.productValidation=buyScreen.data.validation,resultCnfrmBuyFlag||("renew"==$scope.quoteParam.policyType&&$scope.setRangePrevPolicyStartDate(),$scope.modalResultCnfrmBuy=!0),$scope.selectedProduct.previousRiderPlanStatus){$scope.selectedRiderList=[];for(var i=0;i<$scope.selectedProduct.ridersList.length;i++)"Engine Protector"==$scope.selectedProduct.ridersList[i].riderName?$scope.selectedRiderList.push($scope.selectedProduct.ridersList[i]):"Invoice Cover"==$scope.selectedProduct.ridersList[i].riderName?$scope.selectedRiderList.push($scope.selectedProduct.ridersList[i]):"Zero Depreciation cover"==$scope.selectedProduct.ridersList[i].riderName?$scope.selectedRiderList.push($scope.selectedProduct.ridersList[i]):"Tyre Secure"==$scope.selectedProduct.ridersList[i].riderName&&$scope.selectedRiderList.push($scope.selectedProduct.ridersList[i]);$scope.showPrevRiderPlanStatusDiv=!0,$scope.isPrevPolStatusRiderSelected=!0}resultCnfrmBuyFlag&&($rootScope.baseEnvEnabled&&!$rootScope.wordPressEnabled?($rootScope.loading=!0,$location.path("/ipos").search({quoteId:localStorageService.get("CAR_UNIQUE_QUOTE_ID"),carrierId:$scope.selectedProduct.carrierId,productId:$scope.selectedProduct.productId,lob:$scope.selectedProduct.quoteType})):($rootScope.loading=!0,$location.path("/buyFourWheeler")),$scope.$apply())}else console.log("unable to proceed due to failed transaction name: findAppConfig for  carCarrierList"),$rootScope.P365Alert("Policies365",$scope.p365Labels.validationMessages.generalisedErrMsg,"Ok")})},$rootScope.signout=function(){$rootScope.userLoginStatus=!1;var userLoginInfo={username:""};userLoginInfo.status=$rootScope.userLoginStatus,localStorageService.set("userLoginInfo",userLoginInfo),$location.path("/quote")},$scope.openMenu=function($mdOpenMenu,ev){$mdOpenMenu(ev),setTimeout(function(){$(".md-click-catcher").click(function(){$scope.activeMenu=""})},100)},$scope.modalEmailView=!1,$scope.emailPopUpDisabled=!1,localStorageService.get("quoteUserInfo")&&($scope.EmailChoices[0].username=localStorageService.get("quoteUserInfo").emailId),$scope.addNewChoice=function(){var newItemNo=$scope.EmailChoices.length+1;newItemNo<=3&&($scope.EmailChoices.push({username:""}),$scope.EmailChoices[0].addNew=!1,$scope.EmailChoices[1].addNew=!0,$scope.emailPopUpDisabled=!1),3==newItemNo&&($scope.EmailChoices[2].addNew=!1,$scope.emailPopUpDisabled=!0)},$scope.removeChoice=function(){var lastItem=$scope.EmailChoices.length-1;$scope.EmailChoices.splice(lastItem)},$scope.showForShare=function(data){if(!$rootScope.parseCarrierList)return!0;for(var j=0;j<$rootScope.parseCarrierList.length;j++)if(data.carrierId==$rootScope.parseCarrierList[j])return!0},$scope.sendEmail=function(){$scope.flagArray=[];for(var index=-1,i=0;i<$scope.EmailChoices.length;i++){if(""!=$scope.EmailChoices[i].username&&void 0!=$scope.EmailChoices[i].username){var encodeQuote=localStorageService.get("CAR_UNIQUE_QUOTE_ID_ENCRYPTED"),encodeLOB=String(localStorageService.get("selectedBusinessLineId")),encodeEmailId=$scope.EmailChoices[i].username,encodeCarrierList=[];$scope.insuranceCompanyList.selectedInsuranceCompany.length>0?(encodeCarrierList=$scope.insuranceCompanyList.selectedInsuranceCompany,jsonEncodeCarrierList=JSON.stringify(encodeCarrierList)):encodeCarrierList.push("ALL"),$rootScope.encryptedQuote_Id=encodeQuote,$rootScope.encryptedLOB=encodeLOB,$rootScope.encryptedEmail=encodeEmailId,$rootScope.encryptedCarriers=jsonEncodeCarrierList,$scope.EmailChoices[i].funcType="SHAREVEHICLEQUOTE",$scope.EmailChoices[i].isBCCRequired="Y",$scope.EmailChoices[i].paramMap={},$scope.EmailChoices[i].paramMap.docId=String($rootScope.encryptedQuote_Id),$scope.EmailChoices[i].paramMap.LOB=String($rootScope.encryptedLOB),$scope.EmailChoices[i].paramMap.userId=String($rootScope.encryptedEmail),$rootScope.encryptedCarriers&&($scope.EmailChoices[i].paramMap.carriers=String($rootScope.encryptedCarriers)),$scope.EmailChoices[i].paramMap.vehicleName=$scope.vehicleDetails.displayVehicle,$scope.EmailChoices[i].paramMap.selectedPolicyType="Four Wheeler",$rootScope.vehicleDetails.registrationNumber?$scope.EmailChoices[i].paramMap.registrationNum=$rootScope.vehicleDetails.registrationNumber.toUpperCase():$scope.EmailChoices[i].paramMap.registrationNum=$scope.vehicleInfo.registrationPlace;var body={};body.longURL=shareQuoteLink+$scope.EmailChoices[i].paramMap.docId+"&LOB="+$scope.EmailChoices[i].paramMap.LOB+"&userId="+$scope.EmailChoices[i].paramMap.userId+"&carriers="+$scope.EmailChoices[i].paramMap.carriers,$http({method:"POST",url:getShortURLLink,data:body}).success(function(shortURLResponse){var request={},header={},arr=$scope.EmailChoices;header.messageId=messageIDVar,header.campaignID=campaignIDVar,header.source=sourceOrigin,header.transactionName=sendEmail,header.deviceId=deviceIdOrigin,request.header=header,shortURLResponse.responseCode==$scope.p365Labels.responseCode.success?(index++,request.body=arr[index],request.body.paramMap.url=shortURLResponse.data.shortURL,$http({method:"POST",url:getQuoteCalcLink,data:request}).success(function(callback){var emailResponse=JSON.parse(callback),receipientNum=$scope.EmailChoices.length;i==receipientNum&&(emailResponse.responseCode==$scope.p365Labels.responseCode.success?($scope.shareEmailModal=!1,$scope.modalEmailView=!0):localStorageService.set("emailDetails",void 0))})):console.log(shortURLResponse.message)})}}},$scope.showShareEmailModal=function(){localStorageService.get("quoteUserInfo")&&localStorageService.get("quoteUserInfo").emailId&&$rootScope.wordPressEnabled?(1==imauticAutomation?imatShareQuote(localStorageService,$scope,"ShareQuote"):$scope.sendEmail(),$scope.shareEmailModal=!1,$scope.modalEmailView=!0):$scope.shareEmailModal=!0},$scope.sendQuotesByEmail=function(){var quoteUserInfo={};if($scope.EmailChoices.length>0){if(localStorageService.get("quoteUserInfo"))(quoteUserInfo=localStorageService.get("quoteUserInfo")).emailId=$scope.EmailChoices[0].username,localStorageService.set("quoteUserInfo",quoteUserInfo);else(quoteUserInfo={}).emailId=$scope.EmailChoices[0].username,localStorageService.set("quoteUserInfo",quoteUserInfo);$rootScope.wordPressEnabled&&1==imauticAutomation?imatShareQuote(localStorageService,$scope,"ShareQuote"):$scope.sendEmail(),$scope.shareEmailModal=!1,$scope.modalEmailView=!0}},$scope.hideEmailModal=function(){$scope.modalEmailView=!1,$scope.shareEmailModal=!1},$scope.leadCreationUserInfo=function(){var userInfoWithQuoteParam={};if($scope.selectedBusinessLineId=localStorageService.get("selectedBusinessLineId"),localStorageService.set("quoteUserInfo",$scope.quoteUserInfo),userInfoWithQuoteParam.quoteParam=localStorageService.get("carQuoteInputParamaters").quoteParam,userInfoWithQuoteParam.vehicleInfo=localStorageService.get("carQuoteInputParamaters").vehicleInfo,userInfoWithQuoteParam.contactInfo=$scope.quoteUserInfo,$rootScope.agencyPortalEnabled){const localdata=JSON.parse(localStorage.getItem("finalLocalStorage"));userInfoWithQuoteParam.contactInfo.createLeadStatus=!1,userInfoWithQuoteParam.requestSource=sourceOrigin,$location.search("createLead","false"),localdata&&(userInfoWithQuoteParam.userName=localdata.username,userInfoWithQuoteParam.agencyId=localdata.agencyId)}else $scope.quoteUserInfo.emailId=$rootScope.decryptedEmailId,userInfoWithQuoteParam.requestSource="web";null!=$scope.quoteUserInfo&&(""==$scope.quoteUserInfo.messageId||$scope.quoteUserInfoForm.$dirty?RestAPI.invoke(createLead,userInfoWithQuoteParam).then(function(callback){callback.responseCode==$scope.p365Labels.responseCode.success&&(messageIDVar=callback.data.messageId,$scope.quoteUserInfo.messageId=messageIDVar,localStorageService.set("quoteUserInfo",$scope.quoteUserInfo),$scope.modalView=!1)}):messageIDVar=$scope.quoteUserInfo.messageId)},$scope.displayPDF=!1,$scope.pdfviewer=function(data){console.log("inside pdf viewer");var encodeQuote=localStorageService.get("CAR_UNIQUE_QUOTE_ID_ENCRYPTED");$rootScope.encryptedQuote_Id=encodeQuote;var encodeLOB=String(localStorageService.get("selectedBusinessLineId")),encodeEmailId=$scope.EmailChoices[0].username;(jsonEncodeCarrierList=[]).push(data.carrierId),$rootScope.encryptedQuote_Id=encodeQuote,$rootScope.encryptedLOB=encodeLOB,$rootScope.encryptedEmail=encodeEmailId,$rootScope.encryptedCarriers=jsonEncodeCarrierList;var body={};body.longURL=shareQuoteLink+String($rootScope.encryptedQuote_Id)+"&LOB="+String($rootScope.encryptedLOB)+"&userId="+String($rootScope.encryptedEmail)+"&carriers="+String($rootScope.encryptedCarriers)+"&sharePDF=true",$http({method:"POST",url:getShortURLLink,data:body}).success(function(shortURLResponse){var shortURL=shortURLResponse.data.shortURL;if(shortURLResponse.responseCode==$scope.p365Labels.responseCode.success){var validateAuthParam={paramMap:{}};validateAuthParam.mobileNumber=localStorageService.get("quoteUserInfo").mobileNumber,validateAuthParam.paramMap.firstName=localStorageService.get("quoteUserInfo").firstName,validateAuthParam.funcType="SharePDF",console.log("quote user info in pdf viewer function is: ",localStorageService.get("quoteUserInfo"));var encodeQuote=localStorageService.get("CAR_UNIQUE_QUOTE_ID_ENCRYPTED");$rootScope.encryptedQuote_Id=encodeQuote;var encodeLOB=String(localStorageService.get("selectedBusinessLineId")),encodeEmailId=$scope.EmailChoices[0].username;(jsonEncodeCarrierList=[]).push(data.carrierId),$rootScope.encryptedQuote_Id=encodeQuote,$rootScope.encryptedLOB=encodeLOB,$rootScope.encryptedEmail=encodeEmailId,$rootScope.encryptedCarriers=jsonEncodeCarrierList,validateAuthParam.paramMap.docId=String($rootScope.encryptedQuote_Id),validateAuthParam.paramMap.LOB=String($rootScope.encryptedLOB),validateAuthParam.paramMap.userId=String($rootScope.encryptedEmail),$rootScope.encryptedCarriers&&(validateAuthParam.paramMap.carriers=String($rootScope.encryptedCarriers)),validateAuthParam.paramMap.longURL=shortURL||shareQuoteLink+validateAuthParam.paramMap.docId+"&LOB="+validateAuthParam.paramMap.LOB+"&userId="+validateAuthParam.paramMap.userId+"&carriers="+validateAuthParam.paramMap.carriers+"&sharePDF=true",console.log("validateAuthParam.paramMap is: ",validateAuthParam),getDocUsingParam(RestAPI,"sendSMS",validateAuthParam,function(createOTP){createOTP.responseCode==$scope.p365Labels.responseCode.success?($scope.PDFURL=$sce.trustAsResourceUrl(validateAuthParam.paramMap.longURL),$scope.sharePDF=!0,console.log("sms sent successfully for share pdf")):$rootScope.P365Alert("Policies365","unable to sent SMS,right now","Ok")})}})},$scope.hideSharePDFModal=function(){$scope.sharePDF=!1},$scope.openCarPopup=function(selectedTab,_data){_data.netPremium&&(_data.netPremium=Math.floor(Number(_data.netPremium))),_data.totalDiscountAmount&&(_data.totalDiscountAmount=Number(_data.totalDiscountAmount)),_data.totalRiderAmount&&(_data.totalRiderAmount=Number(_data.totalRiderAmount));for(var i=0;i<_data.discountList.length;i++)_data.discountList[i].discountAmount&&(_data.discountList[i].discountAmount=Number(_data.discountList[i].discountAmount));_data.maxIdvValue=Number(_data.maxIdvValue),_data.minIdvValue=Number(_data.minIdvValue),_data.insuredDeclareValue=Number(_data.insuredDeclareValue),_data.serviceTax=Number(_data.serviceTax),_data.odpremium=Number(_data.odpremium),_data.paidDriverCover?_data.paidDriverCover=Number(_data.paidDriverCover):_data.paidDriverCover=0,_data.tppremium=Number(_data.tppremium),console.log("openCarPopup................",_data),$scope.carProductToBeAddedInCart=_data,$rootScope.selectedTabCar=selectedTab,$scope.premiumModalCar=!$scope.premiumModalCar};googleMapURL="https://www.google.co.in/maps/search/";$scope.openMap=function(garage){$scope.searchKey=googleMapURL+""+garage.repairerName+","+garage.pincode,window.open($scope.searchKey,"_blank")},$scope.hidePremiumModalCar=function(){$scope.premiumModalCar=!1},$scope.PACoverValidity=function(applicable){$rootScope.personalAccidentValidity=applicable?[1,3]:[]},$scope.PACoverAddon=function(){$scope.tempVar={},$scope.tempVar.riderId=11,$scope.tempVar.riderName="Personal Accident Cover",$scope.quoteParam.riders&&$scope.quoteParam.riders.push($scope.tempVar),console.log("inside PACoverAddon",$scope.quoteParam.riders)},$scope.PACoverValidity($scope.CarPACoverDetails.isPACoverApplicable),$scope.togglePACover=function(){$scope.isPACoverApplicableCopyForReset=angular.copy(!$scope.CarPACoverDetails.isPACoverApplicable),$scope.PACoverFlag=0,$scope.PACoverValidity($scope.CarPACoverDetails.isPACoverApplicable),$scope.displayForChange=!1,$scope.CarPACoverDetails.isPACoverApplicable?($scope.CarPACoverDetails={},$scope.PACoverFlag=1,$scope.CarPACoverDetails.isPACoverApplicable=!0,$scope.PACoverModal=!1,$scope.singleClickCarQuote()):($scope.PACoverModal=!0,$scope.CarPACoverDetails.existingInsurance=!0)},$scope.changePolicyPlan=function(){$scope.odOnlyPlan=!$scope.odOnlyPlan,$scope.odOnlyPlan&&$scope.showOdOnlyVModal(),console.log("inside changePolicyPlan function",$scope.odOnlyPlan);var prevPolExpDateOption={};$scope.vehicleInfo.TPPolicyExpiryDat=$scope.vehicleInfo.PreviousPolicyExpiryDate,prevPolExpDateOption.minimumDayLimit=$scope.vehicleInfo.PreviousPolicyExpiryDate,prevPolExpDateOption.changeMonth=!0,prevPolExpDateOption.changeYear=!0,prevPolExpDateOption.dateFormat="dd/mm/yy",$scope.tpPolicyExpiryDate=setP365DatePickerProperties(prevPolExpDateOption),convertStringFormatToDate($scope.vehicleInfo.PreviousPolicyExpiryDate,function(formattedPrevpolicyExpirytDate){convertStringFormatToDate($scope.vehicleInfo.TPPolicyExpiryDate,function(formattedTPpolicyExpiryDate){var selPrevpolicyExpirytDate=angular.copy(formattedPrevpolicyExpirytDate),tempCalcTPPolicyExpiryDate=new Date(selPrevpolicyExpirytDate.setFullYear(selPrevpolicyExpirytDate.getFullYear()));tempCalcTPPolicyExpiryDate=new Date(tempCalcTPPolicyExpiryDate.setDate(tempCalcTPPolicyExpiryDate.getDate()+1)),convertDateFormatToString(tempCalcTPPolicyExpiryDate,function(formattedTPpolicyExpiryDate){$scope.vehicleInfo.TPPolicyExpiryDate=formattedTPpolicyExpiryDate})})}),prevPolExpDateOption.minimumDayLimit=-1825,prevPolExpDateOption.maximumDayLimit=0,prevPolExpDateOption.changeMonth=!0,prevPolExpDateOption.changeYear=!0,prevPolExpDateOption.dateFormat="dd/mm/yy",$scope.tpPolicyStartDate=setP365DatePickerProperties(prevPolExpDateOption)},$scope.showPACoverModal=function(){$scope.displayForChange=!0,$scope.PACoverModal=!0},$scope.hidePACoverModal=function(){$scope.PACoverModal=!1,$scope.displayForChange||($scope.CarPACoverDetails.isPACoverApplicable=$scope.isPACoverApplicableCopyForReset)},$scope.showRiderModal=function(){localStorageService.get("carQuoteInputParamaters").quoteParam.riders&&($scope.selectedAddOn=localStorageService.get("carQuoteInputParamaters").quoteParam.riders.length),$scope.riderDetailsModal=!$scope.riderDetailsModal,$scope.vehicleInfoCopy=angular.copy($scope.vehicleInfo)},$scope.showIDVModal=function(){$scope.idvDetailsModal=!$scope.idvDetailsModal},$scope.showOdOnlyVModal=function(){$scope.OdOnlyModal=!$scope.OdOnlyModal,console.log("inside show od only modal ",$scope.odOnlyPlan)},$scope.showVehicleOwnerModal=function(){$scope.ownerTypeModal=!$scope.ownerTypeModal,$scope.tempOwner=angular.copy($scope.quoteParam.ownedBy)},$scope.hideVehicleOwnerModal=function(){$scope.quoteParam.ownedBy=angular.copy($scope.tempOwner),$scope.ownerTypeModal=!1},$scope.insuranceTypeModal=!1,$scope.showInsuranceTypeModal=function(){$scope.insuranceTypeModal=!0},$scope.hideInsuranceTypeModal=function(){$scope.insuranceTypeModal=!1},$scope.hideRiderDetailsModal=function(){$scope.riderDetailsModal=!1,$scope.resetRiderSelection()},$scope.hideOdOnlyDetailsModal=function(){$scope.OdOnlyModal=!1,$scope.odOnlyPlan=!1,$scope.resetRiderSelection()},$scope.hideIDVModal=function(){$scope.toggleIDVChangeClose(),$scope.idvDetailsModal=!1},$scope.showPolicyTypeModal=function(){$scope.prevPolTypeModal=!0},$scope.hidePrevPolTypeModal=function(){$scope.prevPolTypeModal=!1},$scope.alterPrevPolType=function(){$scope.prevPolTypeDiv=!0},$scope.redirectToResult=function(){$scope.leadCreationUserInfo()},$scope.redirectToAPResult=function(){$scope.leadCreationUserInfo()},$scope.missionCompled=function(){$rootScope.loading=!1},$(".activateFooter").hide(),$(".activateHeader").hide()}]);