"use strict";angular.module("bikeInstantQuote",["CoreComponentApp","LocalStorageModule"]).controller("bikeInstantQuoteController",["$scope","$rootScope","$window","$filter","RestAPI","localStorageService","$timeout","$location","$interval","$http","$sce","$q","$anchorScroll",function($scope,$rootScope,$window,$filter,RestAPI,localStorageService,$timeout,$location,$interval,$http,$sce,$q,$anchorScroll){var bikeQuoteCookie,vehicleDetailsCookie,professionalBikeQuoteCookie;$scope.p365Labels=insBikeQuoteLables,$rootScope.loaderContent={businessLine:"2",header:"Bike Insurance",desc:$sce.trustAsHtml($scope.p365Labels.common.proverbInstantQuote)},$anchorScroll("home"),"/bike"==$location.path()?$rootScope.title=$scope.p365Labels.policies365Title.bikeInstantQuoteLanding:$rootScope.title=$scope.p365Labels.policies365Title.bikeInstantQuote,$scope.focusInput=!0,$rootScope.loading=!0,$rootScope.instantQuoteSummaryStatus=!0,$rootScope.disableLandingLeadBtn=!1,$scope.resetDisplayVehicle=!1;var professionalBikeParam=!1;$scope.quoteParam=defaultBikeQuoteParam.quoteParam,$scope.vehicleDetails=defaultBikeQuoteParam.vehicleDetails,$scope.vehicleInfo=defaultBikeQuoteParam.vehicleInfo,$rootScope.vehicleInfo=defaultBikeQuoteParam.vehicleInfo,$scope.BikePACoverDetails=defaultBikeQuoteParam.PACoverDetails,$scope.bikeQuoteRequestFormation=function(bikeQuoteRequestParam){$scope.quoteRequest={},$scope.quoteRequest.vehicleInfo={},$scope.quoteRequest.quoteParam={},$scope.quoteRequest.vehicleInfo.IDV=bikeQuoteRequestParam.vehicleInfo.IDV,$scope.quoteRequest.vehicleInfo.PreviousPolicyExpiryDate=bikeQuoteRequestParam.vehicleInfo.PreviousPolicyExpiryDate,$scope.quoteRequest.vehicleInfo.TPPolicyExpiryDate=bikeQuoteRequestParam.vehicleInfo.TPPolicyExpiryDate,$scope.quoteRequest.vehicleInfo.TPPolicyStartDate=bikeQuoteRequestParam.vehicleInfo.TPPolicyStartDate,$scope.quoteRequest.vehicleInfo.RTOCode=bikeQuoteRequestParam.vehicleInfo.RTOCode,$scope.quoteRequest.vehicleInfo.city=bikeQuoteRequestParam.vehicleInfo.city,bikeQuoteRequestParam.vehicleInfo.dateOfRegistration&&($scope.quoteRequest.vehicleInfo.dateOfRegistration=bikeQuoteRequestParam.vehicleInfo.dateOfRegistration),$scope.quoteRequest.vehicleInfo.idvOption=bikeQuoteRequestParam.vehicleInfo.idvOption,$scope.quoteRequest.vehicleInfo.best_quote_id=bikeQuoteRequestParam.vehicleInfo.best_quote_id,$scope.quoteRequest.vehicleInfo.previousClaim=bikeQuoteRequestParam.vehicleInfo.previousClaim,$scope.quoteRequest.vehicleInfo.registrationNumber=bikeQuoteRequestParam.vehicleInfo.registrationNumber,$scope.quoteRequest.vehicleInfo.registrationPlace=bikeQuoteRequestParam.vehicleInfo.registrationPlace,$scope.quoteRequest.vehicleInfo.state=bikeQuoteRequestParam.vehicleInfo.state,$scope.quoteRequest.vehicleInfo.make=bikeQuoteRequestParam.vehicleInfo.make,$scope.quoteRequest.vehicleInfo.model=bikeQuoteRequestParam.vehicleInfo.model,$scope.quoteRequest.vehicleInfo.variant=bikeQuoteRequestParam.vehicleInfo.variant.toString(),$scope.quoteRequest.quoteParam.ncb=bikeQuoteRequestParam.quoteParam.ncb,$scope.quoteRequest.quoteParam.ownedBy=bikeQuoteRequestParam.quoteParam.ownedBy,$scope.quoteRequest.quoteParam.policyType=bikeQuoteRequestParam.quoteParam.policyType,bikeQuoteRequestParam.quoteParam.riders&&($scope.quoteRequest.quoteParam.riders=bikeQuoteRequestParam.quoteParam.riders)},$scope.instantQuoteCalculation=function(addOnCoverList){addRidersToDefaultQuoteBike(addOnCoverList,localStorageService.get("selectedBusinessLineId"),function(defaultRiderList,defaultRiderArrayObject){$scope.quoteParam={},$scope.vehicleInfo={},$scope.vehicleDetails={},$rootScope.vehicleInfo={},$rootScope.vehicleDetails={},$scope.bikeInsuranceTypes=[],$scope.yearList=[],$scope.defaultMetroList=[];var bikeRegistrationDetails={};bikeQuoteCookie=localStorageService.get("bikeQuoteInputParamaters"),vehicleDetailsCookie=localStorageService.get("selectedBikeDetails"),$scope.defaultMetroList=localStorageService.get("defaultMetroCityList"),$scope.bikeInsuranceTypes=bikeInsuranceTypeGeneric,$scope.policyStatusList=policyStatusListGeneric,$scope.ncbList=ncbListGeneric,$scope.previousClaimStatus=previousClaimStatusGeneric,$rootScope.regNumStatus=!1,$rootScope.wordPressEnabled?($scope.instantQuoteBikeForm=!1,$rootScope.disableBikeRegPopup=!1):($scope.instantQuoteBikeForm=!0,$rootScope.disableBikeRegPopup=!0),$scope.defaultMetroList||($scope.defaultMetroList=commonResultLabels.popularRTOList.data,localStorageService.set("defaultMetroCityList",$scope.defaultMetroList)),$scope.callForLanding(),$scope.getRegPlaceListRTO=function(regNumber,registrationNumber){return regNumber.indexOf("-")>0&&(regNumber=regNumber.replace("-","")),$http.get(getServiceLink+$scope.p365Labels.documentType.RTODetails+"&q="+regNumber).then(function(callback){if((callback=JSON.parse(callback.data)).responseCode==$scope.p365Labels.responseCode.success){$rootScope.selectedBikeRegistrationObject=callback.data[0],$rootScope.vehicleDetails.registrationNumber=registrationNumber.trim(),$scope.vehicleInfo.registrationNumber=$rootScope.vehicleDetails.registrationNumber;var rtoDetail={};rtoDetail.rtoName=$rootScope.selectedBikeRegistrationObject.display,rtoDetail.rtoCity=$rootScope.selectedBikeRegistrationObject.city,rtoDetail.rtoState=$rootScope.selectedBikeRegistrationObject.state,rtoDetail.rtoObject=callback.data[0],rtoDetail.cityStatus=!0,rtoDetail.rtoStatus=!0,getPincodeFromCity($http,rtoDetail,function(resultedRTOInfo){var getCity;resultedRTOInfo.responseCode==$scope.p365Labels.responseCode.success?(rtoDetail.pincode=resultedRTOInfo.data[0].pincode,localStorageService.get("bikeRegAddress")?(localStorageService.get("bikeRegAddress").pincode=rtoDetail.pincode,localStorageService.get("bikeRegAddress").city=$rootScope.selectedBikeRegistrationObject.city,localStorageService.get("bikeRegAddress").state=$rootScope.selectedBikeRegistrationObject.state):((getCity={}).pincode=rtoDetail.pincode,getCity.city=$rootScope.selectedBikeRegistrationObject.city,getCity.state=$rootScope.selectedBikeRegistrationObject.state,localStorageService.set("bikeRegAddress",getCity))):($scope.pincode="",rtoDetail.pincode="",localStorageService.get("bikeRegAddress")?(localStorageService.get("bikeRegAddress").pincode=rtoDetail.pincode,localStorageService.get("bikeRegAddress").city=$rootScope.selectedBikeRegistrationObject.city,localStorageService.get("bikeRegAddress").state=$rootScope.selectedBikeRegistrationObject.state):((getCity={}).pincode=rtoDetail.pincode,getCity.city=$rootScope.selectedBikeRegistrationObject.city,getCity.state=$rootScope.selectedBikeRegistrationObject.state,localStorageService.set("bikeRegAddress",getCity)));$rootScope.vehicleInfo.registrationPlace=rtoDetail.rtoName}),$scope.bikeInstantQuoteForm.$setDirty()}else $rootScope.regNumStatus=!0})},$scope.getRegNumber=function(registrationNumber){if("undefined"!=String(registrationNumber)){var registrationDetails={};if(registrationNumber=registrationNumber.replace(/[^a-zA-Z0-9]/gi,""),$scope.vehicleDetails=localStorageService.get("selectedBikeDetails"),$scope.vehicleDetails.engineNumber="",$scope.vehicleDetails.chassisNumber="",$scope.vehicleDetails.isregNumberDisabled=!0,localStorageService.set("selectedBikeDetails",$scope.vehicleDetails),$rootScope.isChasisNumber=!1,$rootScope.isEngineNumber=!1,$rootScope.isregNumber=!1,registrationNumber.trim().match(/([a-zA-Z]{2}[0-9]{1,2}[a-zA-Z]{0,3}[0-9]{1,4})/g)&&registrationNumber.trim().length<=11&&registrationNumber.trim().length>4){$rootScope.regNumStatus=!1,$scope.fetchingBike=!0,$scope.vehicleDetails.insuranceType.type==$scope.bikeInsuranceTypes[1].type&&($scope.vehicleInfo.dateOfRegistration=makeObjectEmpty($scope.vehicleInfo.dateOfRegistration,"text")),$scope.selectedItem={},registrationDetails.registrationNumber=registrationNumber,localStorageService.set("bikeRegistrationDetails",registrationDetails);var request={};request.registrationNumber=registrationNumber.toUpperCase(),request.lob="bike",request.requestType="VEHICLERTOREQCONFIG",RestAPI.invoke($scope.p365Labels.transactionName.getVehicleRTODetails,request).then(function(callback){if(callback.responseCode==$scope.p365Labels.responseCode.success)if(callback.data){var vehicleRTODetails=callback.data;if($scope.vehicleDetails.insuranceType.type==$scope.bikeInsuranceTypes[1].type)if(vehicleRTODetails.registrationYear){var selectedRegYear=vehicleRTODetails.registrationYear;$scope.vehicleDetails.regYear=selectedRegYear.trim(),$scope.vehicleInfo.dateOfRegistration="01/07/"+$scope.vehicleDetails.regYear}else $scope.vehicleDetails.regYear="";vehicleRTODetails.vechileIdentificationNumber&&($scope.vehicleDetails.chassisNumber=vehicleRTODetails.vechileIdentificationNumber),vehicleRTODetails.engineNumber&&($scope.vehicleDetails.engineNumber=vehicleRTODetails.engineNumber),vehicleRTODetails.make&&vehicleRTODetails.model&&vehicleRTODetails.variant?($scope.vehicleInfo.make=vehicleRTODetails.make,$scope.vehicleInfo.model=vehicleRTODetails.model,$scope.vehicleInfo.variant=vehicleRTODetails.variant):($scope.vehicleInfo.make="",$scope.vehicleInfo.model="",$scope.vehicleInfo.variant=""),$scope.fetchingBike=!1;var regNumber=registrationNumber.trim().slice(0,2)+""+registrationNumber.trim().slice(2,4);$scope.getRegPlaceListRTO(regNumber,registrationNumber)}else{$scope.fetchingBike=!1,$scope.vehicleDetails.regYear="";regNumber=registrationNumber.trim().slice(0,2)+""+registrationNumber.trim().slice(2,4);$scope.getRegPlaceListRTO(regNumber,registrationNumber)}else{$scope.fetchingBike=!1,$scope.vehicleDetails.regYear="";regNumber=registrationNumber.trim().slice(0,2)+""+registrationNumber.trim().slice(2,4);$scope.getRegPlaceListRTO(regNumber,registrationNumber)}})}else $rootScope.regNumStatus=!0}else $rootScope.regNumStatus=!0},$scope.changePolStatus=function(){$scope.vehicleDetails.insuranceType.type==$scope.bikeInsuranceTypes[1].type?($scope.renewal=!0,$scope.vehicleInfo.PreviousPolicyExpiryDate=$scope.vehicleDetails.policyStatus.expiryDate):($scope.renewal=!1,$scope.vehicleInfo.PreviousPolicyExpiryDate=makeObjectEmpty($scope.vehicleInfo.PreviousPolicyExpiryDate,"text")),3==$scope.vehicleDetails.policyStatus.key?$scope.vehicleDetails.previousPolicyExpired="N":$scope.vehicleDetails.previousPolicyExpired="Y",$scope.vehicleInfo.TPPolicyExpiryDate=$scope.vehicleInfo.TPPolicyExpiryDate,$scope.vehicleInfo.TPPolicyStartDate=$scope.vehicleInfo.TPPolicyStartDate,$scope.vehicleInfo.ODPolicyExpiryDate=$scope.vehicleInfo.PreviousPolicyExpiryDate},$scope.alterRenewal=function(){$scope.vehicleDetails.insuranceType.type!=$scope.bikeInsuranceTypes[1].type?($scope.polStatus=!1,$scope.renewal=!1,$scope.yearList=listRegistrationYear($scope.vehicleDetails.insuranceType.value,$scope.vehicleDetails.maxVehicleAge),$scope.vehicleDetails.regYear=$scope.yearList[0]):($scope.polStatus=!0,$scope.renewal=!0,$scope.quoteParam.onlyODApplicable,$scope.yearList=listRegistrationYear($scope.vehicleDetails.insuranceType.value,$scope.vehicleDetails.maxVehicleAge)),$scope.quoteParam.policyType=$scope.vehicleDetails.insuranceType.value,$scope.changePolStatus()},$scope.updateAnnualPremiumRange=function(minPremiumValue,maxPremiumValue){minPremiumValue>maxPremiumValue?($rootScope.minAnnualPremium=maxPremiumValue,$rootScope.maxAnnualPremium=minPremiumValue):($rootScope.minAnnualPremium=minPremiumValue,$rootScope.maxAnnualPremium=maxPremiumValue)},$scope.errorMessage=function(errorMsg){!$scope.errorRespCounter||"undefined"!=String($rootScope.bikeQuoteResult)&&0!=$rootScope.bikeQuoteResult.length?$rootScope.bikeQuoteResult.length>0&&($rootScope.instantQuoteSummaryStatus=!0,$scope.instantQuoteBikeForm=!1,$rootScope.disableBikeRegPopup=!1,$rootScope.loading=!1):($scope.errorRespCounter=!1,$scope.updateAnnualPremiumRange(1e3,5e3),$rootScope.instantQuoteSummaryStatus=!1,$rootScope.instantQuoteSummaryError=errorMsg,$scope.instantQuoteBikeForm=!1,$rootScope.disableBikeRegPopup=!1,$rootScope.loading=!1)},$scope.tooltipPrepare=function(bikeResult){var riderCount=0;$rootScope.riderOptionList="<ul style='text-align: left;' class='tickpoints'>";for(var i=0;i<defaultRiderArrayObject.length;i++)"Y"==defaultRiderArrayObject[i].isEnable&&(riderCount+=1,$rootScope.riderOptionList+="<li>"+defaultRiderArrayObject[i].riderName+"</li>");$rootScope.riderOptionList+="</ul>";var resultCarrierId=[],testCarrierId=[];for(i=0;i<bikeResult.length;i++)if(Number(bikeResult[i].netPremium)>0){var carrierInfo={};"new"==bikeResult[i].policyType&&bikeResult[i].comprehensive?(carrierInfo.id=bikeResult[i].carrierId,carrierInfo.name=bikeResult[i].insuranceCompany,carrierInfo.annualPremium=bikeResult[i].netPremium,carrierInfo.claimsRating=bikeResult[i].insurerIndex,$rootScope.wordPressEnabled&&(carrierInfo.businessLineId="2",carrierInfo.insuredDeclareValue=bikeResult[i].insuredDeclareValue),0==p365Includes(testCarrierId,bikeResult[i].carrierId)&&(resultCarrierId.push(carrierInfo),testCarrierId.push(bikeResult[i].carrierId))):"renew"==bikeResult[i].policyType&&(carrierInfo.id=bikeResult[i].carrierId,carrierInfo.name=bikeResult[i].insuranceCompany,carrierInfo.annualPremium=bikeResult[i].netPremium,carrierInfo.claimsRating=bikeResult[i].insurerIndex,$rootScope.wordPressEnabled&&(carrierInfo.businessLineId="2",carrierInfo.insuredDeclareValue=bikeResult[i].insuredDeclareValue),0==p365Includes(testCarrierId,bikeResult[i].carrierId)&&(resultCarrierId.push(carrierInfo),testCarrierId.push(bikeResult[i].carrierId)))}for($rootScope.resultCarrierId=resultCarrierId,i=0;i<resultCarrierId.length;i++)$rootScope.quoteResultInsurerList+="<li>"+resultCarrierId[i].name+"</li>";$rootScope.quoteResultInsurerList+="</ul>",$rootScope.calculatedQuotesLength=2==String(bikeResult.length).length?String(bikeResult.length):"0"+String(bikeResult.length),$rootScope.calculatedRidersLength=2==String(riderCount).length?String(riderCount):"0"+String(riderCount),setTimeout(function(){scrollv=new scrollable({wrapperid:"scrollable-v",moveby:4,mousedrag:!0})},2e3)},$scope.ResponseChecker=function(){p365Includes($scope.responseCodeList,$scope.p365Labels.responseCode.success)&&($rootScope.loading=!1),$scope.responseCodeList.length==$rootScope.bikeQuoteRequest.length&&($rootScope.loading=!1,p365Includes($scope.responseCodeList,$scope.p365Labels.responseCode.success)||(p365Includes($scope.responseCodeList,$scope.p365Labels.responseCode.quoteNotAvailable)?$scope.errorMessage($scope.p365Labels.validationMessages.productNotFoundMsg):$scope.errorMessage($sce.trustAsHtml($scope.p365Labels.validationMessages.generalisedMotorErrMsg))))},$scope.processResult=function(){if($rootScope.bikeQuoteResult.length>0){$rootScope.enabledProgressLoader=!1,$rootScope.modalShown=!1,$scope.instantQuoteBikeForm=!1,$rootScope.disableBikeRegPopup=!1,$rootScope.loading=!1,$rootScope.campaignFlag=!0,$rootScope.bikeQuoteResult=$filter("orderBy")($rootScope.bikeQuoteResult,"grossPremium");for(var minAnnualPremiumValue=$rootScope.bikeQuoteResult[0].grossPremium,annualPremiumSliderArray=[],j=0;j<$rootScope.bikeQuoteResult.length;j++){var calculatedDiscAmt=0,discountAmtList=$rootScope.bikeQuoteResult[j].bikeDiscountDetails;if("undefined"!=String(discountAmtList)){for(var i=0;i<discountAmtList.length;i++)calculatedDiscAmt+=discountAmtList[i]["com.sutrr.quote.bikequotecalc.BikeDiscountDetails"].discountAmount;calculatedDiscAmt+=$rootScope.bikeQuoteResult[j].grossPremium,annualPremiumSliderArray.push(calculatedDiscAmt)}else annualPremiumSliderArray.push($rootScope.bikeQuoteResult[j].grossPremium)}annualPremiumSliderArray=$filter("orderBy")(annualPremiumSliderArray),$scope.updateAnnualPremiumRange(minAnnualPremiumValue,annualPremiumSliderArray[annualPremiumSliderArray.length-1]),2==localStorageService.get("selectedBusinessLineId")&&$scope.tooltipPrepare($rootScope.bikeQuoteResult)}},$scope.singleClickBikeQuote=function(){setTimeout(function(){if($scope.bikeInstantQuoteForm.$valid){if($scope.quote={},$rootScope.instantQuoteSummaryStatus=!0,$scope.errorRespCounter=!0,$scope.instantQuoteBikeForm=!0,$rootScope.disableBikeRegPopup=!0,$rootScope.loading=!0,$rootScope.quoteResultCount=0,null!=$rootScope.selectedBikeRegistrationObject||"undefined"!=String($rootScope.selectedBikeRegistrationObject))$scope.vehicleInfo.registrationPlace=$rootScope.selectedBikeRegistrationObject.display,$rootScope.vehicleInfo.registrationPlace=$rootScope.selectedBikeRegistrationObject.display,$scope.vehicleInfo.city=$rootScope.selectedBikeRegistrationObject.city,$scope.vehicleInfo.RTOCode=$rootScope.selectedBikeRegistrationObject.regisCode,$scope.vehicleInfo.state=$rootScope.selectedBikeRegistrationObject.state;else for(var vehicleCityName=null!=localStorageService.get("bikeRegAddress")?localStorageService.get("bikeRegAddress").city:"MUMBAI",i=0;i<$scope.defaultMetroList.length;i++)if($scope.defaultMetroList[i].cityName.toUpperCase()==vehicleCityName.toUpperCase())for(var j=0;j<$scope.defaultMetroList[i].RTODetails.length;j++){var selectedMetroDetails=$scope.defaultMetroList[i].RTODetails[j];if(selectedMetroDetails.display==$scope.vehicleInfo.registrationPlace){$scope.vehicleInfo.city=selectedMetroDetails.city,$scope.vehicleInfo.RTOCode=selectedMetroDetails.regisCode,$scope.vehicleInfo.state=selectedMetroDetails.state;break}}$scope.vehicleDetails.registrationNumber="undefined"!=String($rootScope.vehicleDetails.registrationNumber)?$rootScope.vehicleDetails.registrationNumber:$scope.vehicleDetails.registrationNumber,$scope.vehicleDetails.showBikeRegAreaStatus=$rootScope.showBikeRegAreaStatus,$scope.quoteParam.quoteType&&delete $scope.quoteParam.quoteType,$rootScope.showBikeRegAreaStatus?$scope.vehicleInfo.RTOCode=$scope.vehicleInfo.registrationPlace.substr(0,2).toUpperCase()+$scope.vehicleInfo.registrationPlace.substr(3,2).toUpperCase():$scope.vehicleInfo.RTOCode=$scope.vehicleDetails.registrationNumber.substr(0,4).toUpperCase();var todayDate=new Date;if($scope.quoteParam.policyType==$scope.bikeInsuranceTypes[0].value)$scope.vehicleInfo.dateOfRegistration=("0"+todayDate.getDate().toString()).substr(-2)+"/"+("0"+(Number(todayDate.getMonth())+1).toString()).substr(-2)+"/"+$scope.vehicleDetails.regYear,$scope.vehicleInfo.PreviousPolicyExpiryDate=makeObjectEmpty($scope.vehicleInfo.PreviousPolicyExpiryDate,"text");else todayDate.getFullYear()==$scope.vehicleDetails.regYear?$scope.vehicleInfo.dateOfRegistration="01/01/"+$scope.vehicleDetails.regYear:$scope.vehicleInfo.dateOfRegistration="01/07/"+$scope.vehicleDetails.regYear,convertStringFormatToDate($scope.vehicleInfo.PreviousPolicyExpiryDate,function(formattedPolicyExpiryDate){var tempPreviousPolicyExpiryDate=new Date(angular.copy(formattedPolicyExpiryDate)),tempCalcPrevPolStartDate=new Date(tempPreviousPolicyExpiryDate.setFullYear(new Date(tempPreviousPolicyExpiryDate).getFullYear()-1));(tempCalcPrevPolStartDate=new Date(new Date(String(tempCalcPrevPolStartDate)).setDate(new Date(String(tempCalcPrevPolStartDate)).getDate()+1))).setHours(0,0,0,0)<new Date($scope.vehicleInfo.dateOfRegistration).setHours(0,0,0,0)?$scope.vehicleDetails.PreviousPolicyStartDate=$scope.vehicleInfo.dateOfRegistration:convertDateFormatToString(tempCalcPrevPolStartDate,function(formattedPrevPolStartDate){$scope.vehicleDetails.PreviousPolicyStartDate=formattedPrevPolStartDate})});if(localStorageService.set("selectedBusinessLineId",2),$scope.vehicleDetails.manufacturingYear=$scope.vehicleDetails.regYear,"true"==$scope.vehicleInfo.previousClaim||$scope.vehicleDetails.policyStatus.key==$scope.policyStatusList[0].key||"new"==$scope.quoteParam.policyType||1==$scope.vehicleDetails.policyStatus.key?$scope.quoteParam.ncb=0:$scope.quoteParam.ncb=$scope.vehicleDetails.ncb.value,$scope.vehicleDetails.idvOption=1,$scope.vehicleInfo.IDV=0,delete $scope.vehicleInfo.best_quote_id,$scope.vehicleInfo.idvOption=$scope.vehicleDetails.idvOption,$scope.quote.quoteParam=$scope.quoteParam,$scope.quote.vehicleInfo=$scope.vehicleInfo,localStorageService.set("bikeQuoteInputParamaters",$scope.quote),localStorageService.set("selectedBikeDetails",$scope.vehicleDetails),localStorageService.get("professionalQuoteParams"))if(localStorageService.get("professionalQuoteParams").bikeInfo){var professionalQuoteCookie=localStorageService.get("professionalQuoteParams");professionalQuoteCookie.bikeInfo.registrationYear=$scope.vehicleDetails.regYear,professionalQuoteCookie.bikeInfo.make=$scope.vehicleInfo.make,professionalQuoteCookie.bikeInfo.model=$scope.vehicleInfo.model,professionalQuoteCookie.bikeInfo.variant=$scope.vehicleInfo.variant,localStorageService.set("professionalQuoteParams",professionalQuoteCookie)}else $scope.profQuoteCookie={},$scope.profQuoteCookie.bikeInfo={},$scope.profQuoteCookie.bikeInfo.registrationYear=$scope.vehicleDetails.regYear,$scope.profQuoteCookie.bikeInfo.make=$scope.vehicleInfo.make,$scope.profQuoteCookie.bikeInfo.model=$scope.vehicleInfo.model,$scope.profQuoteCookie.bikeInfo.variant=$scope.vehicleInfo.variant,localStorageService.set("professionalQuoteParams",$scope.profQuoteCookie);else $scope.profQuoteCookie={},$scope.profQuoteCookie.bikeInfo={},$scope.profQuoteCookie.bikeInfo.registrationYear=$scope.vehicleDetails.regYear,$scope.profQuoteCookie.bikeInfo.make=$scope.vehicleInfo.make,$scope.profQuoteCookie.bikeInfo.model=$scope.vehicleInfo.model,$scope.profQuoteCookie.bikeInfo.variant=$scope.vehicleInfo.variant,localStorageService.set("professionalQuoteParams",$scope.profQuoteCookie);$rootScope.idvOptionCopy=angular.copy($scope.vehicleInfo.idvOption),$scope.requestId=null;localStorageService.get("quoteUserInfo");localStorageService.get("PROF_QUOTE_ID"),$rootScope.bikeQuoteResult=[],$scope.bikeQuoteRequestFormation($scope.quote),RestAPI.invoke($scope.p365Labels.getRequest.quoteBike,$scope.quoteRequest).then(function(callback){$rootScope.bikeQuoteRequest=[],callback.responseCode==$scope.p365Labels.responseCode.success1?($scope.responseCodeList=[],$scope.requestId=callback.QUOTE_ID,$scope.UNIQUE_QUOTE_ID_ENCRYPTED=callback.encryptedQuoteId,localStorageService.set("BIKE_UNIQUE_QUOTE_ID",$scope.requestId),localStorageService.set("BIKE_UNIQUE_QUOTE_ID_ENCRYPTED",$scope.UNIQUE_QUOTE_ID_ENCRYPTED),localStorageService.set("bike_best_quote_id",$scope.requestId),$rootScope.bikeQuoteRequest=callback.data,"undefined"!=String($rootScope.bikeQuoteResult)&&$rootScope.bikeQuoteResult.length>0&&($rootScope.bikeQuoteResult.length=0),angular.forEach($rootScope.bikeQuoteRequest,function(obj,i){var request={},header={};header.messageId=messageIDVar,header.campaignID=campaignIDVar,header.source=sourceOrigin,header.transactionName=$scope.p365Labels.transactionName.bikeQuoteResult,header.deviceId=deviceIdOrigin,request.header=header,request.body=obj,$http({method:"POST",url:getQuoteCalcLink,data:request}).success(function(callback,status){var bikeQuoteResponse=JSON.parse(callback);if($rootScope.quoteResultCount+=1,bikeQuoteResponse.QUOTE_ID==$scope.requestId){if($scope.responseCodeList.push(bikeQuoteResponse.responseCode),bikeQuoteResponse.responseCode==$scope.p365Labels.responseCode.success1){for(i=0;i<$rootScope.bikeQuoteRequest.length;i++)$rootScope.bikeQuoteRequest[i].messageId==bikeQuoteResponse.messageId&&($rootScope.bikeQuoteResult.push(bikeQuoteResponse.data.quotes[0]),$rootScope.bikeQuoteRequest[i].status=1);$scope.processResult()}else for(i=0;i<$rootScope.bikeQuoteRequest.length;i++)$rootScope.bikeQuoteRequest[i].messageId==bikeQuoteResponse.messageId&&($rootScope.bikeQuoteRequest[i].status=2,$rootScope.bikeQuoteRequest[i].message=$sce.trustAsHtml($scope.p365Labels.validationMessages.generalisedMotorErrMsg));$scope.ResponseChecker()}}).error(function(data,status){$scope.responseCodeList.push($scope.p365Labels.responseCode.systemError)})}),$scope.$watch("responseCodeList",function(newValue,oldValue,scope){p365Includes($scope.responseCodeList,$scope.p365Labels.responseCode.success)&&($rootScope.loading=!1),$scope.responseCodeList.length==$rootScope.bikeQuoteRequest.length&&($rootScope.loading=!1,p365Includes($scope.responseCodeList,$scope.p365Labels.responseCode.success)||(p365Includes($scope.responseCodeList,$scope.p365Labels.responseCode.quoteNotAvailable)?$scope.errorMessage($scope.p365Labels.validationMessages.productNotFoundMsg):$scope.errorMessage($sce.trustAsHtml($scope.p365Labels.validationMessages.generalisedMotorErrMsg))))},!0)):($scope.responseCodeList=[],"undefined"!=String($rootScope.bikeQuoteResult)&&$rootScope.bikeQuoteResult.length>0&&($rootScope.bikeQuoteResult.length=0),$rootScope.bikeQuoteResult=[],$scope.errorMessage(callback.message))})}},100)},$scope.changeRegYear=function(){var urlPattern=$location.path();$rootScope.wordPressEnabled&&"/bike"!=urlPattern&&"/bikermz"!=urlPattern&&"/bikeeid"!=urlPattern&&"/mobibike"!=urlPattern&&"/bikemonsoon"!=urlPattern&&"/bikeindependence"!=urlPattern&&"/bike-insurance"!=urlPattern||$scope.singleClickBikeQuote()},$scope.prePopulateFields=function(){if(localStorageService.get("selectedBikeDetails")){if(localStorageService.get("selectedBikeDetails").policyStatus){var getPolicyStatus=localStorageService.get("selectedBikeDetails").policyStatus;for(i=0;i<$scope.policyStatusList.length;i++)if(getPolicyStatus.key==$scope.policyStatusList[i].key){$scope.vehicleDetails.policyStatus=$scope.policyStatusList[i];break}}else for(i=0;i<$scope.policyStatusList.length;i++)if($scope.vehicleDetails.policyStatusKey==$scope.policyStatusList[i].key){$scope.vehicleDetails.policyStatus=$scope.policyStatusList[i];break}}else for(var i=0;i<$scope.policyStatusList.length;i++)if($scope.vehicleDetails.policyStatusKey==$scope.policyStatusList[i].key){$scope.vehicleDetails.policyStatus=$scope.policyStatusList[i];break}for(i=0;i<$scope.bikeInsuranceTypes.length;i++)if($scope.quoteParam.policyType==$scope.bikeInsuranceTypes[i].value){$scope.vehicleDetails.insuranceType=$scope.bikeInsuranceTypes[i];break}for(i=0;i<$scope.ncbList.length;i++)if($scope.quoteParam.ncb==$scope.ncbList[i].value){$scope.vehicleDetails.ncb=$scope.ncbList[i];break}$scope.yearList=listRegistrationYear($scope.vehicleDetails.insuranceType.value,$scope.vehicleDetails.maxVehicleAge),$scope.alterRenewal();var bikeRegistrationDetails=localStorageService.get("bikeRegistrationDetails");bikeRegistrationDetails&&"undefined"!=String(bikeRegistrationDetails.registrationNumber)&&null!=bikeRegistrationDetails.registrationNumber&&($rootScope.vehicleDetails.registrationNumber=bikeRegistrationDetails.registrationNumber)},$scope.fetchDefaultInputParamaters=function(defaultQuoteStatus,defaultInputParamCallback){if($scope.renewal=!1,$scope.polStatus=!1,defaultQuoteStatus){if($scope.quoteParam=defaultBikeQuoteParam.quoteParam,$scope.vehicleDetails=defaultBikeQuoteParam.vehicleDetails,$scope.vehicleInfo=defaultBikeQuoteParam.vehicleInfo,$rootScope.vehicleInfo=defaultBikeQuoteParam.vehicleInfo,wordPressEnabled){$rootScope.disableBikeRegPopup=!1,$scope.quote={};for(var i=0;i<$scope.policyStatusList.length;i++)if($scope.vehicleDetails.policyStatusKey==$scope.policyStatusList[i].key){$scope.vehicleDetails.policyStatus=$scope.policyStatusList[i];break}professionalBikeParam&&($scope.vehicleDetails.regYear=professionalBikeQuoteCookie.registrationYear,$scope.vehicleInfo.make=professionalBikeQuoteCookie.make,$scope.vehicleInfo.model=professionalBikeQuoteCookie.model,$scope.vehicleInfo.variant=professionalBikeQuoteCookie.variant),$scope.quote.vehicleInfo=$scope.vehicleInfo,$scope.quote.quoteParam=$scope.quoteParam,localStorageService.set("selectedBusinessLineId",2),localStorageService.set("selectedBikeDetails",$scope.vehicleDetails)}}else console.log("in else part of fetch default input parameters"),bikeQuoteCookie.quoteParam&&($scope.quoteParam=bikeQuoteCookie.quoteParam),$scope.vehicleDetails=vehicleDetailsCookie,$scope.vehicleInfo=bikeQuoteCookie.vehicleInfo,$scope.quoteParam.riders=[],vehicleDetailsCookie&&($rootScope.showBikeRegAreaStatus=vehicleDetailsCookie.showBikeRegAreaStatus),$rootScope.vehicleDetails.registrationNumber=bikeRegistrationDetails.registrationNumber;localStorageService.get("selectedBikeDetails")&&($scope.vehicleDetails=localStorageService.get("selectedBikeDetails")),professionalBikeParam&&($scope.vehicleDetails.regYear=professionalBikeQuoteCookie.registrationYear,professionalBikeQuoteCookie.registrationPlace&&($rootScope.vehicleInfo.registrationPlace=professionalBikeQuoteCookie.registrationPlace,$scope.vehicleInfo.registrationPlace=professionalBikeQuoteCookie.registrationPlace),$scope.vehicleInfo.make=professionalBikeQuoteCookie.make,$scope.vehicleInfo.model=professionalBikeQuoteCookie.model,$scope.vehicleInfo.variant=professionalBikeQuoteCookie.variant),$scope.prePopulateFields(),defaultInputParamCallback()},bikeQuoteCookie?$scope.fetchDefaultInputParamaters(!1,function(){}):$scope.fetchDefaultInputParamaters(!0,function(){}),$scope.$on("callSingleClickBikeQuote",function(){$scope.singleClickBikeQuote()})})},$scope.callForLanding=function(){var selectedMake="";$rootScope.Regpopup=!1,$scope.bikeDisplayNames=localStorageService.get("bikeMakeListDisplay"),localStorageService.get("selectedBikeDetails")?$scope.vehicleDetails=localStorageService.get("selectedBikeDetails"):$scope.vehicleDetails=defaultBikeQuoteParam.vehicleDetails,localStorageService.get("professionalQuoteParams")&&(localStorageService.get("professionalQuoteParams").bikeInfo&&(professionalBikeParam=!0),professionalBikeQuoteCookie=localStorageService.get("professionalQuoteParams").bikeInfo),bikeQuoteCookie?(professionalBikeParam?($scope.vehicleInfo.make=professionalBikeQuoteCookie.make,$scope.vehicleInfo.model=professionalBikeQuoteCookie.model,$scope.vehicleInfo.variant=professionalBikeQuoteCookie.variant):($scope.vehicleInfo.make=bikeQuoteCookie.vehicleInfo.make,$scope.vehicleInfo.model=bikeQuoteCookie.vehicleInfo.model,$scope.vehicleInfo.variant=bikeQuoteCookie.vehicleInfo.variant),selectedMake=$scope.vehicleInfo.make,$scope.vehicleInfo.model,$scope.bikeModelList=[],console.log("$scope.bikeDisplayNames are: ",$scope.bikeDisplayNames),angular.forEach($scope.bikeDisplayNames,function(value){value.make==selectedMake&&$scope.bikeModelList.push(value.model)}),$scope.bikeVariantList=[],angular.forEach($scope.bikeDisplayNames,function(value){value.make==$scope.vehicleInfo.make&&value.model==$scope.vehicleInfo.model&&-1==$scope.bikeVariantList.indexOf(value.variant)&&$scope.bikeVariantList.push(value.variant)}),setTimeout(function(){professionalBikeParam?($scope.vehicleInfo.make=professionalBikeQuoteCookie.make,$scope.vehicleInfo.model=professionalBikeQuoteCookie.model,$scope.vehicleInfo.variant=professionalBikeQuoteCookie.variant):($scope.vehicleInfo.make=bikeQuoteCookie.vehicleInfo.make,$scope.vehicleInfo.model=bikeQuoteCookie.vehicleInfo.model,$scope.vehicleInfo.variant=bikeQuoteCookie.vehicleInfo.variant),selectedMake=$scope.vehicleInfo.make,$scope.vehicleInfo.model,$scope.bikeModelList=[],angular.forEach($scope.bikeDisplayNames,function(value){value.make==selectedMake&&$scope.bikeModelList.push(value.model)}),$scope.bikeVariantList=[],angular.forEach($scope.bikeDisplayNames,function(value){value.make==$scope.vehicleInfo.make&&value.model==$scope.vehicleInfo.model&&-1==$scope.bikeVariantList.indexOf(value.variant)&&$scope.bikeVariantList.push(value.variant)})},100)):setTimeout(function(){$scope.vehicleInfo.make="Hero MotoCorp",$scope.vehicleInfo.model="Duet",$scope.vehicleInfo.variant="VX",console.log("$scope.vehicleInfo in else part of callForLanidng function :",$scope.vehicleInfo),selectedMake=$scope.vehicleInfo.make,$scope.vehicleInfo.model,$scope.bikeModelList=[],angular.forEach($scope.bikeDisplayNames,function(value){value.make==selectedMake&&$scope.bikeModelList.push(value.model)}),$scope.bikeVariantList=[],angular.forEach($scope.bikeDisplayNames,function(value){value.make==$scope.vehicleInfo.make&&value.model==$scope.vehicleInfo.model&&-1==$scope.bikeVariantList.indexOf(value.variant)&&$scope.bikeVariantList.push(value.variant)})},100),$scope.searchText=null,$scope.searchText1=null,$scope.searchText2=null,$scope.querySearch=function(query){var filteredVehicle=[];return angular.forEach($scope.bikeDisplayNames,function(value){filteredVehicle.length<=40&&($scope.selectedVehicle=value.make,value.make.toLowerCase().includes(query.toLowerCase())&&(console.log("filtered vehicle is : ",filteredVehicle),-1==filteredVehicle.indexOf(value.make)&&filteredVehicle.push(value.make)))}),filteredVehicle},$scope.modelSearch=function(query){var filteredModel=[];return angular.forEach($scope.bikeModelList,function(model){filteredModel.length<=40&&($scope.selectedVehicle=model,model.toLowerCase().includes(query.toLowerCase())&&-1==filteredModel.indexOf(model)&&filteredModel.push(model))}),filteredModel},$scope.variantSearch=function(query){console.log("query in modelsearch is: ",query);var filteredVariant=[];return angular.forEach($scope.bikeVariantList,function(variant){filteredVariant.length<=40&&variant.toLowerCase().includes(query.toLowerCase())&&-1==filteredVariant.indexOf(variant)&&filteredVariant.push(variant)}),filteredVariant}},$scope.selectedDisplayVehicle=function(selectedMake1){selectedMake1&&($scope.bikeModelList=[],angular.forEach($scope.bikeDisplayNames,function(value){value.make==$scope.vehicleInfo.make&&$scope.bikeModelList.push(value.model)}),console.log("$scope.bikeModelList is: ",$scope.bikeModelList),$scope.resetDisplayVehicle&&($scope.vehicleInfo.model="",$scope.vehicleInfo.variant=""))},$scope.selectedDisplayModel=function(selectedModel1){selectedModel1&&($scope.bikeVariantList=[],$scope.resetDisplayVehicle&&($scope.vehicleInfo.variant=""),angular.forEach($scope.bikeDisplayNames,function(value){-1==$scope.bikeVariantList.indexOf(value.variant)&&value.make==$scope.vehicleInfo.make&&value.model==$scope.vehicleInfo.model&&$scope.bikeVariantList.push(value.variant)}),console.log("$scope.bikeVariantList is: ",$scope.bikeVariantList))},$scope.selectedDisplayVariant=function(selectedVariant1){selectedVariant1&&($scope.resetDisplayVehicle=!0),console.log("$scope.resetDisplayVehicle in selectedDisplayVariant function step 1 is :",$scope.resetDisplayVehicle)},$rootScope.openRegPopup=function(){$scope.vehicleDetails.insuranceType={type:"Insure New Bike",value:"new"},$scope.alterRenewal(),$rootScope.Regpopup=!0},$scope.closePop=function(){$scope.disabledRedirectToResult&&($scope.disabledRedirectToResult=!1),$rootScope.Regpopup=!1},localStorageService.get("ridersBikeStatus")?$scope.instantQuoteCalculation(localStorageService.get("addOnCoverListForBike")):getRiderList(RestAPI,$scope.p365Labels.documentType.riderList,$scope.p365Labels.documentType.bike,$scope.p365Labels.request.findAppConfig,function(addOnCoverList){localStorageService.set("addOnCoverListForBike",addOnCoverList),localStorageService.set("ridersBikeStatus",!0),getListFromDB(RestAPI,"","BikeVariants",$scope.p365Labels.request.findAppConfig,function(callbackCar5){callbackCar5.responseCode==$scope.p365Labels.responseCode.success&&(localStorageService.set("bikeMakeListDisplay",callbackCar5.data),$scope.instantQuoteCalculation(addOnCoverList))})}),$scope.backToProfessionalJourney=function(){$location.path("/professionalJourney")}}]);var jsonEncodeCarrierList=[];angular.module("bikeResult",["CoreComponentApp","LocalStorageModule","checklist-model","ngMessages"]).controller("bikeResultController",["$scope","$rootScope","$location","$filter","$http","RestAPI","localStorageService","$timeout","$interval","$sce","$q",function($scope,$rootScope,$location,$filter,$http,RestAPI,localStorageService,$timeout,$interval,$sce,$q){$scope.EmailChoices=[{username:"",addNew:!0,paramMap:{docId:"",LOB:localStorageService.get("selectedBusinessLineId").toString(),userId:"",selectedPolicyType:"",make:"",model:"",registrationNum:"",Variant:""}}];var applicationLabels=localStorageService.get("applicationLabels"),sharePDFQuote={};$scope.globalLabel=applicationLabels.globalLabels,$scope.p365Labels=insBikeQuoteLables,$scope.focusInput=!0,$sce.polTypeChanged=!1,$rootScope.loading=!0,$scope.BikePACoverDetails={},$scope.BikePACoverDetails.isPACoverApplicable=!1,$scope.resetDisplayVehicle=!1,$scope.odOnlyPlan=!1,$scope.quoteUserInfo={},$scope.quoteUserInfo.messageId="",$scope.quoteUserInfo.termsCondition=!0,$scope.bikePremiumTemplate=wp_path+"buy/common/html/bikePremiumTemplate.html",$scope.buyOptionDisabled=!1,$rootScope.wordPressEnabled?$scope.rippleColor="":$scope.rippleColor="#f8a201",$scope.bikeInputSectionHTML=wp_path+"buy/bike/html/BikeInputSection.html",$scope.bikeRiderSectionHTML=wp_path+"buy/bike/html/BikeRiderSection.html",$scope.bikeIDVSectionHTML=wp_path+"buy/bike/html/BikeIDVSection.html",$scope.bikeShareEmailSectionHTML=wp_path+"buy/bike/html/BikeShareEmailSection.html",$scope.bikeInsuranceTypeSectionHTML=wp_path+"buy/bike/html/BikeInsuranceTypeSection.html",$scope.bikePACoverSectionHTML=wp_path+"buy/bike/html/BikePACoverSection.html",$scope.vehicalOwnerTypeSectionHTML=wp_path+"buy/bike/html/VehicalOwnerTypeSection.html","/PBBikeResult"==$location.path()&&($scope.PBBikeInputSection=wp_path+"buy/common/html/PBHTML/PBBikeInputSection.html",$scope.PBBikeRidersSection=wp_path+"buy/common/html/PBHTML/PBBikeRidersSection.html",$scope.PBBikeBestResultSection=wp_path+"buy/common/html/PBHTML/PBBikeBestResultSection.html",$scope.inputSectionEnabled=!0,$scope.ridersSectionEnabled=!1,$scope.resultSectionEnabled=!1,$scope.PACoverDeclaration=!1,$scope.commonInfo=localStorageService.get("professionalQuoteParams").commonInfo),$rootScope.title=$scope.p365Labels.policies365Title.bikeResultQuote;var bikeQuoteCookie=localStorageService.get("bikeQuoteInputParamaters");localStorageService.get("BIKE_UNIQUE_QUOTE_ID_ENCRYPTED");if(localStorageService.get("PROF_QUOTE_ID_ENCRYPTED")&&($scope.UNIQUE_PROF_QUOTE_ID_ENCRYPTED=localStorageService.get("PROF_QUOTE_ID_ENCRYPTED")),$scope.bikeInputSection=!1,$scope.idvInputSection=!1,$scope.riderInputSection=!1,$scope.bikeInsuranceInputSection=!1,$scope.ownerInputSection=!1,localStorage.getItem("quoteUserInfo")){const quoteUserInfo=JSON.parse(localStorage.getItem("quoteUserInfo"));console.log("quoteUserInfo in agency car result is::",quoteUserInfo),quoteUserInfo&&($scope.quoteUserInfo=quoteUserInfo,localStorageService.set("quoteUserInfo",$scope.quoteUserInfo))}if($location.search().messageId){if(console.log("imauticAutomation in agency is: ",imauticAutomation),1==imauticAutomation)if(console.log("$location.search().source  in agency is: ",$location.search().source),$location.search().source)if("ramp"==$location.search().source){var docId="LeadProfile-"+$location.search().messageId;getDocUsingIdTransDB(RestAPI,docId,function(callback){if(console.log("response for lead document is :::",callback),callback){var quoteUserInfo={};callback.LeadDetails?(callback.LeadDetails.lastActivity.contactInfo.firstName&&(quoteUserInfo.firstName=callback.LeadDetails.lastActivity.contactInfo.firstName),callback.LeadDetails.lastActivity.contactInfo.lastName&&(quoteUserInfo.lastName=callback.LeadDetails.lastActivity.contactInfo.lastName),callback.LeadDetails.lastActivity.contactInfo.emailId&&(quoteUserInfo.emailId=callback.LeadDetails.lastActivity.contactInfo.emailId),callback.LeadDetails.lastActivity.contactInfo.mobileNumber&&(quoteUserInfo.mobileNumber=callback.LeadDetails.lastActivity.contactInfo.mobileNumber),quoteUserInfo.termsCondition=!0,quoteUserInfo.createLeadStatus=!1,console.log("quote user info is: ",quoteUserInfo),localStorageService.set("quoteUserInfo",quoteUserInfo),imatBikeLeadQuoteInfo(localStorageService,$scope,"LeadSubmitted")):(imatBikeLeadQuoteInfo(localStorageService,$scope,"LeadSubmitted"),console.log("unable to read data from quote id"))}else imatBikeLeadQuoteInfo(localStorageService,$scope,"LeadSubmitted")})}else imatBikeLeadQuoteInfo(localStorageService,$scope,"LeadSubmitted");else console.log("no source found creating lead using imat"),imatBikeLeadQuoteInfo(localStorageService,$scope,"LeadSubmitted")}else($rootScope.agencyPortalEnabled||pospEnabled)&&imatBikeLeadQuoteInfo(localStorageService,$scope,"LeadSubmitted");if($rootScope.baseEnvEnabled&&!$rootScope.wordPressEnabled){if($location.search().messageId&&(messageIDVar=$location.search().messageId),"undefined"!=String($location.search().leaddetails)){var leaddetails=JSON.parse($location.search().leaddetails);leaddetails.messageId||(leaddetails.messageId=$location.search().messageId),localStorageService.set("quoteUserInfo",leaddetails)}$scope.bikeInputSection=!0,$scope.idvInputSection=!0,$scope.riderInputSection=!0,$scope.bikeInsuranceInputSection=!0,$scope.ownerInputSection=!0}$scope.bikeQuoteRequestFormation=function(bikeQuoteRequestParam){$scope.quoteRequest={},$scope.quoteRequest.vehicleInfo={},$scope.quoteRequest.quoteParam={},$scope.quoteRequest.vehicleInfo.IDV=bikeQuoteRequestParam.vehicleInfo.IDV,$scope.quoteRequest.vehicleInfo.PreviousPolicyExpiryDate=bikeQuoteRequestParam.vehicleInfo.PreviousPolicyExpiryDate,$scope.quoteRequest.vehicleInfo.TPPolicyExpiryDate=bikeQuoteRequestParam.vehicleInfo.TPPolicyExpiryDate,$scope.quoteRequest.vehicleInfo.TPPolicyStartDate=bikeQuoteRequestParam.vehicleInfo.TPPolicyStartDate,$scope.quoteRequest.vehicleInfo.RTOCode=bikeQuoteRequestParam.vehicleInfo.RTOCode,$scope.quoteRequest.vehicleInfo.city=bikeQuoteRequestParam.vehicleInfo.city,bikeQuoteRequestParam.vehicleInfo.dateOfRegistration&&($scope.quoteRequest.vehicleInfo.dateOfRegistration=bikeQuoteRequestParam.vehicleInfo.dateOfRegistration),$scope.quoteRequest.vehicleInfo.idvOption=bikeQuoteRequestParam.vehicleInfo.idvOption,$scope.quoteRequest.vehicleInfo.best_quote_id=bikeQuoteRequestParam.vehicleInfo.best_quote_id,$scope.quoteRequest.vehicleInfo.previousClaim=bikeQuoteRequestParam.vehicleInfo.previousClaim,$scope.quoteRequest.vehicleInfo.registrationNumber=bikeQuoteRequestParam.vehicleInfo.registrationNumber,$scope.quoteRequest.vehicleInfo.registrationPlace=bikeQuoteRequestParam.vehicleInfo.registrationPlace,$scope.quoteRequest.vehicleInfo.state=bikeQuoteRequestParam.vehicleInfo.state,$scope.quoteRequest.vehicleInfo.make=bikeQuoteRequestParam.vehicleInfo.make,$scope.quoteRequest.vehicleInfo.model=bikeQuoteRequestParam.vehicleInfo.model,$scope.quoteRequest.vehicleInfo.variant=bikeQuoteRequestParam.vehicleInfo.variant.toString(),$scope.quoteRequest.quoteParam.ncb=bikeQuoteRequestParam.quoteParam.ncb,$scope.quoteRequest.quoteParam.ownedBy=bikeQuoteRequestParam.quoteParam.ownedBy,$scope.quoteRequest.quoteParam.policyType=bikeQuoteRequestParam.quoteParam.policyType,bikeQuoteRequestParam.quoteParam.riders&&($scope.quoteRequest.quoteParam.riders=bikeQuoteRequestParam.quoteParam.riders)},$scope.showVehicleDetails=function(){$scope.bikeInputSection=!$scope.bikeInputSection},$scope.showRiderDetails=function(){$scope.riderInputSection=!$scope.riderInputSection},$scope.showIDVDetails=function(){$scope.idvInputSection=!$scope.idvInputSection},$scope.showInsuranceDetails=function(){$scope.bikeInsuranceInputSection=!$scope.bikeInsuranceInputSection},$scope.showOwnerDetails=function(){$scope.ownerInputSection=!$scope.ownerInputSection},$scope.ownDamageYears=bikeOwnDamageYears,$scope.personalAccidentYears=bikePersonalAccidentYears,$scope.thirdPartyDamageCoveredYears=bikeThirdPartyDamageCoveredYears,$rootScope.personalAccidentValidity=[1,5],$rootScope.ownDamageValidity=[1,5],$rootScope.thirdPartyDamageValidity=[5],$scope.KotakDeclarationForPACover=KotakDeclarationForPACover,$scope.idvOptions=IDVOptionsGen,$scope.carrierVariantList=[];var variantList=[],resultCnfrmBuyFlag=!1,buyConfrmFlag=!1;$rootScope.bikeQuoteRequest&&$rootScope.bikeQuoteRequest.length==$rootScope.quoteResultCount&&$rootScope.bikeQuoteResult&&0==$rootScope.bikeQuoteResult.length&&($scope.noQuoteResultFound=!0,$rootScope.bikeQuoteRequest=[],$rootScope.bikeQuoteRequest.push({status:2,message:$sce.trustAsHtml($scope.p365Labels.validationMessages.generalisedMotorErrMsg)})),$scope.init=function(){$rootScope.loading=!1,$rootScope.quoteParam={},$scope.bikeInsuranceTypes=[],$scope.yearList=[],$scope.defaultMetroList=[],$rootScope.vehicleInfo={},$rootScope.vehicleDetails={},$scope.quote={},$scope.selectedAddOnCovers=[],$scope.insuranceCompanyList={},$scope.insuranceCompanyList.selectedInsuranceCompany=[],$rootScope.bikeAddOnCoversList={},$rootScope.bikeAddOnCoversList.selectedAddOnCovers=[],$scope.selectPremiumFromResult={},$scope.emailInputParameters={},$scope.emailInputParameters.paramMap={},$scope.selectedCarrier=[];var professionalQuoteBikeCookie;$scope.userIDVError=!1,$scope.basicExpanded=!1,$scope.savingsExpanded=!1,$scope.ridersExpanded=!1,$scope.idvDetailsModal=!1,$scope.riderDetailsModal=!1,$scope.OdOnlyModal=!1,$scope.showCarrierVehicleVariants=!1,$scope.displayLoader=!1,$scope.noCarrierVariantFound=!1,$scope.passengerCoverSAList=bikePassengerCoverSAList,$scope.toggleBasicExpanded=function(){$scope.basicExpanded=!$scope.basicExpanded},$scope.toggleSavingsExpanded=function(){$scope.savingsExpanded=!$scope.savingsExpanded},$scope.toggleRidersExpanded=function(){$scope.ridersExpanded=!$scope.ridersExpanded},$scope.individualClick=function(getOwner){$scope.ownerTypeModal=!1,$scope.quoteBikeInputForm.$dirty=!0,$scope.vehicleInfo.IDV=0,$scope.singleClickBikeQuote()},$scope.ownerChanged=function(_ownedBy){$scope.vehicleInfo.IDV=0,$scope.quoteParam.ownedBy=_ownedBy?"Organization":"Individual"},$scope.backToResultScreen=function(){$rootScope.isProfessionalJourneySelected?$location.path("/professionalJourneyResult"):$location.path("/PBQuote")},$scope.backToQuotes=function(){$location.path("/professionalJourneyResult")},$scope.confirmInput=function(){$scope.inputSectionEnabled=!1,$scope.resultSectionEnabled=!1,$scope.ridersSectionEnabled=!0},$scope.showEditInputSection=function(){$scope.inputSectionEnabled=!0,$scope.resultSectionEnabled=!1,$scope.ridersSectionEnabled=!1},$scope.backToRiderSection=function(){$scope.inputSectionEnabled=!1,$scope.resultSectionEnabled=!1,$scope.ridersSectionEnabled=!0},$scope.quoteParam=localStorageService.get("bikeQuoteInputParamaters").quoteParam,$scope.vehicleInfo=localStorageService.get("bikeQuoteInputParamaters").vehicleInfo,$scope.vehicleDetails.displayVehicle&&($scope.vehicleDisplayName=$scope.vehicleInfo.vehicleDetails),$scope.vehicleInfo.IDV>0&&($scope.showIDVPopUp=!0);var professionalBikeParam=!1;if(localStorageService.get("professionalQuoteParams")&&localStorageService.get("professionalQuoteParams").bikeInfo&&(professionalBikeParam=!0,professionalQuoteBikeCookie=localStorageService.get("professionalQuoteParams").bikeInfo),professionalBikeParam&&(professionalQuoteBikeCookie.registrationPlace?$scope.vehicleInfo.registrationPlace=professionalQuoteBikeCookie.registrationPlace:professionalQuoteBikeCookie.registrationNumber&&($scope.vehicleInfo.registrationNumber=professionalQuoteBikeCookie.registrationNumber),$scope.vehicleDetails.regYear=professionalQuoteBikeCookie.registrationYear),"renew"==$scope.quoteParam.policyType&&$scope.vehicleDetails.regYear&&(parseInt($scope.vehicleDetails.regYear)<2018?$scope.showBundle=!1:$scope.showBundle=!0),$scope.vehicleDetails=localStorageService.get("selectedBikeDetails"),$rootScope.showBikeRegAreaStatus=$scope.vehicleDetails.showBikeRegAreaStatus,$rootScope.vehicleDetails.registrationNumber=$scope.vehicleDetails.registrationNumber,$scope.addOnCovers=localStorageService.get("addOnCoverListForBike"),$rootScope.bikeAddOnCoversList.selectedAddOnCovers=[],$scope.quoteParam.riders){console.log("$scope.addOnCovers is step 1: ",$scope.addOnCovers);for(var i=0;i<$scope.addOnCovers.length;i++)for(var j=0;j<$scope.quoteParam.riders.length;j++)if($scope.addOnCovers[i].riderId==$scope.quoteParam.riders[j].riderId){11!=$scope.addOnCovers[i].riderId&&15!=$scope.addOnCovers[i].riderId&&($scope.addOnCovers[i].riderAmount=$scope.quoteParam.riders[j].riderAmount),$rootScope.bikeAddOnCoversList.selectedAddOnCovers.push($scope.addOnCovers[i]);break}console.log("$rootScope.bikeAddOnCoversList.selectedAddOnCovers step 1",$rootScope.bikeAddOnCoversList.selectedAddOnCovers),localStorageService.set("addOnCoverListForBike",$scope.addOnCovers)}for(i=0;i<$scope.quoteParam.riders.length;i++)if(10==$scope.quoteParam.riders[i].riderId){$scope.BikePACoverDetails={},console.log("inside pacover if............ :"),$scope.BikePACoverDetails.isPACoverApplicable=!0,$scope.PACoverModal=!1,$scope.PACoverFlag=1;break}$scope.PACoverAddon=function(){$scope.tempVar={},$scope.tempVar.riderId=10,$scope.tempVar.riderName="Personal Accident Cover",$scope.quoteParam.riders&&$scope.quoteParam.riders.push($scope.tempVar),console.log("inside PACoverAddon",$scope.quoteParam.riders)},$scope.bikePopupIntegerMap=function(tempBikeQuoteResult){for(var i=0;i<tempBikeQuoteResult.length;i++){tempBikeQuoteResult[i].netPremiumMean&&(tempBikeQuoteResult[i].netPremiumMean=Number(tempBikeQuoteResult[i].netPremiumMean)),tempBikeQuoteResult[i].proffesionalRating&&(tempBikeQuoteResult[i].proffesionalRating=Number(tempBikeQuoteResult[i].proffesionalRating)),tempBikeQuoteResult[i].premiumRatio&&(tempBikeQuoteResult[i].premiumRatio=Number(tempBikeQuoteResult[i].premiumRatio)),tempBikeQuoteResult[i].claimIndex&&(tempBikeQuoteResult[i].claimIndex=Number(tempBikeQuoteResult[i].claimIndex)),tempBikeQuoteResult[i].insurerIndex&&(tempBikeQuoteResult[i].insurerIndex=Number(tempBikeQuoteResult[i].insurerIndex)),tempBikeQuoteResult[i].basicCoverage&&(tempBikeQuoteResult[i].basicCoverage=Number(tempBikeQuoteResult[i].basicCoverage)),tempBikeQuoteResult[i].netPremiumMax&&(tempBikeQuoteResult[i].netPremiumMax=Number(tempBikeQuoteResult[i].netPremiumMax)),tempBikeQuoteResult[i].grossPremium&&(tempBikeQuoteResult[i].grossPremium=Number(tempBikeQuoteResult[i].grossPremium)),tempBikeQuoteResult[i].ncbPercentage&&(tempBikeQuoteResult[i].ncbPercentage=Number(tempBikeQuoteResult[i].ncbPercentage)),tempBikeQuoteResult[i].netPremium&&(tempBikeQuoteResult[i].netPremium=Math.floor(Number(tempBikeQuoteResult[i].netPremium))),tempBikeQuoteResult[i].totalDiscountAmount&&(tempBikeQuoteResult[i].totalDiscountAmount=Number(tempBikeQuoteResult[i].totalDiscountAmount)),tempBikeQuoteResult[i].totalRiderAmount&&(tempBikeQuoteResult[i].totalRiderAmount=Number(tempBikeQuoteResult[i].totalRiderAmount)),tempBikeQuoteResult[i].paidDriverCover?tempBikeQuoteResult[i].paidDriverCover=Number(tempBikeQuoteResult[i].paidDriverCover):tempBikeQuoteResult[i].paidDriverCover=0;for(var j=0;j<tempBikeQuoteResult[i].discountList.length;j++)tempBikeQuoteResult[i].discountList[j].discountAmount&&(tempBikeQuoteResult[i].discountList[j].discountAmount=Number(tempBikeQuoteResult[i].discountList[j].discountAmount));tempBikeQuoteResult[i].maxIdvValue=Number(tempBikeQuoteResult[i].maxIdvValue),tempBikeQuoteResult[i].minIdvValue=Number(tempBikeQuoteResult[i].minIdvValue),tempBikeQuoteResult[i].insuredDeclareValue=Number(tempBikeQuoteResult[i].insuredDeclareValue),tempBikeQuoteResult[i].serviceTax=Number(tempBikeQuoteResult[i].serviceTax),tempBikeQuoteResult[i].odpremium=Number(tempBikeQuoteResult[i].odpremium),tempBikeQuoteResult[i].tppremium=Number(tempBikeQuoteResult[i].tppremium)}return tempBikeQuoteResult},localStorageService.get("bikeQuoteInputParamaters").quoteParam.riders&&($scope.selectedAddOn=localStorageService.get("bikeQuoteInputParamaters").quoteParam.riders.length),console.log("$scope.vehicleDetails.regYear is : ",$scope.vehicleDetails.regYear),$scope.manufacturingYearList=listManufactureYear($scope.vehicleDetails.regYear,2),console.log("$scope.manufacturingYearList is ",$scope.manufacturingYearList),$scope.vehicleDetails.manufacturingYear=$scope.manufacturingYearList[0],$scope.calculatedVehicleRegistrationDate=getDateForDisplay($scope.vehicleInfo.dateOfRegistration),$scope.defaultMetroList=localStorageService.get("defaultMetroCityList"),$scope.ownerShipChange=yesNoStatusGeneric,$scope.sortTypes=sortTypesVehicleGeneric,$scope.sortType=sortTypesVehicleGeneric[0],$scope.selectedSortOption=$scope.sortTypes[0],$scope.bikeInsuranceTypes=bikeInsuranceTypeGeneric,$scope.policyStatusList=policyStatusListGeneric,$scope.ncbList=ncbListGeneric,$scope.previousClaimStatus=previousClaimStatusGeneric,$scope.comparePoliciesDisplayList=comparePoliciesDisplayValues,$scope.comparePoliciesTypeList=comparePoliciesTypeListGen,$scope.insurancePlanTypes=bikeInsurancePlanTypesGen,$scope.insuranceTypeList=insuranceTypeListGen,$rootScope.selectedInsuranceType=$scope.insuranceTypeList[0].value;var vehicleDetailsCookie=localStorageService.get("bikeRegistrationDetails");vehicleDetailsCookie&&"undefined"!=String(vehicleDetailsCookie.registrationNumber)&&null!=vehicleDetailsCookie.registrationNumber&&($rootScope.vehicleDetails.registrationNumber=vehicleDetailsCookie.registrationNumber),$scope.defaultMetroList||($scope.defaultMetroList=commonResultLabels.popularRTOList.data,localStorageService.set("defaultMetroCityList",$scope.defaultMetroList),console.log("fetching default metrolist from application labels",$scope.defaultMetroList)),$scope.resetVehicleDetails=function(){$scope.vehicleInfoCopy=angular.copy($scope.vehicleInfo),$scope.vehicleDetailsCopy=angular.copy($scope.vehicleDetails)},$scope.resetVehicleDetails(),$scope.displayIDVOption=function(){$scope.displayIDVLabel="IDV  ",1==$scope.vehicleDetails.idvOption?$scope.selectedIDV=$scope.displayIDVLabel+" - Best Deal":2==$scope.vehicleDetails.idvOption?$scope.selectedIDV=$scope.displayIDVLabel+" - Your IDV":$scope.selectedIDV=$scope.displayIDVLabel+" - min IDV"},$scope.displayIDVOption(),$scope.currentResultTab=wp_path+"buy/bike/html/TwoWheelerComprehensiveResult.html",$scope.onClickResultTab=function(){$scope.quoteBikeInputForm.$setDirty(),1==$scope.quoteParam.insuranceType?($scope.zeroDepreciationStatus=!0,$scope.vehicleDetails.zeroDepreciation="Y",$scope.sortTypes=sortTypesVehicleGeneric,$scope.sortType=sortTypesVehicleGeneric[0],$scope.currentResultTab=wp_path+"buy/bike/html/TwoWheelerComprehensiveResult.html"):($scope.zeroDepreciationStatus=!1,$scope.vehicleDetails.zeroDepreciation="N",$scope.sortTypes=sortTypesVehicleThirdPartyGeneric,$scope.sortType=sortTypesVehicleThirdPartyGeneric[0],$scope.currentResultTab=wp_path+"buy/bike/html/TwoWheelerThirdPartyLiabilityResult.html"),$scope.singleClickBikeQuote()},$scope.getDateForDisplay=function(selectedDate){if("undefined"!=String(selectedDate)){var dateArray=selectedDate.split("/");return dateArray[0]+"-"+monthListGeneric[Number(dateArray[1])-1]+"-"+dateArray[2]}return""},$scope.calcRiderAmt=function(selectedPremium){if("undefined"!=String(selectedPremium.ridersList)){for(var selectedRiderAmount=0,i=0;i<selectedPremium.ridersList.length;i++)null!=selectedPremium.ridersList[i].riderValue&&(selectedRiderAmount+=selectedPremium.ridersList[i].riderValue);return selectedRiderAmount}return 0},$scope.calcDiscountAmt=function(selectedPremium){for(var selectedDiscountAmount=0,i=0;i<selectedPremium.discountList.length;i++)null!=selectedPremium.discountList[i].discountAmount&&(selectedDiscountAmount+=selectedPremium.discountList[i].discountAmount);return selectedDiscountAmount},$scope.getPopup=function(selectedPremium){$scope.selectPremiumFromResult=selectedPremium,$scope.selectPremiumFromResult.selectedRiderAmount=$scope.calcRiderAmt(selectedPremium),$scope.selectPremiumFromResult.selectedDiscountAmount=$scope.calcDiscountAmt(selectedPremium),$scope.currentTab=wp_path+"buy/bike/html/TwoWheelerPremiumBreakup.html"},$scope.modalCompare=!1,$scope.toggleCompare=function(){var riderJson={};$scope.consolatedRiderList=[],$scope.consolatedDiscountList=[],$scope.consolatedVoluntaryList=[],angular.forEach($scope.selectedCarrier,function(quote){angular.forEach(quote.ridersList,function(rider){null==riderJson[rider.riderId]&&($scope.consolatedRiderList.push(rider),riderJson[rider.riderId]=rider.riderName)})});var discountJson={},discountVoluntaryJson={};angular.forEach($scope.selectedCarrier,function(quote){angular.forEach(quote.discountList,function(discount){null==discountJson[discount.discountId]&&null!=discount.discountAmount&&0!=discount.discountAmount?($scope.consolatedDiscountList.push(discount),discountJson[discount.discountId]=discount.type):null==discountJson[discount.discountId]&&0==discount.discountAmount&&($scope.consolatedVoluntaryList.push(discount),discountVoluntaryJson[discount.discountId]=discount.type)})}),$scope.modalCompare=!0,$scope.hideModal=function(){$scope.modalCompare=!1}},$scope.cardView=!0,$scope.compareView=!1,$scope.showCompareBtn=!0,$scope.showCardBtn=!0,$scope.disableSort=!1,$scope.compareViewClick=function(){$scope.disableSort=!1,$scope.dataLoaded=!0,$scope.slickLoaded=!0,$scope.cardView=!0,$scope.compareView=!1,$scope.showCompareBtn=!0,$scope.showCardBtn=!0},$scope.cardViewClick=function(){console.log("inside cardViewClick");var riderJson={};$scope.consolatedRiderList=[],$scope.consolatedDiscountList=[],$scope.consolatedVoluntaryList=[],angular.forEach($rootScope.bikeQuoteResult,function(quote){angular.forEach(quote.ridersList,function(rider){null==riderJson[rider.riderId]&&($scope.consolatedRiderList.push(rider),riderJson[rider.riderId]=rider.riderName)})});var discountJson={},discountVoluntaryJson={};angular.forEach($rootScope.bikeQuoteResult,function(quote){angular.forEach(quote.discountList,function(discount){null==discountJson[discount.discountId]&&null!=discount.discountAmount&&0!=discount.discountAmount?($scope.consolatedDiscountList.push(discount),discountJson[discount.discountId]=discount.type):null==discountJson[discount.discountId]&&0==discount.discountAmount&&($scope.consolatedVoluntaryList.push(discount),discountVoluntaryJson[discount.discountId]=discount.type)})}),$scope.dataLoaded=!0,$scope.slickLoaded=!0,$scope.cardView=!1,$scope.compareView=!0,$scope.showCompareBtn=!0,$scope.showCardBtn=!0,$scope.disableSort=!0},setTimeout(function(){var maxInstantHeight=-1;$(".minheight_health").each(function(){maxInstantHeight=maxInstantHeight>$(this).height()?maxInstantHeight:$(this).height()}),$(".minheight_health").each(function(){$(this).css("height",maxInstantHeight)})},200),$scope.findRider=function(riderId,selData){var returnRidervalue="NA";if(selData||(returnRidervalue="NA"),selData)for(var i=0;i<selData.length;i++)selData[i].riderId==riderId&&(selData[i].riderValue||(selData[i].riderValue="NA"),returnRidervalue=selData[i].riderValue);return returnRidervalue},$scope.findVoluntaryDiscount=function(discountId,selData){var returnvalue="NA";if(selData||(returnvalue="NA"),selData)for(var i=0;i<selData.length;i++)selData[i].discountId==discountId&&(selData[i].discountAmount||(selData[i].discountAmount="NA"),returnvalue=selData[i].discountAmount);return returnvalue},$scope.findDiscount=function(discountId,selData){var returnDiscountvalue="NA";if(selData||(returnDiscountvalue="NA"),selData)for(var i=0;i<selData.length;i++)selData[i].discountId==discountId&&(selData[i].discountAmount||(selData[i].discountAmount="NA"),returnDiscountvalue=selData[i].discountAmount);return returnDiscountvalue},$scope.modalVehicleRegistration=!1,$scope.toggleVehicleRegistrationPopup=function(regAreaStatus){$rootScope.selectedRegData="",$rootScope.vehicleDetails.registrationNumber="",$scope.quoteBikeInputForm.$setDirty(),0==regAreaStatus?($scope.modalVehicleRegistration=!1,$rootScope.showBikeRegAreaStatus=!1):1==regAreaStatus&&($scope.modalVehicleRegistration=!0,$rootScope.showBikeRegAreaStatus=!0),$scope.hideModal=function(){$scope.modalVehicleRegistration=!1},setTimeout(function(){$(".clickMetro").css("height","50px"),$(".showMetro").hide()},100),setTimeout(function(){$(".clickMetro").click(function(){$(".showMetro").hide(),$(this).find(".showMetro").show(),$(".thumbnail").removeClass("RToButtonActive"),$(".thumbnail").addClass("RToButton"),$(this).find(".thumbnail").addClass("RToButtonActive");var getHeight=$(this).find(".showMetro").height();$(".clickMetro").css("height","50px"),$(this).css("height",getHeight+50)})},2e3)},$scope.hideStatus=!0,$scope.oldMetroSelected=makeObjectEmpty($scope.oldMetroSelected,"array"),$scope.selectedMetroRTO=function(metrosRTOList){$scope.metros=metrosRTOList,$scope.oldMetroSelected==metrosRTOList?($scope.hideStatus=!0,$scope.oldMetroSelected=makeObjectEmpty($scope.oldMetroSelected,"array"),setTimeout(function(){$(".clickMetro").css("height","50px"),$(".showMetro").hide(),$(".thumbnail").addClass("RToButton")},100)):($scope.hideStatus=!1,$scope.oldMetroSelected=metrosRTOList),$scope.metros.RTODetails.length%3==2?$scope.dummyLength=1:$scope.metros.RTODetails.length%3==1?$scope.dummyLength=2:$scope.dummyLength=0},$scope.getRegPlaceListRTO=function(regNumber,registrationNumber){return regNumber.indexOf("-")>0&&(regNumber=regNumber.replace("-","")),$http.get(getServiceLink+$scope.p365Labels.documentType.RTODetails+"&q="+regNumber).then(function(callback){if((callback=JSON.parse(callback.data)).responseCode==$scope.p365Labels.responseCode.success){$rootScope.selectedBikeRegistrationObject=callback.data[0],$rootScope.vehicleDetails.registrationNumber=registrationNumber.trim(),$scope.vehicleInfo.registrationNumber=$rootScope.vehicleDetails.registrationNumber;var registrationDetails={};registrationDetails.registrationNumber=$scope.vehicleInfo.registrationNumber,localStorageService.set("bikeRegistrationDetails",registrationDetails);var rtoDetail={};rtoDetail.rtoName=$rootScope.selectedBikeRegistrationObject.display,rtoDetail.rtoCity=$rootScope.selectedBikeRegistrationObject.city,rtoDetail.rtoState=$rootScope.selectedBikeRegistrationObject.state,rtoDetail.rtoObject=callback.data[0],rtoDetail.cityStatus=!0,rtoDetail.rtoStatus=!0,getPincodeFromCity($http,rtoDetail,function(resultedRTOInfo){var getCity;resultedRTOInfo.responseCode==$scope.p365Labels.responseCode.success?(rtoDetail.pincode=resultedRTOInfo.data[0].pincode,localStorageService.get("bikeRegAddress")?(localStorageService.get("bikeRegAddress").pincode=rtoDetail.pincode,localStorageService.get("bikeRegAddress").city=$rootScope.selectedBikeRegistrationObject.city,localStorageService.get("bikeRegAddress").state=$rootScope.selectedBikeRegistrationObject.state):((getCity={}).pincode=rtoDetail.pincode,getCity.city=$rootScope.selectedBikeRegistrationObject.city,getCity.state=$rootScope.selectedBikeRegistrationObject.state,localStorageService.set("bikeRegAddress",getCity))):(rtoDetail.pincode="",localStorageService.get("bikeRegAddress")?(localStorageService.get("bikeRegAddress").pincode=rtoDetail.pincode,localStorageService.get("bikeRegAddress").city=$rootScope.selectedBikeRegistrationObject.city,localStorageService.get("bikeRegAddress").state=$rootScope.selectedBikeRegistrationObject.state):((getCity={}).pincode=rtoDetail.pincode,getCity.city=$rootScope.selectedBikeRegistrationObject.city,getCity.state=$rootScope.selectedBikeRegistrationObject.state,localStorageService.set("bikeRegAddress",getCity)));localStorageService.set("bikeRegistrationPlaceUsingIP",rtoDetail),$rootScope.vehicleInfo.registrationPlace=rtoDetail.rtoName}),$scope.quoteBikeInputForm.$setDirty(),$rootScope.viewOptionDisabled=!0,$scope.vehicleInfo.make&&$scope.vehicleInfo.model&&$scope.vehicleInfo.variant?$scope.vehicleDetails.displayVehicle?$scope.selectedItem.displayVehicle=$scope.vehicleDetails.displayVehicle:$scope.selectedItem.displayVehicle=$scope.vehicleInfo.make+"  "+$scope.vehicleInfo.model+"  "+$scope.vehicleInfo.variant:$scope.selectedItem={}}else $rootScope.regNumStatus=!0})},$scope.getRegNumber=function(registrationNumber){if("undefined"!=String(registrationNumber)){var registrationDetails={};if(registrationNumber=registrationNumber.replace(/[^a-zA-Z0-9]/gi,""),$scope.vehicleDetails=localStorageService.get("selectedBikeDetails"),$scope.vehicleDetails.engineNumber="",$scope.vehicleDetails.chassisNumber="",$scope.vehicleDetails.isregNumberDisabled=!0,localStorageService.set("selectedBikeDetails",$scope.vehicleDetails),$rootScope.isChasisNumber=!1,$rootScope.isEngineNumber=!1,$rootScope.isregNumber=!1,registrationNumber.trim().match(/([a-zA-Z]{2}[0-9]{1,2}[a-zA-Z]{0,3}[0-9]{1,4})/g)&&registrationNumber.trim().length<=11&&registrationNumber.trim().length>4){$rootScope.regNumStatus=!1,$scope.fetchingBike=!0,$scope.vehicleDetails.insuranceType.type==$scope.bikeInsuranceTypes[1].type&&($scope.vehicleInfo.dateOfRegistration=makeObjectEmpty($scope.vehicleInfo.dateOfRegistration,"text")),$scope.selectedItem={},registrationDetails.registrationNumber=registrationNumber,localStorageService.set("bikeRegistrationDetails",registrationDetails),$scope.vehicleInfo.IDV=0,$rootScope.bikeAddOnCoversList.selectedAddOnCovers=[];var request={};request.registrationNumber=registrationNumber.toUpperCase(),request.lob="bike",request.requestType="VEHICLERTOREQCONFIG",RestAPI.invoke($scope.p365Labels.transactionName.getVehicleRTODetails,request).then(function(callback){if(callback.responseCode==$scope.p365Labels.responseCode.success)if(callback.data){var vehicleRTODetails=callback.data;if($scope.vehicleDetails.insuranceType.type==$scope.bikeInsuranceTypes[1].type){if(vehicleRTODetails.registrationYear){var selectedRegYear=vehicleRTODetails.registrationYear;$scope.vehicleDetails.regYear=selectedRegYear.trim(),$scope.vehicleInfo.dateOfRegistration="01/07/"+$scope.vehicleDetails.regYear}vehicleRTODetails.dateOfRegistration&&($scope.vehicleInfo.dateOfRegistration=vehicleRTODetails.dateOfRegistration)}vehicleRTODetails.vechileIdentificationNumber&&($scope.vehicleDetails.chassisNumber=vehicleRTODetails.vechileIdentificationNumber),vehicleRTODetails.engineNumber&&($scope.vehicleDetails.engineNumber=vehicleRTODetails.engineNumber),$scope.selectedItem.displayVehicle="",vehicleRTODetails.make&&vehicleRTODetails.model&&vehicleRTODetails.variant?($scope.vehicleInfo.make=vehicleRTODetails.make,$scope.vehicleInfo.model=vehicleRTODetails.model,$scope.vehicleInfo.variant=vehicleRTODetails.variant,vehicleRTODetails.displayVehicle?$scope.selectedItem.displayVehicle=vehicleRTODetails.displayVehicle:$scope.selectedItem.displayVehicle=vehicleRTODetails.make&&vehicleRTODetails.model&&vehicleRTODetails.variant):($scope.vehicleInfo.make="",$scope.vehicleInfo.model="",$scope.vehicleInfo.variant=""),$scope.fetchingBike=!1;var regNumber=registrationNumber.trim().slice(0,2)+""+registrationNumber.trim().slice(2,4);$scope.getRegPlaceListRTO(regNumber,registrationNumber)}else{$scope.fetchingBike=!1,$scope.selectedItem.displayVehicle="";regNumber=registrationNumber.trim().slice(0,2)+""+registrationNumber.trim().slice(2,4);$scope.getRegPlaceListRTO(regNumber,registrationNumber)}else{$scope.fetchingBike=!1,$scope.selectedItem.displayVehicle="";regNumber=registrationNumber.trim().slice(0,2)+""+registrationNumber.trim().slice(2,4);$scope.getRegPlaceListRTO(regNumber,registrationNumber)}})}else $rootScope.regNumStatus=!0}else $rootScope.regNumStatus=!0},$scope.getRegPlaceList=function(cityName){return cityName.indexOf("-")>0&&(cityName=cityName.replace("-","")),$http.get(getServiceLink+$scope.p365Labels.documentType.RTODetails+"&q="+cityName).then(function(response){return JSON.parse(response.data).data})},$scope.onSelect=function(item){$scope.modalVehicleRegistration=!1,$rootScope.selectedBikeRegistrationObject=item,$scope.vehicleInfo.registrationPlace=item.display;var rtoDetail={};rtoDetail.rtoName=item.display,rtoDetail.rtoCity=item.city,rtoDetail.rtoState=item.state,rtoDetail.rtoStatus=!0,$scope.vehicleInfo.IDV=0,$rootScope.bikeAddOnCoversList.selectedAddOnCovers=[],getPincodeFromCity($http,rtoDetail,function(resultedRTOInfo){var getCity;resultedRTOInfo.responseCode==$scope.p365Labels.responseCode.success?(rtoDetail.rtoPincode=resultedRTOInfo.data[0].pincode,localStorageService.get("bikeRegAddress")?(localStorageService.get("bikeRegAddress").pincode=rtoDetail.pincode,localStorageService.get("bikeRegAddress").city=$rootScope.selectedBikeRegistrationObject.city,localStorageService.get("bikeRegAddress").state=$rootScope.selectedBikeRegistrationObject.state):((getCity={}).pincode=rtoDetail.rtoPincode,getCity.city=$rootScope.selectedBikeRegistrationObject.city,getCity.state=$rootScope.selectedBikeRegistrationObject.state,localStorageService.set("bikeRegAddress",getCity))):(rtoDetail.rtoPincode="",localStorageService.get("bikeRegAddress")?(localStorageService.get("bikeRegAddress").pincode=rtoDetail.rtoPincode,localStorageService.get("bikeRegAddress").city=$rootScope.selectedBikeRegistrationObject.city,localStorageService.get("bikeRegAddress").state=$rootScope.selectedBikeRegistrationObject.state):((getCity={}).pincode=rtoDetail.pincode,getCity.city=$rootScope.selectedBikeRegistrationObject.city,getCity.state=$rootScope.selectedBikeRegistrationObject.state,localStorageService.set("bikeRegAddress",getCity)));$scope.quoteBikeInputForm.$setDirty(),$scope.quoteBikeInputForm.bikeInputForm.$setDirty()}),localStorageService.set("bikeRegistrationPlaceUsingIP",rtoDetail),$scope.vehicleInfo.registrationPlace=item.display,$rootScope.vehicleDetails.registrationNumber=""},$scope.setRangePrevPolicyExpiryDate=function(){var prevPolExpDateOption={};(1==$scope.vehicleDetails.policyStatus.key?(prevPolExpDateOption.minimumDateStringFormat=$scope.vehicleInfo.dateOfRegistration,prevPolExpDateOption.maximumDateStringFormat=$scope.vehicleDetails.policyStatus.expiryDate):2==$scope.vehicleDetails.policyStatus.key?(prevPolExpDateOption.minimumDayLimit=-90,prevPolExpDateOption.maximumDayLimit=-1):(prevPolExpDateOption.minimumDayLimit=0,prevPolExpDateOption.maximumDayLimit=60),prevPolExpDateOption.changeMonth=!0,prevPolExpDateOption.changeYear=!0,prevPolExpDateOption.dateFormat="dd/mm/yy",$scope.previousPolicyExpiryDateOptions=setP365DatePickerProperties(prevPolExpDateOption),$scope.odPolicyExpiryDate=setP365DatePickerProperties(prevPolExpDateOption),$scope.vehicleInfo.TPPolicyExpiryDate)&&((prevPolExpDateOption={}).minimumDateStringFormat=$scope.vehicleInfo.PreviousPolicyExpiryDate,$scope.tpPolicyExpiryDate=setP365DatePickerProperties(prevPolExpDateOption))},$scope.changePolStatus=function(){$location.search().isForRenewal?$scope.vehicleDetails.insuranceType.type==$scope.bikeInsuranceTypes[1].type?($scope.renewal=!0,$scope.setRangePrevPolicyExpiryDate()):($scope.renewal=!1,$rootScope.flag||($scope.vehicleInfo.PreviousPolicyExpiryDate=makeObjectEmpty($scope.vehicleInfo.PreviousPolicyExpiryDate,"text"))):$scope.vehicleDetails.insuranceType.type==$scope.bikeInsuranceTypes[1].type?($scope.renewal=!0,$rootScope.flag||($scope.vehicleInfo.PreviousPolicyExpiryDate=$scope.vehicleDetails.policyStatus.expiryDate),$scope.setRangePrevPolicyExpiryDate()):($scope.renewal=!1,$rootScope.flag||($scope.vehicleInfo.PreviousPolicyExpiryDate=makeObjectEmpty($scope.vehicleInfo.PreviousPolicyExpiryDate,"text"))),($scope.quoteParam.policyType="renew")&&(3==$scope.vehicleDetails.policyStatus.key?$scope.vehicleDetails.previousPolicyExpired="N":$scope.vehicleDetails.previousPolicyExpired="Y")},$scope.changeExpiryDate=function(){"undefined"!==String($scope.vehicleDetails.policyExpiryDate)&&convertDateFormatToString($scope.vehicleDetails.policyExpiryDate,function(formattedPolicyExpiryDate){var futureDate=new Date;futureDate=new Date(futureDate.setDate(futureDate.getDate()+Number(30)));var policyExpiryDate=formattedPolicyExpiryDate.split("/"),tempPolicyExpiryDate=policyExpiryDate[1]+"/"+policyExpiryDate[0]+"/"+policyExpiryDate[2];(new Date(tempPolicyExpiryDate)<new Date||new Date(tempPolicyExpiryDate)>futureDate)&&($scope.vehicleDetails.policyExpiryDate=new Date),convertDateFormatToString($scope.vehicleDetails.policyExpiryDate,function(formattedPolicyExpiryDate){})})},$scope.alterRenewal=function(){var todayDate=new Date;if($scope.vehicleDetails.insuranceType.type!=$scope.bikeInsuranceTypes[1].type)$scope.polStatus=!1,$scope.renewal=!1,$scope.manufacturingYearList=listManufactureYear($scope.vehicleDetails.regYear,2),$scope.vehicleDetails.manufacturingYear=$scope.manufacturingYearList[0],$scope.selectedYear=$scope.manufacturingYearList[0],$scope.vehicleDetails.regYear=todayDate.getFullYear().toString(),$rootScope.flag||($scope.vehicleInfo.dateOfRegistration=("0"+todayDate.getDate().toString()).substr(-2)+"/"+("0"+(Number(todayDate.getMonth())+1).toString()).substr(-2)+"/"+$scope.vehicleDetails.regYear,$scope.vehicleDetails.PreviousPolicyStartDate=makeObjectEmpty($scope.vehicleDetails.PreviousPolicyStartDate,"text"),$scope.vehicleInfo.PreviousPolicyExpiryDate=makeObjectEmpty($scope.vehicleInfo.PreviousPolicyExpiryDate,"text"),$scope.vehicleInfo.ODPolicyExpiryDate=$scope.vehicleInfo.PreviousPolicyExpiryDate),void 0!=$scope.quoteParam.onlyODApplicable&&(0!=$scope.quoteParam.onlyODApplicable&&1!=$scope.quoteParam.onlyODApplicable||delete $scope.quoteParam.onlyODApplicable);else{$scope.polStatus=!0,$scope.renewal=!0,$scope.manufacturingYearList=listManufactureYear($scope.vehicleDetails.regYear,2),$scope.vehicleDetails.manufacturingYear=$scope.manufacturingYearList[0];var current_Year=Number(todayDate.getFullYear());$rootScope.flag||(current_Year==$scope.vehicleDetails.regYear?$scope.vehicleInfo.dateOfRegistration="01/01/"+$scope.vehicleDetails.regYear:$scope.vehicleInfo.dateOfRegistration="01/07/"+$scope.vehicleDetails.regYear,convertStringFormatToDate($scope.vehicleInfo.PreviousPolicyExpiryDate,function(formattedPolicyExpiryDate){var tempPreviousPolicyExpiryDate=new Date(angular.copy(formattedPolicyExpiryDate)),tempCalcPrevPolStartDate=new Date(tempPreviousPolicyExpiryDate.setFullYear(new Date(tempPreviousPolicyExpiryDate).getFullYear()-1));tempCalcPrevPolStartDate=new Date(new Date(String(tempCalcPrevPolStartDate)).setDate(new Date(String(tempCalcPrevPolStartDate)).getDate()+1)),convertDateFormatToString(tempCalcPrevPolStartDate,function(formattedPrevPolStartDate){$scope.vehicleDetails.PreviousPolicyStartDate=formattedPrevPolStartDate})}),$scope.quoteParam.policyType=$scope.vehicleDetails.insuranceType.value)}$scope.changePolStatus()},$scope.alterRenewal(),$scope.cancelVehicleInfoChange=function(){$rootScope.viewOptionDisabled=!1,angular.copy($scope.vehicleInfoCopy,$scope.vehicleInfo),angular.copy($scope.vehicleDetailsCopy,$scope.vehicleDetails),$scope.quoteBikeInputForm.bikeInputForm.$setPristine()},$scope.modalPreviewReport=!1,$scope.togglePreviewReport=function(){$scope.modalPreviewReport=!$scope.modalPreviewReport,$scope.hideModal=function(){$scope.modalPreviewReport=!1}},$scope.modalMoreDetails=!1,$scope.toggleMoreDetails=function(){$scope.modalMoreDetails=!$scope.modalMoreDetails,$scope.hideModal=function(){$scope.modalMoreDetails=!1}},$scope.updateSort=function(sortOption){$scope.activeSort=sortOption.key,$scope.selectedSortOption=sortOption,1==sortOption.key?($scope.sortKey="grossPremium",$scope.sortReverse=!1):2==sortOption.key?($scope.sortKey="insuredDeclareValue",$scope.sortReverse=!0):3==sortOption.key&&($scope.sortKey="insurerIndex",$scope.sortReverse=!0),$scope.toggleState()},$scope.toggleSortOrder=!1,$scope.updateSortOrder=function(){$scope.toggleSortOrder=!$scope.toggleSortOrder,1==$scope.selectedSortOption.key?($scope.sortKey="grossPremium",$scope.sortReverse=$scope.toggleSortOrder):2==$scope.selectedSortOption.key?($scope.sortKey="insuredDeclareValue",$scope.sortReverse=$scope.toggleSortOrder):3==$scope.selectedSortOption.key&&($scope.sortKey="insurerIndex",$scope.sortReverse=$scope.toggleSortOrder)},$scope.checkForEdit=function(){0==$rootScope.showBikeRegAreaStatus&&("undefined"===String($rootScope.vehicleDetails.registrationNumber)||String($rootScope.vehicleDetails.registrationNumber).length<6)?$rootScope.regNumStatus=!0:$rootScope.regNumStatus=!1,2==$scope.vehicleDetails.idvOption&&($scope.vehicleInfo.IDV>=$scope.minIDVSuggested&&$scope.vehicleInfo.IDV<=$scope.maxIDVSuggested?(!1,$scope.userIDVError=!1):(!0,$scope.userIDVError=!0))},$scope.isMinPremium=function(grossPremiumValue,carrierIDValue){for(var min=$rootScope.bikeQuoteResult[0].grossPremium,i=0;i<=$rootScope.bikeQuoteResult.length-1;i++){var carrierIdMin=$rootScope.bikeQuoteResult[i].carrierId;Number($rootScope.bikeQuoteResult[i].grossPremium)<min&&(min=$rootScope.bikeQuoteResult[i].grossPremium,carrierIDValue=carrierIdMin)}return min===grossPremiumValue&&($scope.selMinCarrierId=carrierIDValue,!0)},$scope.toggleChangeClose=function(){$rootScope.viewOptionDisabled=!1,angular.copy($scope.vehicleInfoCopy,$scope.vehicleInfo),angular.copy($scope.vehicleDetailsCopy,$scope.vehicleDetails),$scope.quoteBikeInputForm.bikeInputForm.$setPristine()},$scope.validatePremium=function(data){return Number(data.netPremium)>0},$scope.validateInsurancePlanType=function(data){return"new"==data.policyType?!("comprehensive"!=$rootScope.selectedInsuranceType||!data.comprehensive)||!("liability"!=$rootScope.selectedInsuranceType||!data.liability):"renew"==data.policyType||"odonly"==data.policyType},$scope.submitPACoverDetails=function(key){if($scope.PACoverModal=!1,$scope.BikePACoverDetails[key]=!0,$scope.quoteParam.riders)for(var j=0;j<$scope.quoteParam.riders.length;j++)"Personal Accident Cover"==$scope.quoteParam.riders[j].riderName&&$scope.quoteParam.riders.splice(j,1),$scope.PACoverFlag=0;$scope.singleClickBikeQuote()},$scope.planTypeError=!1,$scope.submitInsuranceType=function(policyType){policyType==$scope.insuranceTypeList[0].value&&0==$rootScope.ownDamageValidity.length?$scope.planTypeError=!0:$scope.BikePACoverDetails.isPACoverApplicable&&0==$rootScope.personalAccidentValidity.length?$scope.planTypeError=!0:($scope.planTypeError=!1,$scope.insuranceTypeModal=!1,$scope.filterResult(policyType))},$scope.filterResult=function(policyType){if($rootScope.selectedInsuranceType=policyType,localStorageService.set("selectedInsuranceType",policyType),"new"==$scope.quoteParam.policyType)if($rootScope.bikeQuotePolicyType=$rootScope.bikeQuoteResultCopy,$rootScope.bikeQuoteResult=[],policyType==$scope.insuranceTypeList[0].value)for(var i=0;i<$rootScope.bikeQuotePolicyType.length;i++)$rootScope.bikeQuotePolicyType[i][policyType]&&($scope.BikePACoverDetails.isPACoverApplicable?-1!=$rootScope.ownDamageValidity.indexOf($rootScope.bikeQuotePolicyType[i].ownDamagePolicyTerm)&&-1!=$rootScope.thirdPartyDamageValidity.indexOf($rootScope.bikeQuotePolicyType[i].liabilityPolicyTerm)&&-1!=$rootScope.personalAccidentValidity.indexOf($rootScope.bikeQuotePolicyType[i].PACover)&&$rootScope.bikeQuoteResult.push($rootScope.bikeQuotePolicyType[i]):-1!=$rootScope.ownDamageValidity.indexOf($rootScope.bikeQuotePolicyType[i].ownDamagePolicyTerm)&&-1!=$rootScope.thirdPartyDamageValidity.indexOf($rootScope.bikeQuotePolicyType[i].liabilityPolicyTerm)&&$rootScope.bikeQuoteResult.push($rootScope.bikeQuotePolicyType[i]));else if(policyType==$scope.insuranceTypeList[1].value)for(i=0;i<$rootScope.bikeQuotePolicyType.length;i++)if($rootScope.bikeQuotePolicyType[i][policyType])for(var j=0;j<$rootScope.thirdPartyDamageValidity.length;j++)$rootScope.bikeQuotePolicyType[i].liabilityPolicyTerm==$rootScope.thirdPartyDamageValidity[j]&&$rootScope.bikeQuoteResult.push($rootScope.bikeQuotePolicyType[i])},setTimeout(function(){$rootScope.bikeQuoteResultCopy=$rootScope.bikeQuoteResult,"new"==$scope.quoteParam.policyType&&($rootScope.ownDamageValidity=[1,5],$scope.PACoverValidity($scope.BikePACoverDetails.isPACoverApplicable),$scope.filterResult($rootScope.selectedInsuranceType))},100),$scope.toggleIDVChangeClose=function(){$scope.vehicleInfo.IDV=localStorageService.get("selectedBikeDetails").IDV,$scope.vehicleDetails.idvOption=angular.copy($rootScope.idvOptionCopy),$scope.displayIDVOption(),$scope.idvDetailsModal=!1},$scope.validateUserIDV=function(){Number($scope.vehicleInfo.IDV)<$scope.minIDVSuggested||Number($scope.vehicleInfo.IDV)>$scope.maxIDVSuggested?($scope.userIDVError=!0,$scope.quoteBikeInputForm.$setDirty()):$scope.userIDVError=!1},$scope.updateIDVRange=function(){for(var i=0;i<$rootScope.bikeQuoteResult.length;i++)$rootScope.bikeQuoteResult[i].minIdvValue=Number($rootScope.bikeQuoteResult[i].minIdvValue),$rootScope.bikeQuoteResult[i].maxIdvValue=Number($rootScope.bikeQuoteResult[i].maxIdvValue);console.log("$rootScope.bikeQuoteResult in updateIDVRange",$rootScope.bikeQuoteResult),2==$scope.vehicleDetails.idvOption?($rootScope.bikeQuoteResultMin=$filter("orderBy")($rootScope.bikeQuoteResult,"minIdvValue"),$rootScope.bikeQuoteResultMax=$filter("orderBy")($rootScope.bikeQuoteResult,"-maxIdvValue"),console.log("$rootScope.bikeQuoteResultMin[0] is : ",$rootScope.bikeQuoteResultMin[0]),$scope.minIDVSuggested=parseFloat($rootScope.bikeQuoteResultMin[0].minIdvValue).toFixed(0),$scope.maxIDVSuggested=parseFloat($rootScope.bikeQuoteResultMax[0].maxIdvValue).toFixed(0)):3==$scope.vehicleDetails.idvOption&&($rootScope.bikeQuoteResult=$filter("orderBy")($rootScope.bikeQuoteResult,"minIdvValue"),$scope.minIDVSuggested=parseFloat($rootScope.bikeQuoteResult[0].minIdvValue).toFixed(0),$scope.maxIDVSuggested=parseFloat($rootScope.bikeQuoteResult[0].maxIDV).toFixed(0),0==$scope.vehicleInfo.IDV&&($scope.vehicleInfo.IDV=$scope.minIDVSuggested),console.log("$scope.minIDVSuggested is: ",$scope.minIDVSuggested),console.log("$scope.maxIDVSuggested is: ",$scope.maxIDVSuggested))},$scope.updateUserIDV=function(){$scope.displayIDVOption(),$scope.showIDVPopUp=!1,2==$scope.vehicleDetails.idvOption?($scope.showIDVPopUp=!0,$scope.quoteBikeInputForm.$setDirty(),$scope.updateIDVRange(),$scope.vehicleInfo.IDV=$scope.minIDVSuggested,Number($scope.vehicleInfo.IDV)<$scope.minIDVSuggested||Number($scope.vehicleInfo.IDV)>$scope.maxIDVSuggested?$scope.userIDVError=!0:$scope.userIDVError=!1):3==$scope.vehicleDetails.idvOption?($scope.updateIDVRange(),$scope.vehicleInfo.IDV=$scope.minIDVSuggested,$scope.quoteBikeInputForm.$setDirty(),$scope.singleClickBikeQuote()):($scope.userIDVError=!1,$scope.showIDVPopUp=!1,$scope.quoteBikeInputForm.$setDirty(),$scope.singleClickBikeQuote())},2!=$scope.vehicleDetails.idvOption&&3!=$scope.vehicleDetails.idvOption||$scope.updateIDVRange(),$rootScope.editForMobile=function(){$rootScope.showonEdit="inline !important",$rootScope.hideonEdit="none !important",$scope.flagforMobile=!0};if($scope.toggleChange=function(){0==$rootScope.showCarRegAreaStatus&&("undefined"===String($rootScope.vehicleDetails.registrationNumber)||String($rootScope.vehicleDetails.registrationNumber).length<6)?$rootScope.regNumStatus=!0:$rootScope.regNumStatus=!1,$scope.vehicleDetails.idvOption=1,$scope.vehicleInfo.IDV=0,$rootScope.wordPressEnabled&&($scope.showIDVPopUp=!1,$scope.OdOnlyModal=!1);var prevPolExpDateOption={};$scope.vehicleInfo.TPPolicyExpiryDat=$scope.vehicleInfo.PreviousPolicyExpiryDate,prevPolExpDateOption.minimumDayLimit=$scope.vehicleInfo.PreviousPolicyExpiryDate,prevPolExpDateOption.changeMonth=!0,prevPolExpDateOption.changeYear=!0,prevPolExpDateOption.dateFormat="dd/mm/yy",$scope.tpPolicyExpiryDate=setP365DatePickerProperties(prevPolExpDateOption),convertStringFormatToDate($scope.vehicleInfo.PreviousPolicyExpiryDate,function(formattedPrevpolicyExpirytDate){convertStringFormatToDate($scope.vehicleInfo.TPPolicyExpiryDate,function(formattedTPpolicyExpiryDate){var selPrevpolicyExpirytDate=angular.copy(formattedPrevpolicyExpirytDate),tempCalcTPPolicyExpiryDate=new Date(selPrevpolicyExpirytDate.setFullYear(selPrevpolicyExpirytDate.getFullYear()));tempCalcTPPolicyExpiryDate=new Date(tempCalcTPPolicyExpiryDate.setDate(tempCalcTPPolicyExpiryDate.getDate()+1)),convertDateFormatToString(tempCalcTPPolicyExpiryDate,function(formattedTPpolicyExpiryDate){$scope.vehicleInfo.TPPolicyExpiryDate=formattedTPpolicyExpiryDate})})}),$scope.singleClickBikeQuote()},$scope.callSingleClickBikeQuote=function(){localStorageService.get("bikeProductToBeAddedInCart")&&($scope.productInCart=localStorageService.get("bikeProductToBeAddedInCart"),console.log("callSingleClickBikeQuote.......",$scope.productInCart),$scope.bikeDetailsCopy=angular.copy(localStorageService.get("bikeDetailsCopy")),$scope.bikeVehicleInfoCopy=angular.copy(localStorageService.get("bikeVehicleInfoCopy")),$scope.bikeInfoCopy=angular.copy(localStorageService.get("bikeInfoCopy"))),$scope.quoteBikeInputForm.$setDirty(),$scope.quoteBikeInputForm.bikeInputForm.$setDirty(),$scope.resultSectionEnabled=!0,$scope.inputSectionEnabled=!1,$scope.ridersSectionEnabled=!1,$scope.singleClickBikeQuote()},$scope.errorMessage=function(errorMsg){!$scope.errorRespCounter||"undefined"!=String($rootScope.bikeQuoteResult)&&0!=$rootScope.bikeQuoteResult.length?$rootScope.bikeQuoteResult.length>0&&($rootScope.loading=!1,$scope.quoteCalculationError=""):($rootScope.loading=!1,$scope.errorRespCounter=!1,$scope.quoteCalcSummaryError=!0,$scope.quoteCalculationError=errorMsg)},$scope.tooltipPrepare=function(bikeResult){if(null!=bikeResult&&"undefined"!=bikeResult&&bikeResult.length>0){for(var resultCarrierId=[],testCarrierId=[],i=0;i<bikeResult.length;i++){var carrierInfo={};carrierInfo.id=bikeResult[i].carrierId,carrierInfo.name=bikeResult[i].insuranceCompany,0==p365Includes(testCarrierId,bikeResult[i].carrierId)&&(resultCarrierId.push(carrierInfo),testCarrierId.push(bikeResult[i].carrierId))}$rootScope.resultedCarriers=resultCarrierId}},$scope.customFilterBike=function(){if($scope.netPremiumTotalBike=0,$scope.netPremiumAverageBike=0,$scope.netPremiumMaxBike=0,$scope.proffesionalRatingBike=0,$rootScope.bikeQuoteResult){for(var i=0;i<$rootScope.bikeQuoteResult.length;i++)$scope.netPremiumTotalBike+=$rootScope.bikeQuoteResult[i].premiumRatio,$scope.netPremiumAverageBike=Number(($scope.netPremiumTotalBike/$rootScope.bikeQuoteResult.length).toFixed(5));for(i=0;i<$scope.bikeQuoteResult.length;i++)$rootScope.bikeQuoteResult[i].premiumRatio=$rootScope.bikeQuoteResult[i].netPremium/$rootScope.bikeQuoteResult[i].insuredDeclareValue,$rootScope.bikeQuoteResult[i].netPremiumMax=Number(($scope.netPremiumAverageBike/$rootScope.bikeQuoteResult[i].premiumRatio).toFixed(5)),$rootScope.bikeQuoteResult[i].netPremiumMax>$scope.netPremiumMaxBike&&($scope.netPremiumMaxBike=$rootScope.bikeQuoteResult[i].netPremiumMax);for(i=0;i<$rootScope.bikeQuoteResult.length;i++)$rootScope.bikeQuoteResult[i].netPremiumMean=Number(($rootScope.bikeQuoteResult[i].netPremiumMax/$scope.netPremiumMaxBike*5).toFixed(1)),$rootScope.bikeQuoteResult[i].netPremiumMean||($rootScope.bikeQuoteResult[i].netPremiumMean=3.5),$rootScope.bikeQuoteResult[i].proffesionalRating=.5*$rootScope.bikeQuoteResult[i].netPremiumMean+.2*$rootScope.bikeQuoteResult[i].claimIndex+.3*$rootScope.bikeQuoteResult[i].insurerIndex,$rootScope.bikeQuoteResult[i].proffesionalRating||($rootScope.bikeQuoteResult[i].proffesionalRating=3.5),$rootScope.bikeQuoteResult[i].insurerIndex||($rootScope.bikeQuoteResult[i].insurerIndex=3.5),$rootScope.bikeQuoteResult[i].claimIndex||($rootScope.bikeQuoteResult[i].claimIndex=3.5);$rootScope.bikeQuoteResult=$filter("orderBy")($rootScope.bikeQuoteResult,"proffesionalRating")}return $scope.sortReverse=!0,!0},$scope.processResult=function(){if($rootScope.bikeQuoteResultCopy=$rootScope.bikeQuoteResult,localStorageService.get("bikeProductToBeAddedInCart")){for(var carrierAllReadyAdded=!1,i=0;i<$rootScope.bikeQuoteResult.length;i++)if(localStorageService.get("bikeProductToBeAddedInCart").carrierId==$rootScope.bikeQuoteResult[i].carrierId){$rootScope.bikeQuoteResult[i].netPremiumMean=5,$scope.selectProduct($rootScope.bikeQuoteResult[i],!1),$rootScope.bikeQuote=$rootScope.bikeQuoteResult[i],$scope.isGotBikeQuotes=!0;carrierAllReadyAdded=!0;break}carrierAllReadyAdded||($scope.isGotBikeQuotes=!0)}$scope.tooltipPrepare($rootScope.bikeQuoteResult)},$scope.calculateBikeQuote=function(bikeQuoteResult,_transactionName,quoteIdStatus){if($rootScope.bikeQuoteRequest=[],$rootScope.bikeQuoteResult=[],$rootScope.bikeQuoteResultCopy=[],$rootScope.bikeQuoteErrorResponse=[],$rootScope.bikeQuoteResultResponseCopy=[],$scope.dataLoaded=!1,"calculateBikeProductQuote"==_transactionName&&($rootScope.bikeQuoteResult=$rootScope.bikeQuoteResultResponseCopy),$scope.quote.quoteParam=$scope.quoteParam,$scope.quote.vehicleInfo=$scope.vehicleInfo,localStorageService.set("bikeQuoteInputParamaters",$scope.quote),localStorageService.set("selectedBikeDetails",$scope.vehicleDetails),$scope.resetVehicleDetails(),bikeQuoteResult.responseCode==$scope.p365Labels.responseCode.success1){$rootScope.loading=!1,$scope.responseCodeList=[],$scope.requestId=bikeQuoteResult.QUOTE_ID,$scope.wordPressEnabled||"bikeQuote"!=_transactionName||($scope.carrierQuoteList=[],bikeQuoteResult.unMappedCarrierId&&($scope.carrierQuoteList=bikeQuoteResult.unMappedCarrierId)),quoteIdStatus&&localStorageService.set("BIKE_UNIQUE_QUOTE_ID",$scope.requestId),1==$scope.vehicleDetails.idvOption&&localStorageService.set("bike_best_quote_id",$scope.requestId),bikeQuoteResult.encryptedQuoteId&&localStorageService.set("BIKE_UNIQUE_QUOTE_ID_ENCRYPTED",bikeQuoteResult.encryptedQuoteId),$rootScope.bikeQuoteRequest=bikeQuoteResult.data,"undefined"!=String($rootScope.bikeQuoteResult)&&$rootScope.bikeQuoteResult.length>0&&($rootScope.bikeQuoteResult.length=0);var quoteResultCount=0;angular.forEach($rootScope.bikeQuoteRequest,function(obj,i){$scope.dataLoaded=!0;var request={},header={};header.messageId=messageIDVar,header.campaignID=campaignIDVar,header.source=sourceOrigin,header.transactionName=$scope.p365Labels.transactionName.bikeQuoteResult,header.deviceId=deviceIdOrigin,request.header=header,request.body=obj,$http({method:"POST",url:getQuoteCalcLink,data:request}).success(function(callback,status){var i,bikeQuoteResponse=JSON.parse(callback);quoteResultCount+=1;if(console.log("bikeQuoteResponse is...",bikeQuoteResponse),bikeQuoteResponse.QUOTE_ID==$scope.requestId&&$scope.responseCodeList.push(bikeQuoteResponse.responseCode),bikeQuoteResponse.responseCode==$scope.p365Labels.responseCode.success1&&bikeQuoteResponse.QUOTE_ID==$scope.requestId){for(i=0;i<$rootScope.bikeQuoteRequest.length;i++)$rootScope.bikeQuoteRequest[i].messageId==bikeQuoteResponse.messageId&&($rootScope.bikeQuoteResult.push(bikeQuoteResponse.data.quotes[0]),$rootScope.bikeQuoteRequest[i].status=1);$scope.processResult()}else for($scope.wordPressEnabled||"bikeQuote"!=_transactionName||$scope.carrierQuoteList.push(obj),$scope.errorMsg=bikeQuoteResponse.message,$rootScope.bikeQuoteErrorResponse.push({status:0,carrierId:obj.carrierId,message:$sce.trustAsHtml("<div>We did not get quote from the Insurer. It may be because:</b></div><br/><ul class=errorUL><li class=errorPlacementLeft>1.{{errorMsg}}</li></div>")}),$rootScope.bikeQuoteRequest.length==quoteResultCount&&"bikeQuote"==_transactionName&&(0==$rootScope.bikeQuoteResult.length&&($scope.noQuoteResultFound=!0),console.log(" $scope.noQuoteResultFound in  transactionName getCarQuote step 1 is ::",$scope.noQuoteResultFound)),i=0;i<$rootScope.bikeQuoteRequest.length;i++)$rootScope.bikeQuoteRequest[i].messageId==bikeQuoteResponse.messageId&&($rootScope.bikeQuoteRequest[i].status=2,$rootScope.bikeQuoteRequest[i].message=$sce.trustAsHtml($scope.p365Labels.validationMessages.generalisedMotorErrMsg))}).error(function(data,status){$scope.responseCodeList.push($scope.p365Labels.responseCode.systemError),console.log("errroeroerroerroereroroeroeoroeororroreroeorererer............data,status",data,status)})}),$scope.bikeRequestStatus=0,$scope.$watch("responseCodeList",function(newValue,oldValue,scope){p365Includes($scope.responseCodeList,$scope.p365Labels.responseCode.success)&&$scope.responseCodeList.length==$rootScope.bikeQuoteRequest.length&&(p365Includes($scope.responseCodeList,$scope.p365Labels.responseCode.success)?$scope.bikeRequestStatus=1:p365Includes($scope.responseCodeList,$scope.p365Labels.responseCode.quoteNotAvailable)?($scope.bikeRequestStatus=2,$scope.errorMessage($scope.p365Labels.validationMessages.productNotFoundMsg)):($scope.bikeRequestStatus=2,$scope.errorMessage($scope.p365Labels.validationMessages.generalisedErrMsg)))},!0),setTimeout(function(){"new"==$scope.quoteParam.policyType&&($rootScope.ownDamageValidity=[1,5],$scope.PACoverValidity($scope.BikePACoverDetails.isPACoverApplicable),$rootScope.selectedInsuranceType=$scope.insuranceTypeList[0].value,$scope.filterResult($rootScope.selectedInsuranceType))},200)}else"bikeQuote"==_transactionName&&($scope.noQuoteResultFound=!0,$rootScope.bikeQuoteResultResponseCopy=$rootScope.bikeQuoteResult,$rootScope.bikeQuoteRequest.push({status:2,message:$sce.trustAsHtml($scope.p365Labels.validationMessages.generalisedMotorErrMsg)}),"undefined"!=String($rootScope.bikeQuoteResult)&&$rootScope.bikeQuoteResult.length>0&&($rootScope.bikeQuoteResult.length=0)),console.log("_transactionName for get quote is::",_transactionName),console.log("$rootScope.carQuoteResultResponseCopy in  get quote is::",$rootScope.bikeQuoteResultResponseCopy.length),$scope.responseCodeList=[],"undefined"!=String($rootScope.bikeQuoteResult)&&$rootScope.bikeQuoteResult.length>0&&($rootScope.bikeQuoteResult.length=0),$scope.errorMessage(callback.message)},$scope.submitPrevPolZeroDepCover=function(){$scope.modalPrevPolZeroDepCover=!1,$scope.singleClickBikeQuote()},$scope.hidePrevPolZeroDepCoverModal=function(){$scope.modalPrevPolZeroDepCover=!1,$scope.resetRiderSelection()},$scope.submitPrevPolInvoiceCover=function(){$scope.modalPrevInvoiceCover=!1,$scope.singleClickBikeQuote()},$scope.hidePrevInvoiceCoverModal=function(){$scope.modalPrevInvoiceCover=!1,$scope.resetRiderSelection()},$scope.displaySelecteRidersModal=!1,$scope.showSelectedRiders=function(){$scope.displaySelecteRidersModal=!0},$scope.hideSelectedRiders=function(){$scope.displaySelecteRidersModal=!1},$scope.showPolicyTypeModal=function(){$scope.prevPolTypeModal=!0},$scope.hidePrevPolTypeModal=function(){$scope.prevPolTypeModal=!1},$scope.calculateQuoteOnAddOnCover=function(selRider){setTimeout(function(){if(0==$(".checkValidation").is(":visible")){var quoteCalcFlag=!0;if("renew"!=$scope.quoteParam.policyType){$scope.vehicleInfo.previousPolicyZeroDepStatus=!1,$scope.vehicleInfo.previousPolicyInvoiceCoverStatus=!1;for(var i=0;i<$rootScope.bikeAddOnCoversList.selectedAddOnCovers.length;i++)11==$rootScope.bikeAddOnCoversList.selectedAddOnCovers[i].riderId&&($scope.vehicleInfo.previousPolicyZeroDepStatus=!0),15==$rootScope.bikeAddOnCoversList.selectedAddOnCovers[i].riderId&&($scope.vehicleInfo.previousPolicyInvoiceCoverStatus=!0)}else{if(11==selRider.riderId){var zeroDepRiderStatus=!1;for(i=0;i<$rootScope.bikeAddOnCoversList.selectedAddOnCovers.length;i++)if($rootScope.bikeAddOnCoversList.selectedAddOnCovers[i].riderId==selRider.riderId){zeroDepRiderStatus=!0;break}zeroDepRiderStatus?($scope.vehicleInfo.previousPolicyZeroDepStatus=!0,$rootScope.wordPressEnabled||(quoteCalcFlag=!1,$scope.modalPrevPolZeroDepCover=!0)):($scope.vehicleInfo.previousPolicyZeroDepStatus=!1,$scope.modalPrevPolZeroDepCover=!1)}else if(15==selRider.riderId){var invoiceCoverRiderStatus=!1;for(i=0;i<$rootScope.bikeAddOnCoversList.selectedAddOnCovers.length;i++)if($rootScope.bikeAddOnCoversList.selectedAddOnCovers[i].riderId==selRider.riderId){invoiceCoverRiderStatus=!0;break}invoiceCoverRiderStatus?($scope.vehicleInfo.previousPolicyInvoiceCoverStatus=!0,$rootScope.wordPressEnabled||(quoteCalcFlag=!1,$scope.modalPrevInvoiceCover=!0)):($scope.vehicleInfo.previousPolicyInvoiceCoverStatus=!1,$scope.modalPrevInvoiceCover=!1)}}!$rootScope.wordPressEnabled&&quoteCalcFlag&&$scope.singleClickBikeQuote()}$scope.$apply()},100)},$scope.callForLanding=function(){$rootScope.Regpopup=!1,$scope.bikeDisplayNames=localStorageService.get("bikeMakeListDisplay"),$scope.vehicleDetails=localStorageService.get("selectedBikeDetails");var selectedMake="";console.log("bikeQuoteCookie is: ",JSON.stringify(bikeQuoteCookie)),bikeQuoteCookie?($scope.vehicleInfo.make=bikeQuoteCookie.vehicleInfo.make,$scope.vehicleInfo.model=bikeQuoteCookie.vehicleInfo.model,$scope.vehicleInfo.variant=bikeQuoteCookie.vehicleInfo.variant,selectedMake=$scope.vehicleInfo.make,$scope.vehicleInfo.model,$scope.bikeModelList=[],angular.forEach($scope.bikeDisplayNames,function(value){value.make==selectedMake&&$scope.bikeModelList.push(value.model)}),$scope.bikeVariantList=[],angular.forEach($scope.bikeDisplayNames,function(value){value.make==$scope.vehicleInfo.make&&value.model==$scope.vehicleInfo.model&&-1==$scope.bikeVariantList.indexOf(value.variant)&&$scope.bikeVariantList.push(value.variant)}),console.log("$scope.bike model list in callForLanding is: ",$scope.bikeModelList),console.log("$scope.bike variant list in call for landing is: ",$scope.bikeVariantList),setTimeout(function(){$scope.vehicleInfo.make=bikeQuoteCookie.vehicleInfo.make,$scope.vehicleInfo.model=bikeQuoteCookie.vehicleInfo.model,$scope.vehicleInfo.variant=bikeQuoteCookie.vehicleInfo.variant,$scope.bikeModelList=[],selectedMake=$scope.vehicleInfo.make,$scope.vehicleInfo.model,angular.forEach($scope.bikeDisplayNames,function(value){value.make==selectedMake&&$scope.bikeModelList.push(value.model)}),$scope.bikeVariantList=[],angular.forEach($scope.bikeDisplayNames,function(value){value.make==$scope.vehicleInfo.make&&value.model==$scope.vehicleInfo.model&&-1==$scope.bikeVariantList.indexOf(value.variant)&&$scope.bikeVariantList.push(value.variant)}),console.log("$scope.bike model list in settimeout callForLanding is: ",$scope.bikeModelList),console.log("$scope.bike variant list in call for landing  settimeout is: ",$scope.bikeVariantList)},100)):setTimeout(function(){$scope.vehicleInfo.make="Hero MotoCorp",$scope.vehicleInfo.model="Duet",$scope.vehicleInfo.variant="VX",selectedMake=$scope.vehicleInfo.make,$scope.vehicleInfo.model,$scope.bikeModelList=[],angular.forEach($scope.bikeDisplayNames,function(value){value.make==selectedMake&&$scope.bikeModelList.push(value.model)}),$scope.bikeVariantList=[],angular.forEach($scope.bikeDisplayNames,function(value){value.make==$scope.vehicleInfo.make&&value.model==$scope.vehicleInfo.model&&-1==$scope.bikeVariantList.indexOf(value.variant)&&$scope.bikeVariantList.push(value.variant)}),console.log("$scope.bike model list in callForLanding else is: ",$scope.bikeModelList),console.log("$scope.bike variant list in call for landing else is: ",$scope.bikeVariantList)},100),$scope.searchText=null,$scope.searchText1=null,$scope.searchText2=null,$scope.querySearch=function(query){console.log("*** inside query search ***",query);var filteredVehicle=[];return angular.forEach($scope.bikeDisplayNames,function(value){filteredVehicle.length<=40&&($scope.selectedVehicle=value.make,value.make.toLowerCase().includes(query.toLowerCase())&&(console.log("filtered vehicle is : ",filteredVehicle),-1==filteredVehicle.indexOf(value.make)&&filteredVehicle.push(value.make)))}),filteredVehicle},$scope.modelSearch=function(query){var filteredModel=[];return angular.forEach($scope.bikeModelList,function(model){filteredModel.length<=40&&($scope.selectedVehicle=model,model.toLowerCase().includes(query.toLowerCase())&&-1==filteredModel.indexOf(model)&&filteredModel.push(model))}),filteredModel},$scope.variantSearch=function(query){console.log("query in modelsearch is: ",query);var filteredVariant=[];return angular.forEach($scope.bikeVariantList,function(variant){filteredVariant.length<=40&&variant.toLowerCase().includes(query.toLowerCase())&&-1==filteredVariant.indexOf(variant)&&filteredVariant.push(variant)}),filteredVariant}},$scope.selectedDisplayVehicle=function(selectedMake){console.log("inside selected display vehicle"),selectedMake&&($scope.bikeModelList=[],angular.forEach($scope.bikeDisplayNames,function(value){value.make==selectedMake&&$scope.bikeModelList.push(value.model)}),$scope.vehicleInfo.model="",$scope.vehicleInfo.variant="",console.log("$scope.bikeModelList is: ",$scope.bikeModelList),$scope.vehicleDetails.idvOption=1,$rootScope.bikeAddOnCoversList.selectedAddOnCovers=[],$rootScope.wordPressEnabled||($scope.carrierVariantList=[],variantList=[],$scope.showCarrierVehicleVariants&&($scope.displayLoader=!0),$scope.noCarrierVariantFound=!1))},$scope.selectedDisplayModel=function(selectedModel){selectedModel&&($scope.bikeVariantList=[],angular.forEach($scope.bikeDisplayNames,function(value){value.make==$scope.vehicleInfo.make&&value.model==$scope.vehicleInfo.model&&-1==$scope.bikeVariantList.indexOf(value.variant)&&$scope.bikeVariantList.push(value.variant)}),$scope.vehicleInfo.variant="",console.log("$scope.bikeVariantList is: ",$scope.bikeVariantList))},$scope.selectedDisplayVariant=function(selectedVariant){$scope.resetDisplayVehicle=!0},$scope.onSelectCarrierVariant=function(variant,data){$scope.calcQuoteOnVariant=!0,$scope.carrierVarients=variant,variant.carrierId=data.carrierId;var variantIdAlreadyExist=!1;if(variantList.length>0)for(var i=0;i<variantList.length;i++)if(variantList[i].carrierId==variant.carrierId){variantList[i]=variant,variantIdAlreadyExist=!0;break}variantIdAlreadyExist||variantList.push(variant),console.log("variant list is::",variantList)},$scope.minRiderLimit=minBikeAccessoriesLimit,$scope.maxRiderLimit=maxBikeAccessoriesLimit,$scope.validateRiderAmount=function(selRiderAmt){selRiderAmt<$scope.minRiderLimit||selRiderAmt>$scope.maxRiderLimit?$scope.setDisabled=!0:setTimeout(function(){0==$(".checkValidation").is(":visible")&&($scope.setDisabled=!1,$rootScope.wordPressEnabled||$scope.calculateQuoteOnAddOnCover()),$scope.$apply()},100)},$scope.callForLanding(),$scope.getRiderDefaultValue=function(riderId){var riderVal=4e3;return 25==riderId?riderVal:30==riderId?riderVal=5e3:void 0},$scope.resetRiderSelection=function(){if($rootScope.bikeAddOnCoversList.selectedAddOnCovers=[],$scope.quoteParam.riders){for(var i=0;i<$scope.addOnCovers.length;i++)for(var j=0;j<$scope.quoteParam.riders.length;j++)if($scope.addOnCovers[i].riderId==$scope.quoteParam.riders[j].riderId){11!=$scope.addOnCovers[i].riderId&&15!=$scope.addOnCovers[i].riderId&&($scope.addOnCovers[i].riderAmount=$scope.quoteParam.riders[j].riderAmount),$rootScope.bikeAddOnCoversList.selectedAddOnCovers.push($scope.addOnCovers[i]);break}localStorageService.set("addOnCoverListForBike",$scope.addOnCovers)}localStorageService.get("bikeQuoteInputParamaters").quoteParam.riders&&($scope.selectedAddOn=localStorageService.get("bikeQuoteInputParamaters").quoteParam.riders.length),angular.copy($scope.vehicleInfoCopy,$scope.vehicleInfo),$scope.riderDetailsModal=!1},$scope.changePolicyType=function(){if($scope.polTypeChanged=!0,$scope.BikePACoverDetails.isPACoverApplicable&&($scope.BikePACoverDetails={},$scope.BikePACoverDetails.existingInsurance=!0,$scope.BikePACoverDetails.isPACoverApplicable=!1,$scope.quoteParam.riders))for(var j=0;j<$scope.quoteParam.riders.length;j++)"Personal Accident Cover"==$scope.quoteParam.riders[j].riderName&&$scope.quoteParam.riders.splice(j,1),$scope.PACoverFlag=0;$scope.singleClickBikeQuote()},$scope.singleClickBikeQuote=function(_transactionName){_transactionName=_transactionName||$scope.p365Labels.getRequest.quoteBike,$scope.quoteBikeInputForm.$valid&&$scope.quoteBikeInputForm.$dirty||$scope.polTypeChanged?setTimeout(function(){$scope.flagforMobile&&($rootScope.showonEdit="none !important",$rootScope.hideonEdit="inline !important",$scope.flagforMobile=!1),$rootScope.loading=!0,$scope.dataLoaded=!1,$scope.idvDetailsModal=!1,$scope.riderDetailsModal=!1,$scope.OdOnlyModal=!1,$scope.quoteCalcSummaryError=!1,$scope.isGotBikeQuotes=!1,$scope.noCarrierVariantFound=!1,$scope.noQuoteResultFound=!1,$scope.polTypeChanged=!1,$scope.quoteBikeInputForm.$setPristine(),$scope.quote={},$scope.quoteParam.riders=[],1==$scope.PACoverFlag&&$scope.PACoverAddon(),$scope.bikeRequestStatus=0,$scope.errorRespCounter=!0,"undefined"!=String($scope.selectedCarrier)&&$scope.selectedCarrier.length>0&&($scope.selectedCarrier.length=0),$scope.displayIDVOption(),$scope.vehicleInfo.IDV=Number($scope.vehicleInfo.IDV),selectedRiderListForBike($rootScope.bikeAddOnCoversList.selectedAddOnCovers,$scope.quoteParam.riders,function(){if(1==$scope.vehicleDetails.idvOption&&($scope.vehicleInfo.IDV=0),$rootScope.wordPressEnabled&&$rootScope.bikeAddOnCoversList.selectedAddOnCovers.length>0&&($scope.riderListCopy=angular.copy($rootScope.bikeAddOnCoversList.selectedAddOnCovers)),$rootScope.idvOptionCopy=angular.copy($scope.vehicleDetails.idvOption),null!=$rootScope.selectedBikeRegistrationObject||"undefined"!=String($rootScope.selectedBikeRegistrationObject))$scope.vehicleInfo.city=$rootScope.selectedBikeRegistrationObject.city,$scope.vehicleInfo.RTOCode=$rootScope.selectedBikeRegistrationObject.regisCode,$scope.vehicleInfo.state=$rootScope.selectedBikeRegistrationObject.state;else for(var i=0;i<$scope.defaultMetroList.length;i++)if($scope.defaultMetroList[i].cityName.toUpperCase()==$scope.vehicleInfo.city.toUpperCase())for(var j=0;j<$scope.defaultMetroList[i].RTODetails.length;j++){var selectedMetroDetails=$scope.defaultMetroList[i].RTODetails[j];if(selectedMetroDetails.display==$scope.vehicleInfo.registrationPlace){$scope.vehicleInfo.city=selectedMetroDetails.city,$scope.vehicleInfo.RTOCode=selectedMetroDetails.regisCode,$scope.vehicleInfo.state=selectedMetroDetails.state;break}}if($scope.calculatedVehicleRegistrationDate=getDateForDisplay($scope.vehicleInfo.dateOfRegistration),$scope.vehicleDetails.registrationNumber="undefined"!=String($rootScope.vehicleDetails.registrationNumber)?$rootScope.vehicleDetails.registrationNumber:$scope.vehicleDetails.registrationNumber,$scope.vehicleDetails.showBikeRegAreaStatus=$rootScope.showBikeRegAreaStatus,$rootScope.showBikeRegAreaStatus?-1!=$scope.vehicleInfo.registrationPlace.indexOf("-")?$scope.vehicleInfo.RTOCode=$scope.vehicleInfo.registrationPlace.substr(0,2).toUpperCase()+$scope.vehicleInfo.registrationPlace.substr(3,2).toUpperCase():$scope.vehicleInfo.RTOCode=$scope.vehicleInfo.registrationPlace.substr(0,4):$scope.vehicleInfo.RTOCode=$scope.vehicleDetails.registrationNumber.substr(0,4).toUpperCase(),$scope.quoteParam.policyType=$scope.vehicleDetails.insuranceType.value,$scope.selectedSortOption=$scope.sortTypes[0],"renew"==$scope.quoteParam.policyType?"true"==$scope.vehicleInfo.previousClaim||$scope.vehicleDetails.policyStatus.key==$scope.policyStatusList[0].key||1==$scope.vehicleDetails.policyStatus.key?$scope.quoteParam.ncb=0:$scope.quoteParam.ncb=$scope.vehicleDetails.ncb.value:$scope.quoteParam.ncb=0,buyConfrmFlag?(resultCnfrmBuyFlag=!0,buyConfrmFlag=!1):resultCnfrmBuyFlag=!1,2==$scope.vehicleDetails.idvOption||3==$scope.vehicleDetails.idvOption?$scope.vehicleInfo.best_quote_id=localStorageService.get("bike_best_quote_id"):delete $scope.vehicleInfo.best_quote_id,$scope.wordPressEnabled||"calculateBikeProductQuote"!=_transactionName||($scope.calcQuoteOnVariant=!1,$scope.vehicleInfo.carrierVariants=[],variantList.length>0&&($scope.vehicleInfo.carrierVariants=variantList),localStorageService.get("BIKE_UNIQUE_QUOTE_ID")),1==imauticAutomation&&imatBikeLeadQuoteInfo(localStorageService,$scope,"ViewQuote"),$scope.quoteParam.riders&&($scope.selectedAddOn=$scope.quoteParam.riders.length),$scope.odOnlyPlan&&($scope.quoteParam.policyType="odonly"),$scope.vehicleInfo.idvOption=$scope.vehicleDetails.idvOption,$scope.quote.quoteParam=$scope.quoteParam,$scope.quote.vehicleInfo=$scope.vehicleInfo,$scope.requestId=null,"calculateBikeProductQuote"==_transactionName&&localStorageService.get("bikeProductToBeAddedInCart")&&($scope.quote.carrierId=localStorageService.get("bikeProductToBeAddedInCart").carrierId,$scope.quote.productId=localStorageService.get("bikeProductToBeAddedInCart").productId),localStorageService.get("PROF_QUOTE_ID"),console.log("professionalQuoteBikeCookie in single click is",professionalQuoteBikeCookie),professionalBikeParam)var professionalQuoteCookie=localStorageService.get("professionalQuoteParams");else{professionalQuoteBikeCookie={};professionalQuoteCookie={bikeInfo:{}}}professionalQuoteBikeCookie.registrationYear=$scope.vehicleDetails.regYear,professionalQuoteBikeCookie.TPPolicyStartDate=$scope.vehicleInfo.TPPolicyStartDate,professionalQuoteBikeCookie.TPPolicyExpiryDate=$scope.vehicleInfo.TPPolicyExpiryDate,professionalQuoteBikeCookie.make=$scope.vehicleInfo.make,professionalQuoteBikeCookie.model=$scope.vehicleInfo.model,professionalQuoteBikeCookie.variant=$scope.vehicleInfo.variant,professionalQuoteBikeCookie.registrationPlace=$scope.vehicleInfo.registrationPlace,professionalQuoteCookie.bikeInfo=professionalQuoteBikeCookie,console.log("professionalQuoteCookie is step 1: ",professionalQuoteCookie),localStorageService.set("professionalQuoteParams",professionalQuoteCookie),"renew"==$scope.quoteParam.policyType&&$scope.vehicleDetails.regYear&&(parseInt($scope.vehicleDetails.regYear)<2018?$scope.showBundle=!1:$scope.showBundle=!0),$scope.bikeQuoteRequestFormation($scope.quote),RestAPI.invoke(_transactionName,$scope.quoteRequest).then(function(callback){callback.responseCode==$scope.p365Labels.responseCode.success1?$scope.calculateBikeQuote(callback,_transactionName,!0):($scope.responseCodeList=[],"undefined"!=String($rootScope.bikeQuoteResult)&&$rootScope.bikeQuoteResult.length>0&&($rootScope.bikeQuoteResult.length=0),$rootScope.bikeQuoteResult=[],$rootScope.bikeQuoteRequest=[],$scope.errorMessage(callback.message))})})},100):($scope.idvDetailsModal=!1,$scope.riderDetailsModal=!1,$scope.OdOnlyModal=!1)},$scope.setRangePrevPolicyStartDate=function(){var prevPolStartDateOption={},tempCalcPrevPolStartDate="";$scope.productValidation.isShortFallSupported?(convertStringFormatToDate($scope.vehicleInfo.PreviousPolicyExpiryDate,function(formattedPrevPolExpDate){var tempPreviousPolicyExpiryDate=new Date(angular.copy(formattedPrevPolExpDate));tempCalcPrevPolStartDate=new Date(tempPreviousPolicyExpiryDate.setFullYear(new Date(tempPreviousPolicyExpiryDate).getFullYear()-1)),tempCalcPrevPolStartDate=new Date(new Date(String(tempCalcPrevPolStartDate)).setDate(new Date(String(tempCalcPrevPolStartDate)).getDate()+1)),prevPolStartDateOption.maximumDateLimit=formattedPrevPolExpDate}),"undefined"!=String($scope.prevPolicyStartDateWarning)&&""!=$scope.prevPolicyStartDateWarning?convertStringFormatToDate($scope.vehicleInfo.dateOfRegistration,function(formattedRegistrationDate){prevPolStartDateOption.minimumDateLimit=formattedRegistrationDate}):prevPolStartDateOption.minimumDateLimit=tempCalcPrevPolStartDate):(convertStringFormatToDate($scope.vehicleInfo.PreviousPolicyExpiryDate,function(formattedPrevPolExpDate){var tempPreviousPolicyExpiryDate=new Date(angular.copy(formattedPrevPolExpDate));tempCalcPrevPolStartDate=new Date(tempPreviousPolicyExpiryDate.setFullYear(new Date(tempPreviousPolicyExpiryDate).getFullYear()-1)),tempCalcPrevPolStartDate=new Date(new Date(String(tempCalcPrevPolStartDate)).setDate(new Date(String(tempCalcPrevPolStartDate)).getDate()+1))}),"undefined"!=String($scope.prevPolicyStartDateWarning)&&""!=$scope.prevPolicyStartDateWarning?convertStringFormatToDate($scope.vehicleInfo.dateOfRegistration,function(formattedRegistrationDate){prevPolStartDateOption.minimumDateLimit=formattedRegistrationDate,prevPolStartDateOption.maximumDateLimit=formattedRegistrationDate}):(prevPolStartDateOption.minimumDateLimit=tempCalcPrevPolStartDate,prevPolStartDateOption.maximumDateLimit=tempCalcPrevPolStartDate)),prevPolStartDateOption.changeMonth=!0,prevPolStartDateOption.changeYear=!0,prevPolStartDateOption.dateFormat="dd/mm/yy",$scope.previousPolicyStartDateOptions=setP365DatePickerProperties(prevPolStartDateOption)},$scope.validatePrevPolicyStartDate=function(){"undefined"!==String($scope.vehicleDetails.PreviousPolicyStartDate)&&"undefined"!==String($scope.vehicleInfo.PreviousPolicyExpiryDate)&&convertStringFormatToDate($scope.vehicleDetails.PreviousPolicyStartDate,function(formattedPrevPolStartDate){convertStringFormatToDate($scope.vehicleInfo.PreviousPolicyExpiryDate,function(formattedPrevPolExpDate){convertStringFormatToDate($scope.vehicleInfo.dateOfRegistration,function(formattedDateOfRegistration){var selPreviousPolicyExpiryDate=angular.copy(formattedPrevPolExpDate),tempCalcPrevPolStartDate=new Date(selPreviousPolicyExpiryDate.setFullYear(selPreviousPolicyExpiryDate.getFullYear()-1));tempCalcPrevPolStartDate=new Date(tempCalcPrevPolStartDate.setDate(tempCalcPrevPolStartDate.getDate()+1)),convertDateFormatToString(tempCalcPrevPolStartDate,function(formattedPrevPolStartDate){$scope.vehicleDetails.PreviousPolicyStartDate=formattedPrevPolStartDate})})})})},$scope.$watch("vehicleInfo.PreviousPolicyExpiryDate",function(){$scope.validatePrevPolicyStartDate()}),$scope.validateRegistrationDate=function(){"undefined"!==String($scope.vehicleInfo.dateOfRegistration)&&convertStringFormatToDate($scope.vehicleInfo.dateOfRegistration,function(formattedRegistrationDate){var selDateOfRegistration=new Date(angular.copy($scope.vehicleInfo.dateOfRegistration));new Date(angular.copy($scope.vehicleDetails.PreviousPolicyStartDate))<selDateOfRegistration?($scope.vehicleDetails.PreviousPolicyStartDate=$scope.vehicleInfo.dateOfRegistration,$scope.validatePrevPolicyStartDate()):($scope.prevPolicyStartDateWarning="",convertStringFormatToDate($scope.vehicleInfo.PreviousPolicyExpiryDate,function(formattedPolicyExpiryDate){var tempPreviousPolicyExpiryDate=new Date(angular.copy(formattedPolicyExpiryDate)),tempCalcPrevPolStartDate=new Date(tempPreviousPolicyExpiryDate.setFullYear(new Date(tempPreviousPolicyExpiryDate).getFullYear()-1));tempCalcPrevPolStartDate=new Date(new Date(String(tempCalcPrevPolStartDate)).setDate(new Date(String(tempCalcPrevPolStartDate)).getDate()+1)),convertDateFormatToString(tempCalcPrevPolStartDate,function(formattedPrevPolStartDate){$scope.vehicleDetails.PreviousPolicyStartDate=formattedPrevPolStartDate})})),$scope.setRangePrevPolicyExpiryDate(),$scope.calculatedVehicleRegistrationDate=getDateForDisplay($scope.vehicleInfo.dateOfRegistration),$scope.vehicleDetails.regYear=$scope.vehicleInfo.dateOfRegistration.split("/")[2],$scope.manufacturingYearList=listManufactureYear($scope.vehicleDetails.regYear,2),$scope.vehicleDetails.manufacturingYear=$scope.manufacturingYearList[0],$scope.registrationDateError=""})},$scope.initTwoWheelerResultCtrl=function(){var regDateOption={};$scope.vehicleDetails.insuranceType.type!=bikeInsuranceTypeGeneric[1].type?((regDateOption={}).minimumDayLimit=-9,regDateOption.maximumDayLimit=30,regDateOption.changeMonth=!0,regDateOption.changeYear=!0,regDateOption.dateFormat="dd/mm/yy",$scope.dateOfRegistrationOptions=setP365DatePickerProperties(regDateOption)):((regDateOption={}).minimumYearLimit="-15Y",regDateOption.maximumYearLimit="-0Y",regDateOption.changeMonth=!0,regDateOption.changeYear=!0,regDateOption.dateFormat="dd/mm/yy",$scope.dateOfRegistrationOptions=setP365DatePickerProperties(regDateOption)),$scope.setRangePrevPolicyExpiryDate()},$scope.customFilterBike(),$location.search().sharePDF){if($rootScope.parseCarrierList)for(j=0;j<$rootScope.bikeQuoteResult.length;j++)if($rootScope.bikeQuoteResult[j].carrierId==$rootScope.parseCarrierList[0]){sharePDFQuote=$rootScope.bikeQuoteResult[j];break}var getImageFromUrl=function(url,callback){var img=new Image;img.onError=function(){alert('Cannot load image: "'+url+'"')},img.onload=function(){callback(img)},img.src=url},createPDF=function(imgData){var doc=new jsPDF;doc.internal.pageSize.width,doc.internal.pageSize.height;$scope.displayPDF=!0,console.log("sharePDFQuote is : ",sharePDFQuote);var doc_name=sharePDFQuote.insuranceCompany+"_premiumBreakup.pdf";doc.addImage(imgData,"PNG",10,10,35,15,"p365logo");var yaxis=20;doc.setTextColor(100),doc.setFontSize(18),doc.text(10,40,"Premium Breakup"),doc.setTextColor(150),doc.setFontSize(12),doc.text(10,50,"Company Name :"),doc.text(60,50,sharePDFQuote.insuranceCompany),doc.text(10,60,"Vehicle Details :");var vehicleDetails=$scope.vehicleInfo.make+""+$scope.vehicleInfo.model+"  "+$scope.vehicleInfo.variant;doc.text(60,60,vehicleDetails),doc.text(10,80,"Basic coverage :"),doc.text(60,90,"Basic own damage"),doc.text(120,90,String(Math.round(sharePDFQuote.odpremium))),doc.text(60,100,"Basic third party"),doc.text(120,100,String(Math.round(sharePDFQuote.tppremium)));var totalBasicCoverage1="+"+(Number(sharePDFQuote.odpremium)+Number(sharePDFQuote.tppremium));doc.text(120,110,totalBasicCoverage1);yaxis=110;yaxis+=10;if(sharePDFQuote.totalDiscountAmount>0){doc.text(10,yaxis,"Savings/Discounts :");for(var i=0;i<sharePDFQuote.discountList.length;i++)yaxis+=10,doc.text(60,yaxis,sharePDFQuote.discountList[i].type),doc.text(120,yaxis,String(sharePDFQuote.discountList[i].discountAmount));yaxis+=10;var totalDiscountAmount="-"+sharePDFQuote.totalDiscountAmount;doc.text(120,yaxis,totalDiscountAmount),yaxis+=10}if(sharePDFQuote.ridersList){var riderCount=0;for(i=0;i<sharePDFQuote.ridersList.length;i++)"NA"!=sharePDFQuote.ridersList[i].riderType&&"included"!=sharePDFQuote.ridersList[i].riderType&&sharePDFQuote.ridersList[i].riderValue>0&&(0==riderCount&&doc.text(10,yaxis,"Add-on cover :"),riderCount+=1,yaxis+=10,doc.text(60,yaxis,sharePDFQuote.ridersList[i].riderName),doc.text(120,yaxis,String(sharePDFQuote.ridersList[i].riderValue)));sharePDFQuote.totalRiderAmount>0?(yaxis+=10,setTimeout(function(){console.log("inside rider list timeout-2"),yaxis+=10;var totalRiderAmount="+"+sharePDFQuote.totalRiderAmount;doc.text(120,yaxis,totalRiderAmount),yaxis+=10},500)):yaxis+=10}setTimeout(function(){yaxis+=10,doc.text(10,yaxis,"Net Premium :"),doc.text(120,yaxis,String(sharePDFQuote.netPremium)),yaxis+=10,doc.text(10,yaxis,"GST :"),doc.text(120,yaxis,String(sharePDFQuote.serviceTax)),yaxis+=10,doc.text(10,yaxis,"Total Premium :"),doc.text(120,yaxis,String(sharePDFQuote.grossPremium)),yaxis+=10,doc.text(10,yaxis,"Total Payable :"),doc.text(120,yaxis,String(sharePDFQuote.grossPremium)),doc.setTextColor(100),doc.setFontSize(10),yaxis+=30,doc.text(70,yaxis,"Navnit Insurance Broking Private Limited"),doc.setTextColor(150),doc.setFontSize(10),yaxis+=5,doc.text(40,yaxis,"172 Solitaire Corporate Park Building No 1,7th Floor,Andheri-Ghatkopar Link Road,"),yaxis+=5,doc.text(40,yaxis,"Andheri(East),Mumbai,400093,Maharashtra,India"),yaxis+=5,doc.text(40,yaxis,"Product Information is authentic and solely based on the information received from the insurer"),yaxis+=5,doc.text(40,yaxis,"IRDAI Broker Licence Code No"),yaxis+=5,doc.text(40,yaxis,"IRDA/ CB 446/09/2021"),$scope.displayPDF=!1,doc.save(doc_name)},500)};idepProdEnv?getImageFromUrl("https://www.policies365.com/app/img/clogo/logo.png",createPDF):getImageFromUrl("https://www.policies365.com/app/img/clogo/logo.png",createPDF)}($rootScope.flag||$rootScope.isOlarked)&&($scope.riderListCopy=angular.copy($rootScope.bikeAddOnCoversList.selectedAddOnCovers),localStorageService.get("quoteUserInfo")&&($scope.EmailChoices[0].username=localStorageService.get("quoteUserInfo").emailId),$rootScope.loading=!1,$rootScope.flag=!1,$rootScope.isOlarked=!1),$scope.initTwoWheelerResultCtrl()},$scope.init(),$scope.hideResultCnfrmBuyModal=function(){$scope.modalResultCnfrmBuy=!1},$scope.submitResultCnfrmBuy=function(){$scope.modalResultCnfrmBuy=!1,$scope.resultCnfrmBuy.$dirty?($scope.resultCnfrmBuy.$setPristine(),resultCnfrmBuyFlag=!0,buyConfrmFlag=!0,$scope.quoteBikeInputForm.$setDirty(),$scope.singleClickBikeQuote()):$rootScope.baseEnvEnabled&&!$rootScope.wordPressEnabled?($rootScope.loading=!0,$location.path("/buyTwoWheeler").search({quoteId:localStorageService.get("BIKE_UNIQUE_QUOTE_ID"),carrierId:$scope.selectedProduct.carrierId,productId:$scope.selectedProduct.productId,lob:$scope.selectedProduct.quoteType})):($scope.quoteUserInfo=localStorageService.get("quoteUserInfo"),$rootScope.loading=!0,$location.path("/buyTwoWheeler"))},$scope.selectProduct=function(selectedProduct,_redirectTOResult){_redirectTOResult=0!=_redirectTOResult||_redirectTOResult;var QUOTE_ID=localStorageService.get("BIKE_UNIQUE_QUOTE_ID");updateSelectedProduct(RestAPI,QUOTE_ID,selectedProduct,function(updatedProductCallback){if(updatedProductCallback.data){var updatedProduct=updatedProductCallback.data;updatedProduct.selectedCarrier&&updatedProduct.selectedProduct&&($rootScope.selectedCarrierIdForBike=updatedProduct.selectedCarrier,$rootScope.selectedProductIdForBike=updatedProduct.selectedProduct),_redirectTOResult&&$location.path("/professionalJourneyResult")}})},$scope.confirmBuyProduct=function(_selectedProduct){resultCnfrmBuyFlag=!0,$scope.buyProduct(_selectedProduct)},$scope.buyProduct=function(selectedProduct){$scope.buyScreenTemplate(selectedProduct)},$scope.buyScreenTemplate=function(selectedProduct){localStorageService.set("bikeSelectedProduct",selectedProduct),$scope.selectedProduct=selectedProduct,$scope.requestId&&(2!=$scope.vehicleDetails.idvOption&&3!=$scope.vehicleDetails.idvOption||(localStorageService.set("BIKE_UNIQUE_QUOTE_ID",$scope.requestId),selectedProduct.encryptedQuoteId&&localStorageService.set("BIKE_UNIQUE_QUOTE_ID_ENCRYPTED",selectedProduct.encryptedQuoteId))),1==imauticAutomation&&imatBuyClicked(localStorageService,$scope,"BuyClicked");var buyScreenParam={documentType:"proposalScreenConfig"};buyScreenParam.businessLineId=localStorageService.get("selectedBusinessLineId"),buyScreenParam.carrierId=selectedProduct.carrierId,buyScreenParam.productId=selectedProduct.productId,buyScreenParam.QUOTE_ID=localStorageService.get("BIKE_UNIQUE_QUOTE_ID"),$rootScope.voluntaryDeductable=0,$rootScope.antiTheftDeviceAmount=0;for(var i=0;i<selectedProduct.discountList.length;i++)"Voluntary Deductible Discount"==selectedProduct.discountList[i].type&&selectedProduct.discountList[i].discountAmount>0&&($rootScope.voluntaryDeductable=selectedProduct.discountList[i].discountAmount),"Anti-Theft Discount"==selectedProduct.discountList[i].type&&selectedProduct.discountList[i].discountAmount>0&&($rootScope.antiTheftDeviceAmount=selectedProduct.discountList[i].discountAmount);getDocUsingParam(RestAPI,$scope.p365Labels.transactionName.productDataReader,buyScreenParam,function(buyScreen){buyScreen.responseCode==$scope.p365Labels.responseCode.success?(localStorageService.set("buyScreen",buyScreen.data),$scope.productValidation=buyScreen.data.validation,resultCnfrmBuyFlag||("renew"==$scope.quoteParam.policyType&&$scope.setRangePrevPolicyStartDate(),$scope.modalResultCnfrmBuy=!0),resultCnfrmBuyFlag&&($rootScope.baseEnvEnabled&&!$rootScope.wordPressEnabled?($rootScope.loading=!0,$location.path("/ipos").search({quoteId:localStorageService.get("BIKE_UNIQUE_QUOTE_ID"),carrierId:$scope.selectedProduct.carrierId,productId:$scope.selectedProduct.productId,lob:$scope.selectedProduct.quoteType})):($rootScope.loading=!0,$location.path("/buyTwoWheeler")),$scope.$apply())):(console.log("unable to proceed due to failed transaction name: findAppConfig for  bikeCarrierList"),$rootScope.P365Alert("Policies365",$scope.p365Labels.validationMessages.generalisedErrMsg,"Ok"))})},$scope.validateRegistrationNumber=function(registrationNumber){"undefined"!=String(registrationNumber)&&((registrationNumber=registrationNumber.replace(/[^a-zA-Z0-9]/gi,"")).trim().match(/([a-zA-Z]{1,3}[0-9]{1,4})/g)&&registrationNumber.trim().length<=7&&registrationNumber.trim().length>=2?$scope.regNumStatus=!1:$scope.regNumStatus=!0,$scope.vehicleInfo.registrationNumber=registrationNumber.trim())},$rootScope.signout=function(){$rootScope.userLoginStatus=!1;var userLoginInfo={username:""};userLoginInfo.status=$rootScope.userLoginStatus,localStorageService.set("userLoginInfo",userLoginInfo),$location.path("/quote")},$scope.state=!1,$scope.toggleState=function(){$scope.state=!$scope.state},$scope.openMenu=function($mdOpenMenu,ev){$mdOpenMenu(ev),setTimeout(function(){$(".md-click-catcher").click(function(){$scope.activeMenu=""})},100)},$scope.clickForActive=function(item){$scope.activeMenu=item},$scope.clickForViewActive=function(item){$scope.activeViewMenu=item},$scope.clickForViewActive("Compare"),$scope.EmailChoices=[{username:"",addNew:!0,paramMap:{docId:"",LOB:localStorageService.get("selectedBusinessLineId").toString(),userId:"",selectedPolicyType:"",make:"",model:"",registrationNum:"",Variant:""}}],$scope.modalEmailView=!1,$scope.emailPopUpDisabled=!1,localStorageService.get("quoteUserInfo")&&($scope.EmailChoices[0].username=localStorageService.get("quoteUserInfo").emailId),$scope.addNewChoice=function(){var newItemNo=$scope.EmailChoices.length+1;newItemNo<=3&&($scope.EmailChoices.push({username:""}),$scope.EmailChoices[0].addNew=!1,$scope.EmailChoices[1].addNew=!0,$scope.emailPopUpDisabled=!1),3==newItemNo&&($scope.EmailChoices[2].addNew=!1,$scope.emailPopUpDisabled=!0)},$scope.removeChoice=function(){var lastItem=$scope.EmailChoices.length-1;$scope.EmailChoices.splice(lastItem)},$scope.showForShare=function(data){if(!$rootScope.parseCarrierList)return!0;for(var j=0;j<$rootScope.parseCarrierList.length;j++)if(data.carrierId==$rootScope.parseCarrierList[j])return!0},$scope.sendEmail=function(){$scope.flagArray=[];for(var index=-1,i=0;i<$scope.EmailChoices.length;i++){if(""!=$scope.EmailChoices[i].username&&void 0!=$scope.EmailChoices[i].username){var encodeQuote=localStorageService.get("BIKE_UNIQUE_QUOTE_ID_ENCRYPTED"),encodeLOB=String(localStorageService.get("selectedBusinessLineId")),encodeEmailId=$scope.EmailChoices[i].username,encodeCarrierList=[];$scope.insuranceCompanyList.selectedInsuranceCompany.length>0?(encodeCarrierList=$scope.insuranceCompanyList.selectedInsuranceCompany,jsonEncodeCarrierList=JSON.stringify(encodeCarrierList)):encodeCarrierList.push("ALL"),$scope.EmailChoices[i].funcType="SHAREVEHICLEQUOTE",$scope.EmailChoices[i].isBCCRequired="Y",$scope.EmailChoices[i].paramMap={},$scope.EmailChoices[i].paramMap.docId=String(encodeQuote),$scope.EmailChoices[i].paramMap.LOB=String(encodeLOB),$scope.EmailChoices[i].paramMap.vehicleName=$scope.selectedItem.displayVehicle,$scope.EmailChoices[i].paramMap.userId=String(encodeEmailId),$scope.EmailChoices[i].paramMap.carriers=String(jsonEncodeCarrierList),$scope.EmailChoices[i].paramMap.selectedPolicyType="Two Wheeler",$rootScope.vehicleDetails.registrationNumber?$scope.EmailChoices[i].paramMap.registrationNum=$rootScope.vehicleDetails.registrationNumber.toUpperCase():$scope.EmailChoices[i].paramMap.registrationNum=$scope.vehicleInfo.registrationPlace;var url=shareQuoteLink+$scope.EmailChoices[i].paramMap.docId+"&LOB="+$scope.EmailChoices[i].paramMap.LOB+"&userId="+$scope.EmailChoices[i].paramMap.userId+"&carriers="+$scope.EmailChoices[i].paramMap.carriers,request={},header={};header.messageId=messageIDVar,header.campaignID=campaignIDVar,header.source=sourceOrigin,header.transactionName=sendEmail,header.deviceId=deviceIdOrigin,request.header=header;var arr=$scope.EmailChoices,body={};body.longURL=shareQuoteLink+$scope.EmailChoices[i].paramMap.docId+"&LOB="+$scope.EmailChoices[i].paramMap.LOB+"&userId="+$scope.EmailChoices[i].paramMap.userId+"&carriers="+$scope.EmailChoices[i].paramMap.carriers,$http({method:"POST",url:getShortURLLink,data:body}).success(function(shortURLResponse){shortURLResponse.responseCode==$scope.p365Labels.responseCode.success?(index++,request.body=arr[index],request.body.paramMap.url=url,$http({method:"POST",url:getQuoteCalcLink,data:request}).success(function(callback){var emailResponse=JSON.parse(callback),receipientNum=$scope.EmailChoices.length;i==receipientNum&&(emailResponse.responseCode==$scope.p365Labels.responseCode.success?($scope.shareEmailModal=!1,$scope.modalEmailView=!0):localStorageService.set("emailDetails",void 0))})):console.log("error in shoren url service ")})}}},$scope.showShareEmailModal=function(){localStorageService.get("quoteUserInfo")&&localStorageService.get("quoteUserInfo").emailId&&$rootScope.wordPressEnabled?(1==imauticAutomation?imatShareQuote(localStorageService,$scope,"ShareQuote"):$scope.sendEmail(),$scope.shareEmailModal=!1,$scope.modalEmailView=!0):$scope.shareEmailModal=!0},$scope.sendQuotesByEmail=function(){var quoteUserInfo={};if($scope.EmailChoices.length>0){if(localStorageService.get("quoteUserInfo"))(quoteUserInfo=localStorageService.get("quoteUserInfo")).emailId=$scope.EmailChoices[0].username,localStorageService.set("quoteUserInfo",quoteUserInfo);else(quoteUserInfo={}).emailId=$scope.EmailChoices[0].username,localStorageService.set("quoteUserInfo",quoteUserInfo);$rootScope.wordPressEnabled&&1==imauticAutomation?imatShareQuote(localStorageService,$scope,"ShareQuote"):$scope.sendEmail(),$scope.shareEmailModal=!1,$scope.modalEmailView=!0}},$scope.deleteReceipient=function(index){$scope.EmailChoices.splice(index,1),$scope.EmailChoices.length<3&&($scope.emailPopUpDisabled=!1,1==$scope.EmailChoices.length?($scope.EmailChoices[0].addNew=!0,$scope.EmailChoices[1].addNew=!1):($scope.EmailChoices[0].addNew=!1,$scope.EmailChoices[1].addNew=!0))},$scope.hideEmailModal=function(){$scope.modalEmailView=!1,$scope.shareEmailModal=!1},$scope.leadCreationUserInfo=function(){var userInfoWithQuoteParam={};if($scope.selectedBusinessLineId=localStorageService.get("selectedBusinessLineId"),localStorageService.set("quoteUserInfo",$scope.quoteUserInfo),userInfoWithQuoteParam.quoteParam=localStorageService.get("bikeQuoteInputParamaters").quoteParam,userInfoWithQuoteParam.vehicleInfo=localStorageService.get("bikeQuoteInputParamaters").vehicleInfo,userInfoWithQuoteParam.contactInfo=$scope.quoteUserInfo,$rootScope.agencyPortalEnabled){const localdata=JSON.parse(localStorage.getItem("finalLocalStorage"));userInfoWithQuoteParam.contactInfo.createLeadStatus=!1,userInfoWithQuoteParam.requestSource=sourceOrigin,$location.search("createLead","false"),localdata&&(userInfoWithQuoteParam.userName=localdata.username,userInfoWithQuoteParam.agencyId=localdata.agencyId)}else $scope.quoteUserInfo.emailId=$rootScope.decryptedEmailId,userInfoWithQuoteParam.requestSource="web";null!=$scope.quoteUserInfo&&(""==$scope.quoteUserInfo.messageId||$scope.quoteUserInfoForm.$dirty?RestAPI.invoke($scope.p365Labels.transactionName.createLead,userInfoWithQuoteParam).then(function(callback){callback.responseCode==$scope.p365Labels.responseCode.success&&(messageIDVar=callback.data.messageId,$scope.quoteUserInfo.messageId=messageIDVar,localStorageService.set("quoteUserInfo",$scope.quoteUserInfo),$scope.modalView=!1)}):messageIDVar=$scope.quoteUserInfo.messageId)},$scope.pdfviewer=function(data){console.log("inside pdf viewer");var encodeQuote=localStorageService.get("BIKE_UNIQUE_QUOTE_ID_ENCRYPTED");$rootScope.encryptedQuote_Id=encodeQuote;var encodeLOB=String(localStorageService.get("selectedBusinessLineId")),encodeEmailId=$scope.EmailChoices[0].username;(jsonEncodeCarrierList=[]).push(data.carrierId),$rootScope.encryptedQuote_Id=encodeQuote,$rootScope.encryptedLOB=encodeLOB,$rootScope.encryptedEmail=encodeEmailId,$rootScope.encryptedCarriers=jsonEncodeCarrierList;var body={};body.longURL=shareQuoteLink+String($rootScope.encryptedQuote_Id)+"&LOB="+String($rootScope.encryptedLOB)+"&userId="+String($rootScope.encryptedEmail)+"&carriers="+String($rootScope.encryptedCarriers)+"&sharePDF=true",$http({method:"POST",url:getShortURLLink,data:body}).success(function(shortURLResponse){var shortURL=shortURLResponse.data.shortURL;if(shortURLResponse.responseCode==$scope.p365Labels.responseCode.success){var validateAuthParam={paramMap:{}};validateAuthParam.mobileNumber=localStorageService.get("quoteUserInfo").mobileNumber,validateAuthParam.paramMap.firstName=localStorageService.get("quoteUserInfo").firstName,validateAuthParam.funcType="SharePDF",console.log("quote user info in pdf viewer function is: ",localStorageService.get("quoteUserInfo"));var encodeQuote=localStorageService.get("BIKE_UNIQUE_QUOTE_ID_ENCRYPTED");$rootScope.encryptedQuote_Id=encodeQuote;var encodeLOB=String(localStorageService.get("selectedBusinessLineId")),encodeEmailId=$scope.EmailChoices[0].username;(jsonEncodeCarrierList=[]).push(data.carrierId),$rootScope.encryptedQuote_Id=encodeQuote,$rootScope.encryptedLOB=encodeLOB,$rootScope.encryptedEmail=encodeEmailId,$rootScope.encryptedCarriers=jsonEncodeCarrierList,validateAuthParam.paramMap.docId=String($rootScope.encryptedQuote_Id),validateAuthParam.paramMap.LOB=String($rootScope.encryptedLOB),validateAuthParam.paramMap.userId=String($rootScope.encryptedEmail),$rootScope.encryptedCarriers&&(validateAuthParam.paramMap.carriers=String($rootScope.encryptedCarriers)),validateAuthParam.paramMap.longURL=shortURL||shareQuoteLink+String($rootScope.encryptedQuote_Id)+"&LOB="+String($rootScope.encryptedLOB)+"&userId="+String($rootScope.encryptedEmail)+"&carriers="+String($rootScope.encryptedCarriers)+"&sharePDF=true",console.log("validateAuthParam.paramMap is: ",validateAuthParam),getDocUsingParam(RestAPI,"sendSMS",validateAuthParam,function(createOTP){createOTP.responseCode==$scope.p365Labels.responseCode.success?($scope.PDFURL=$sce.trustAsResourceUrl(validateAuthParam.paramMap.longURL),$scope.sharePDF=!0,console.log("sms sent successfully for share pdf")):$rootScope.P365Alert("Policies365","unable to sent SMS,right now","Ok")})}else console.log("failure response for shorten url service")})},$scope.hideSharePDFModal=function(){$scope.sharePDF=!1},$scope.openBikePopup=function(selectedTab,_data){_data.netPremium&&(_data.netPremium=Math.floor(Number(_data.netPremium))),_data.totalDiscountAmount&&(_data.totalDiscountAmount=Number(_data.totalDiscountAmount)),_data.totalRiderAmount&&(_data.totalRiderAmount=Number(_data.totalRiderAmount));for(var i=0;i<_data.discountList.length;i++)_data.discountList[i].discountAmount&&(_data.discountList[i].discountAmount=Number(_data.discountList[i].discountAmount));_data.maxIdvValue=Number(_data.maxIdvValue),_data.minIdvValue=Number(_data.minIdvValue),_data.insuredDeclareValue=Number(_data.insuredDeclareValue),_data.serviceTax=Number(_data.serviceTax),_data.odpremium=Number(_data.odpremium),_data.paidDriverCover?_data.paidDriverCover=Number(_data.paidDriverCover):_data.paidDriverCover=0,_data.tppremium=Number(_data.tppremium),$scope.bikeProductToBeAddedInCart=_data,$rootScope.selectedTabBike=selectedTab,$scope.premiumModalBike=!$scope.premiumModalBike},$scope.hidePremiumModalBike=function(){$scope.premiumModalBike=!1},$scope.PACoverValidity=function(applicable){$rootScope.personalAccidentValidity=applicable?[1,5]:[]},$scope.togglePACover=function(){$scope.PACoverFlag=0,$scope.isPACoverApplicableCopyForReset=angular.copy(!$scope.BikePACoverDetails.isPACoverApplicable),$scope.PACoverValidity($scope.BikePACoverDetails.isPACoverApplicable),$scope.displayForChange=!1,$scope.BikePACoverDetails.isPACoverApplicable?($scope.BikePACoverDetails={},$scope.BikePACoverDetails.isPACoverApplicable=!0,$scope.PACoverModal=!1,$scope.PACoverFlag=1,$scope.singleClickBikeQuote()):($scope.PACoverModal=!0,$scope.BikePACoverDetails.existingInsurance=!0)},$scope.changePolicyPlan=function(){$scope.odOnlyPlan=!$scope.odOnlyPlan,$scope.odOnlyPlan&&$scope.showOdOnlyVModal(),console.log("inside changePolicyPlan function",$scope.odOnlyPlan);var prevPolExpDateOption={};$scope.vehicleInfo.TPPolicyExpiryDat=$scope.vehicleInfo.PreviousPolicyExpiryDate,prevPolExpDateOption.minimumDayLimit=$scope.vehicleInfo.PreviousPolicyExpiryDate,prevPolExpDateOption.changeMonth=!0,prevPolExpDateOption.changeYear=!0,prevPolExpDateOption.dateFormat="dd/mm/yy",$scope.tpPolicyExpiryDate=setP365DatePickerProperties(prevPolExpDateOption),convertStringFormatToDate($scope.vehicleInfo.PreviousPolicyExpiryDate,function(formattedPrevpolicyExpirytDate){convertStringFormatToDate($scope.vehicleInfo.TPPolicyExpiryDate,function(formattedTPpolicyExpiryDate){var selPrevpolicyExpirytDate=angular.copy(formattedPrevpolicyExpirytDate),tempCalcTPPolicyExpiryDate=new Date(selPrevpolicyExpirytDate.setFullYear(selPrevpolicyExpirytDate.getFullYear()));tempCalcTPPolicyExpiryDate=new Date(tempCalcTPPolicyExpiryDate.setDate(tempCalcTPPolicyExpiryDate.getDate()+1)),convertDateFormatToString(tempCalcTPPolicyExpiryDate,function(formattedTPpolicyExpiryDate){$scope.vehicleInfo.TPPolicyExpiryDate=formattedTPpolicyExpiryDate})})}),prevPolExpDateOption.minimumDayLimit=-1825,prevPolExpDateOption.maximumDayLimit=0,prevPolExpDateOption.changeMonth=!0,prevPolExpDateOption.changeYear=!0,prevPolExpDateOption.dateFormat="dd/mm/yy",$scope.tpPolicyStartDate=setP365DatePickerProperties(prevPolExpDateOption)},$scope.togglePAQuestions=function(key){$scope.BikePACoverDetails={},$scope.BikePACoverDetails.isPACoverApplicable=!1,$scope.BikePACoverDetails[key]=!0},$scope.showPACoverModal=function(){$scope.displayForChange=!0,$scope.PACoverModal=!0},$scope.hidePACoverModal=function(){$scope.PACoverModal=!1,$scope.displayForChange||($scope.BikePACoverDetails.isPACoverApplicable=$scope.isPACoverApplicableCopyForReset)},$scope.showRiderModal=function(){localStorageService.get("bikeQuoteInputParamaters").quoteParam.riders&&($scope.selectedAddOn=localStorageService.get("bikeQuoteInputParamaters").quoteParam.riders.length),$scope.riderDetailsModal=!$scope.riderDetailsModal},$scope.showIDVModal=function(){$scope.idvDetailsModal=!$scope.idvDetailsModal},$scope.showOdOnlyVModal=function(){$scope.OdOnlyModal=!$scope.OdOnlyModal,console.log("inside show od only modal ",$scope.odOnlyPlan)},$scope.insuranceTypeModal=!1,$scope.showInsuranceTypeModal=function(){$scope.insuranceTypeModal=!0},$scope.hideInsuranceTypeModal=function(){$scope.insuranceTypeModal=!1},$scope.hideRiderDetailsModal=function(){$scope.resetRiderSelection(),$scope.riderDetailsModal=!1},$scope.hideOdOnlyDetailsModal=function(){$scope.OdOnlyModal=!1,$scope.odOnlyPlan=!1,$scope.resetRiderSelection()},$scope.hideIDVModal=function(){$scope.toggleIDVChangeClose(),$scope.idvDetailsModal=!1},$scope.showVehicleOwnerModal=function(){$scope.ownerTypeModal=!$scope.ownerTypeModal,$scope.tempOwner=angular.copy($scope.quoteParam.ownedBy)},$scope.hideVehicleOwnerModal=function(){$scope.quoteParam.ownedBy=angular.copy($scope.tempOwner),$scope.ownerTypeModal=!1},$scope.redirectToResult=function(){$scope.leadCreationUserInfo()},$scope.redirectToAPResult=function(){$scope.leadCreationUserInfo()},$scope.missionCompled=function(){$rootScope.loading=!1},$scope.changeCarrierVehicleVariants=function(){$scope.showCarrierVehicleVariants=!$scope.showCarrierVehicleVariants,variantList=[],0==$scope.carrierVariantList.length&&!$scope.noCarrierVariantFound&&$scope.showCarrierVehicleVariants&&($scope.displayLoader=!0,$scope.noCarrierVariantFound=!1)},$(".activateFooter").hide(),$(".activateHeader").hide()}]);