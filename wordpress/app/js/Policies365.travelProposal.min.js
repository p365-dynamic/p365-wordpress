var messageIDVar,travelProposalRequestDef={premiumDetails:{},proposerDetails:{salutation:"",firstName:"",lastName:"",dateOfBirth:"",gender:"",mobileNumber:"",emailId:"",maritalStatus:"",isCommuniationAddressSameAsPermanant:"Y",communicationAddress:{houseNo:"",addressLine:"",city:"",state:"",pincode:""},permanantAddress:{houseNo:"",addressLine:"",city:"",state:"",pincode:""}},travelDetails:{tripType:"",source:"",destinations:[{country:"",countryCode:"",continent:"",continentCode:""}],startDate:"",endDate:"",policyTerm:"",policyTermIn:""},travellerDetails:[{id:"",salutation:"",firstName:"",lastName:"",dateOfBirth:"",gender:"",mobileNo:"",emailId:"",passportNo:"",aadharNo:"",pancardNo:"",nomineeDetails:{firstName:"",lastName:"",dateOfBirth:"",gender:"",relation:""},appointeeDetails:{firstName:"",lastName:"",dateOfBirth:"",gender:"",relation:""},medicalDetails:{}}]},diseaseListGen=[{description:"Abdomen related",disease:"Abdomen related",diseaseCode:"ABRE",diseaseType:"OrganDonar",diseaseId:13},{description:"Alzheimer disease",disease:"Alzheimer disease",diseaseCode:"ALDI",diseaseType:"Critical",diseaseId:15},{description:"Arthritis",disease:"Arthritis",diseaseCode:"ARTH",diseaseType:"Other",diseaseId:10},{description:"Asthma",disease:"Asthma",diseaseCode:"ASTH",diseaseType:"Other",diseaseId:4},{description:"Brain & Spinal cord disorders",disease:"Brain & Spinal cord disorders",diseaseCode:"BASD",diseaseType:"Critical",diseaseId:11},{description:"Cancer",disease:"Cancer",diseaseCode:"CANC",diseaseType:"Critical",diseaseId:12},{description:"Diabetes",disease:"Diabetes",diseaseCode:"DIAB",diseaseType:"Other",diseaseId:1},{description:"Ear, Nose & Throat related",disease:"Ear, Nose & Throat related",diseaseCode:"ENTR",diseaseType:"Other",diseaseId:3},{description:"Gynaecology",disease:"Gynaecology",diseaseCode:"GYNA",diseaseType:"Other",diseaseId:7},{description:"Heart ailments",disease:"Heart ailments",diseaseCode:"HEAL",diseaseType:"Other",diseaseId:5},{description:"High cholesterol",disease:"High cholesterol",diseaseCode:"CODI",diseaseType:"Other",diseaseId:8},{description:"Hypertension",disease:"Hypertension",diseaseCode:"HYPE",diseaseType:"Other",diseaseId:9},{description:"Kidney related",disease:"Kidney related",diseaseCode:"KIRE",diseaseType:"OrganDonar",diseaseId:14},{description:"Parkinson's disease",disease:"Parkinson's disease",diseaseCode:"PADI",diseaseType:"Critical",diseaseId:16},{description:"Psychiatric disorders",disease:"Psychiatric disorders",diseaseCode:"PSDI",diseaseType:"Critical",diseaseId:17},{description:"Thyroid disorder",disease:"Thyroid disorder",diseaseCode:"THYD",diseaseType:"Other",diseaseId:2},{description:"Tuberculosis",disease:"Tuberculosis",diseaseCode:"TUBE",diseaseType:"Other",diseaseId:6}];angular.module("buyTravel",["CoreComponentApp","LocalStorageModule","checklist-model","ngMessages"]).controller("buyTravelController",["$scope","$rootScope","$timeout","RestAPI","localStorageService","$location","$http","$window","$sce","$filter",function($scope,$rootScope,$timeout,RestAPI,localStorageService,$location,$http,$window,$sce,$filter){$scope.travelProposalSectionHTML=wp_path+"buy/travel/html/TravelProposalSection.html";var applicationLabel=localStorageService.get("applicationLabels");$scope.globalLabel=applicationLabel.globalLabels;var SELF="Self",FEMALE="Female",MALE="Male";$scope.numRecords=4,$scope.page=1,$scope.travelProposal={},$scope.insuredDetails={},$scope.tripDetails={},$scope.quoteParam={},$scope.medicalInfo={},$scope.medicalInfo.medicalQuestionarrie=[],$scope.medicalQuestionarrier=[],$scope.preExistingDiseases="N",$scope.masterDiseaseDetails={},$scope.communicationAddress={},$scope.numberOfTravellers=getList(1),$scope.isAddressSameAsCommun=!0,$scope.screenOneStatus=!0,$scope.proposalFormValid=!0,$scope.accordion=1,$scope.authenticate={};var buyScreens=localStorageService.get("buyScreen");$scope.productValidation=buyScreens.validation,$scope.productValidation.areaMaxLength?$scope.areaMaxLength=$scope.productValidation.areaMaxLength:$scope.areaMaxLength=250,$scope.OTPFlag=$scope.productValidation.OTPFlag,$scope.requestFormat=buyScreens.requestFormat,$scope.transactionName=buyScreens.transaction.proposalService.name,$scope.paymentURL=buyScreens.paymentUrl,$scope.relationType=travelGeneric,$scope.storedDOBs=[],$scope.storedGenders=[],$scope.nomineeRelationType=nomineeRelationTypeGeneric,$scope.appointeeRelationType=nomineeRelationTypeGeneric,$scope.currencySymbols=currencySymbolList,$scope.premiumDetails={},$scope.iposRequest={},$scope.iposRequest.parent_id=String($rootScope.parent_id)!=$scope.globalLabel.errorMessage.undefinedError?$rootScope.parent_id:$location.search().recordId,$scope.iposRequest.parent_type=String($rootScope.parent_type)!=$scope.globalLabel.errorMessage.undefinedError?$rootScope.parent_type:$location.search().moduleName,$scope.iposRequest.requestType=$scope.globalLabel.request.createShareQuoteRecord,$scope.productValidation.futureGenRelationFlag&&($scope.relationType=futureGenTravelGeneric),$scope.backToResultScreen=function(){$location.path("/travelResult")};var proposerDOBOption={};proposerDOBOption.minimumYearLimit="-"+$scope.productValidation.proposerDateOfBirthMaxLimit+"Y",proposerDOBOption.maximumYearLimit="-"+$scope.productValidation.proposerDateOfBirthMinLimit+"Y",proposerDOBOption.changeMonth=!0,proposerDOBOption.changeYear=!0,proposerDOBOption.dateFormat="dd/mm/yy",$scope.proposerDOBOptions=setP365DatePickerProperties(proposerDOBOption);var nomineeDOBOption={};nomineeDOBOption.minimumYearLimit="-"+$scope.productValidation.proposerDateOfBirthMaxLimit+"Y",nomineeDOBOption.maximumYearLimit="-1Y",nomineeDOBOption.changeMonth=!0,nomineeDOBOption.changeYear=!0,nomineeDOBOption.dateFormat="dd/mm/yy",$scope.nomineeDOBOptions=setP365DatePickerProperties(nomineeDOBOption);var appointeeDOBOption={};appointeeDOBOption.minimumYearLimit="-"+$scope.productValidation.proposerDateOfBirthMaxLimit+"Y",appointeeDOBOption.maximumYearLimit="-"+$scope.productValidation.proposerDateOfBirthMinLimit+"y",appointeeDOBOption.changeMonth=!0,appointeeDOBOption.changeYear=!0,appointeeDOBOption.dateFormat="dd/mm/yy",$scope.appointeeDOBOptions=setP365DatePickerProperties(appointeeDOBOption);var DOBOption={minimumYearLimit:"-50Y",maximumYearLimit:"-0Y",changeMonth:!0,changeYear:!0,dateFormat:"dd/mm/yy"};$scope.regularDOBOptions=setP365DatePickerProperties(DOBOption);var hospitalisedOption={minimumMonthLimit:"-48m",maximumMonthLimit:"0m",changeMonth:!0,changeYear:!0,dateFormat:"dd/mm/yy"};$scope.hospitalisedDateOptions=setP365DatePickerProperties(hospitalisedOption);var claimDateOption={minimumMonthLimit:"-48m",maximumMonthLimit:"0m",changeMonth:!0,changeYear:!0,dateFormat:"dd/mm/yy"};if($scope.claimedDateOptions=setP365DatePickerProperties(claimDateOption),$scope.initTravellersDOB=function(){for(var len=$scope.selectedTravellers.length,i=0;i<len;i++){var travellerDOBOption={};travellerDOBOption.minimumYearLimit="-"+$scope.productValidation.maxAge+"Y",travellerDOBOption.maximumYearLimit="-"+$scope.productValidation.maleMinAgeSingle+"y",travellerDOBOption.changeMonth=!0,travellerDOBOption.changeYear=!0,travellerDOBOption.dateFormat="dd/mm/yy",$scope["travellerDOBOptions"+i]=setP365DatePickerProperties(travellerDOBOption)}},$scope.submitPersonalDetails=function(){$scope.screenOneStatus=!0,$scope.screenTwoStatus=!0,$scope.screenThreeStatus=!1,$scope.screenFourStatus=!1,$scope.Section2Inactive=!1,$scope.accordion=2,$scope.quoteParam.proposerDetails=$scope.proposerDetails,localStorageService.set("proposerDetails",$scope.proposerDetails),1==imauticAutomation&&imatEvent("ProposalFilled");for(var i=0;i<$scope.selectedTravellers.length;i++)$scope.selectedTravellers[i].relation&&$scope.selectedTravellers[i].relation==SELF?($scope.selectedTravellers[i].relationshipCode="S",$scope.selectedTravellers[i].firstName=$scope.proposerDetails.firstName,$scope.selectedTravellers[i].lastName=$scope.proposerDetails.lastName,$scope.selectedTravellers[i].dob=$scope.proposerDetails.dateOfBirth,$scope.selectedTravellers[i].gender=$scope.proposerDetails.gender,$scope.selectedTravellers[i].sameAsProposer=!0):$scope.selectedTravellers[i].relation&&"Spouse"==$scope.selectedTravellers[i].relation&&($scope.selectedTravellers[i].gender=$scope.proposerDetails.gender==FEMALE?MALE:FEMALE,$scope.selectedTravellers[i].sameAsProposer=!1)},$scope.submitAddressDetails=function(){$scope.screenOneStatus=!0,$scope.screenTwoStatus=!0,$scope.screenThreeStatus=!0,$scope.screenFourStatus=!1,$scope.Section2Inactive=!1,$scope.accordion=3,$scope.quoteParam.proposerDetails=$scope.proposerDetails,localStorageService.set("proposerDetails",$scope.proposerDetails);for(var i=0;i<$scope.selectedTravellers.length;i++)$scope.selectedTravellers[i].relation&&$scope.selectedTravellers[i].relation==SELF?($scope.selectedTravellers[i].relationshipCode="S",$scope.selectedTravellers[i].firstName=$scope.proposerDetails.firstName,$scope.selectedTravellers[i].lastName=$scope.proposerDetails.lastName,$scope.selectedTravellers[i].dob=$scope.proposerDetails.dateOfBirth,$scope.selectedTravellers[i].gender=$scope.proposerDetails.gender,$scope.selectedTravellers[i].sameAsProposer=!0):$scope.selectedTravellers[i].relation&&"Spouse"==$scope.selectedTravellers[i].relation&&($scope.selectedTravellers[i].gender=$scope.proposerDetails.gender==FEMALE?MALE:FEMALE,$scope.selectedTravellers[i].sameAsProposer=!1)},$scope.submitInsuredDetails=function(){$scope.screenOneStatus=!0,$scope.screenTwoStatus=!0,$scope.screenThreeStatus=!0,$scope.screenFourStatus=!0,$scope.Section2Inactive=!1,$scope.accordion=4,localStorageService.set("selectedTravellersForTravel",$scope.selectedTravellers)},$scope.genderType=travelGenderTypeGeneric,$scope.preDiseaseStatus=preDiseaseStatusGen,$scope.maritalStatusType=maritalStatusListGeneric,$scope.undertakingList=religareUndertakingList,$scope.yesNoStatus=yesNoStatusGeneric,$scope.treatmentGiven=[{value:"Out Patient"},{value:"treatmentGiven"}],$scope.monthList=healthmonthListGeneric,$scope.proposerDetails={},$scope.proposerDetails.permanentAddress={},$scope.permanentAddressDetails={},$scope.insuredTravellerDetails={},$scope.nominationDetails={},$scope.declarationDetails=[],$scope.editProposerInfo=function(){$scope.accordion="1",$scope.proposerDetails=localStorageService.get("proposerDetails")},$scope.editInsuredInfo=function(){$scope.accordion="3",$scope.selectedTravellers=localStorageService.get("selectedTravellersForTravel")},$scope.editAddressInfo=function(){$scope.accordion="2",$scope.proposerDetails=localStorageService.get("proposerDetails")},$scope.resetCommunicationAddress=function(){String($scope.communicationAddress.addressLine)!=$scope.globalLabel.errorMessage.undefinedError&&0!=$scope.communicationAddress.addressLine.length||($scope.communicationAddress.pincode="",$scope.communicationAddress.state="",$scope.communicationAddress.city="")},$scope.resetPermenentAddress=function(){String($scope.permanentAddressDetails.address)!=$scope.globalLabel.errorMessage.undefinedError&&0!=$scope.permanentAddressDetails.addressLine.length||($scope.permanentAddressDetails.pincode="",$scope.permanentAddressDetails.state="",$scope.permanentAddressDetails.city="")},$scope.changePermentAddress=function(){$scope.isAddressSameAsCommun?angular.copy($scope.communicationAddress,$scope.permanentAddressDetails):($scope.permanentAddressDetails.houseNo=angular.copy($scope.communicationAddress.houseNo),$scope.permanentAddressDetails.pincode=angular.copy($scope.communicationAddress.pincode),$scope.permanentAddressDetails.state=angular.copy($scope.communicationAddress.state),$scope.permanentAddressDetails.stateCode=angular.copy($scope.communicationAddress.stateCode),$scope.permanentAddressDetails.cityCode=angular.copy($scope.communicationAddress.cityCode),$scope.permanentAddressDetails.city=angular.copy($scope.communicationAddress.city),$scope.permanentAddressDetails.addressLine=angular.copy($scope.communicationAddress.addressLine)),$scope.proposerDetails.permanentAddress=$scope.permanentAddressDetails},$scope.getPinCodeAreaList=function(searchValue){var docType=$scope.globalLabel.documentType.cityDetails,carrierId=$scope.selectedProduct.carrierId;return $http.get(getSearchServiceLink+docType+"&q="+searchValue+"&id="+carrierId).then(function(response){return JSON.parse(response.data).data})},$scope.onSelectPinOrAreaComm=function(item){$scope.communicationAddress.stateCode=item.stateCode,$scope.communicationAddress.state=item.state,$scope.communicationAddress.cityCode=item.cityCode,$scope.communicationAddress.city=item.city,$scope.communicationAddress.pincode=item.pincode},$scope.onSelectPinOrAreaPerm=function(item){$scope.permanentAddressDetails.stateCode=item.stateCode,$scope.permanentAddressDetails.state=item.state,$scope.permanentAddressDetails.cityCode=item.cityCode,$scope.permanentAddressDetails.city=item.city,$scope.permanentAddressDetails.pincode=item.pincode},$scope.calcDefaultAreaDetails=function(areaCode){if(null!=areaCode&&String(areaCode)!=$scope.globalLabel.errorMessage.undefinedError&&String(areaCode).length>0){var docType=$scope.globalLabel.documentType.cityDetails,carrierId=$scope.selectedProduct.carrierId;$http.get(getSearchServiceLink+docType+"&q="+areaCode+"&id="+carrierId).then(function(response){var areaDetails=JSON.parse(response.data);areaDetails.responseCode==$scope.globalLabel.responseCode.success&&$scope.onSelectPinOrAreaComm(areaDetails.data[0])})}},$scope.calcDefaultPermAreaDetails=function(areaCode){if(null!=areaCode&&String(areaCode)!=$scope.globalLabel.errorMessage.undefinedError&&String(areaCode).length>0){var docType=$scope.globalLabel.documentType.cityDetails,carrierId=$scope.selectedProduct.carrierId;$http.get(getSearchServiceLink+docType+"&q="+areaCode+"&id="+carrierId).then(function(response){var areaDetails=JSON.parse(response.data);areaDetails.responseCode==$scope.globalLabel.responseCode.success&&$scope.onSelectPinOrAreaPerm(areaDetails.data[0])})}},$scope.clicktoShowDisease=function(){$scope.diseaseShow=!0},$scope.submitDieaseList=function(){$scope.diseaseShow=!1},$scope.clicktoHideDisease=function(){$scope.diseaseShow=!1},$scope.clickToShowDiagnosed=function(){$scope.dignosedShow=!0},$scope.clickToHideDiagnosed=function(){$scope.dignosedShow=!1},$scope.clicktoShowLastClaim=function(){$scope.lastClaimShow=!0},$scope.clicktoHideLastClaim=function(){$scope.lastClaimShow=!1},$scope.showTermsDiv=!1,$rootScope.showTerms=function(terms){$scope.termsAndConditions=$sce.trustAsHtml(terms),$scope.showTermsDiv=!0},$scope.TermsCheck=function(sel){$scope.termsAndConditionsAgree="true"!=sel},$rootScope.closeTerms=function(){$scope.showTermsDiv=!1},$scope.next=function(){$scope.page=$scope.page+1},$scope.back=function(){$scope.page=$scope.page-1},$scope.changeRelation=function(index){var fAge=0,travellerDOBOption={changeMonth:!0,changeYear:!0,dateFormat:"dd/mm/yy"};$scope.selectedTravellers[index].relation!=SELF?($scope.selectedTravellers[index].sameAsProposer=!1,$scope.selectedTravellers[index].lastName=$scope.proposerDetails.lastName,$scope.selectedTravellers[index].passportNo="","Spouse"==$scope.selectedTravellers[index].relation?($scope.selectedTravellers[index].gender=$scope.proposerDetails.gender==MALE?FEMALE:MALE,$scope.selectedTravellers[index].gender==FEMALE?(travellerDOBOption.minimumYearLimit="-"+$scope.productValidation.maxAge+"Y - 1D",travellerDOBOption.maximumYearLimit="-"+$scope.productValidation.femaleMinAge+"y",$scope["travellerDOBOptions"+index]=setP365DatePickerProperties(travellerDOBOption),$scope.selectedTravellers[index].dob=""):(travellerDOBOption.minimumYearLimit="-"+$scope.productValidation.maxAge+"Y - 1D",travellerDOBOption.maximumYearLimit="-"+$scope.productValidation.maleMinAgeMarried+"y",$scope["travellerDOBOptions"+index]=setP365DatePickerProperties(travellerDOBOption),$scope.selectedTravellers[index].dob="")):"Son"==$scope.selectedTravellers[index].relation?($scope.selectedTravellers[index].gender=MALE,travellerDOBOption.minimumYearLimit="-"+$scope.productValidation.childMaxAge+"Y",travellerDOBOption.maximumDayLimit=-$scope.productValidation.childMinAge,$scope["travellerDOBOptions"+index]=setP365DatePickerProperties(travellerDOBOption)):"Daughter"==$scope.selectedTravellers[index].relation?($scope.selectedTravellers[index].gender=FEMALE,travellerDOBOption.minimumYearLimit="-"+$scope.productValidation.childMaxAge+"Y",travellerDOBOption.maximumDayLimit=-$scope.productValidation.childMinAge,$scope["travellerDOBOptions"+index]=setP365DatePickerProperties(travellerDOBOption)):"Father"==$scope.selectedTravellers[index].relation?($scope.selectedTravellers[index].gender=MALE,travellerDOBOption.minimumYearLimit="-100Y",fAge=Math.round(getAgeFromDOB($scope.proposerDetails.dateOfBirth)),travellerDOBOption.maximumYearLimit="-"+(fAge+21)+"y",$scope["travellerDOBOptions"+index]=setP365DatePickerProperties(travellerDOBOption),$scope.selectedTravellers[index].dob=""):"Mother"==$scope.selectedTravellers[index].relation&&($scope.selectedTravellers[index].gender=FEMALE,travellerDOBOption.minimumYearLimit="-100Y",fAge=Math.round(getAgeFromDOB($scope.proposerDetails.dateOfBirth)),travellerDOBOption.maximumYearLimit="-"+(fAge+18)+"y",$scope["travellerDOBOptions"+index]=setP365DatePickerProperties(travellerDOBOption),$scope.selectedTravellers[index].dob="")):($scope.selectedTravellers[index].sameAsProposer=!0,$scope.selectedTravellers[index].gender=$scope.proposerDetails.gender,$scope.selectedTravellers[index].dob=$scope.proposerDetails.dateOfBirth,$scope.selectedTravellers[index].firstName=$scope.proposerDetails.firstName,$scope.selectedTravellers[index].lastName=$scope.proposerDetails.lastName,$scope.changeDateOfBirth(index),$scope.selectedTravellers[index].passportNo="",$scope.selectedTravellers[index].gender==FEMALE?(travellerDOBOption.minimumYearLimit="-"+$scope.productValidation.maxAge+"Y - 1D",travellerDOBOption.maximumYearLimit="-"+$scope.productValidation.femaleMinAge+"y",$scope["travellerDOBOptions"+index]=setP365DatePickerProperties(travellerDOBOption)):"MARRIED"==$scope.proposerDetails.maritalStatus?(travellerDOBOption.minimumYearLimit="-"+$scope.productValidation.maxAge+"Y - 1D",travellerDOBOption.maximumYearLimit="-"+$scope.productValidation.maleMinAgeMarried+"y",$scope["travellerDOBOptions"+index]=setP365DatePickerProperties(travellerDOBOption)):"SINGLE"==$scope.proposerDetails.maritalStatus&&(travellerDOBOption.minimumYearLimit="-"+$scope.productValidation.maxAge+"Y - 1D",travellerDOBOption.maximumYearLimit="-"+$scope.productValidation.maleMinAgeSingle+"y",$scope["travellerDOBOptions"+index]=setP365DatePickerProperties(travellerDOBOption)))},$scope.changeDateOfBirth=function(index){if("undefined"!=String($scope.storedDOBs[index])||null!=$scope.storedDOBs[index]||void 0!=$scope.storedDOBs[index]){var dob=angular.copy($scope.quoteRecalcParam.quoteParam.travellers[index].dob),tempDateArray=angular.copy($scope.quoteRecalcParam.quoteParam.travellers[index].dob).split("/"),tempDOBinMM_DD_YY=String(tempDateArray[0]+"/"+tempDateArray[1]+"/"+tempDateArray[2]);$scope.storedDOBs[index]!=tempDOBinMM_DD_YY?$rootScope.P365Confirm($scope.globalLabel.applicationLabels.common.p365prompt,$scope.globalLabel.applicationLabels.common.DobChangeMsg,"No","Yes",function(confirmStatus){if(confirmStatus){var tempDOBinDD_MM_YY=String(tempDateArray[0]+"/"+tempDateArray[1]+"/"+tempDateArray[2]);console.log("tempDOBinDD_MM_YY in confirm status is :",tempDOBinDD_MM_YY),$scope.storedDOBs[index]=tempDOBinDD_MM_YY,console.log("$scope.storedDOBs[index] in confirm status is :",$scope.storedDOBs[index]),$scope.ageList=[],$scope.loading=!0;for(var i=0;i<$scope.quoteRecalcParam.quoteParam.travellers.length;i++)$scope.quoteRecalcParam.quoteParam.travellers[i].relation==SELF?($scope.proposerDetails.dateOfBirth=$scope.quoteRecalcParam.quoteParam.travellers[i].dob,$scope.proposerDetails.age=getAgeFromDOB($scope.quoteRecalcParam.quoteParam.travellers[i].dob),$scope.quoteRecalcParam.quoteParam.travellers[i].age=getAgeFromDOB($scope.quoteRecalcParam.quoteParam.travellers[i].dob)):$scope.quoteRecalcParam.quoteParam.travellers[i].age=getAgeFromDOB($scope.quoteRecalcParam.quoteParam.travellers[i].dob),$scope.ageList.push($scope.quoteRecalcParam.quoteParam.travellers[i].age);$scope.quoteRecalcParam.quoteParam.quoteMinAge=getMinAge($scope.ageList),$scope.quoteRecalcParam.quoteParam.quoteMaxAge=getMaxAge($scope.ageList),localStorageService.set("selectedTravellersForTravel",$scope.quoteRecalcParam.quoteParam.travellers),$scope.reCalcQuotes($scope.quoteRecalcParam)}else $scope.loading=!1,$scope.quoteRecalcParam.quoteParam.travellers[index].dob=$scope.storedDOBs[index],$scope.quoteRecalcParam.quoteParam.travellers[index].relation==SELF&&($scope.proposerDetails.dateOfBirth=$scope.quoteRecalcParam.quoteParam.travellers[index].dob)}):($scope.storedDOBs[index]=dob,$scope.quoteRecalcParam.quoteParam.travellers[index].dob=$scope.storedDOBs[index],$scope.quoteRecalcParam.quoteParam.travellers[index].relation==SELF&&($scope.proposerDetails.dateOfBirth=$scope.quoteRecalcParam.quoteParam.travellers[index].dob))}},$scope.init=function(){$scope.selectedProduct=localStorageService.get("selectedProduct"),$scope.medicalQuestionarrier=[];var searchData={};searchData.documentType=$scope.globalLabel.documentType.travelDiseaseQuestion,searchData.carrierId=$scope.selectedProduct.carrierId,searchData.planId=$scope.selectedProduct.planId,searchData.lob=$scope.globalLabel.businessLineType.travel,getDocUsingParam(RestAPI,$scope.globalLabel.transactionName.getHealthQuestionList,searchData,function(callback){$scope.medicalQuestionarrier=callback.data;for(var i=0;i<$scope.medicalQuestionarrier.length;i++)"PREXDISEA"==$scope.medicalQuestionarrier[i].questionCode&&"true"==$scope.medicalQuestionarrier[i].applicable&&($scope.diseaseShow=!0,$scope.clicktoShowDisease());$scope.termsAndConditionsAgree=!1;var searchDiseaseData={};searchDiseaseData.documentType=$scope.globalLabel.documentType.travelDiseaseMapping,searchDiseaseData.carrierId=$scope.selectedProduct.carrierId,searchDiseaseData.planId=$scope.selectedProduct.planId,searchDiseaseData.lob=$scope.globalLabel.businessLineType.travel,getDocUsingParam(RestAPI,$scope.globalLabel.transactionName.getHealthQuestionList,searchDiseaseData,function(callback){$scope.diseaseList=callback.data,$scope.numberOfPages=Math.floor($scope.diseaseList.length/$scope.numRecords),$scope.diseaseListDisable=angular.copy($scope.diseaseList);for(var i=0;i<$scope.diseaseListDisable.length;i++)$scope.diseaseListDisable[i].subParentId=$scope.diseaseListDisable[i].parentId;if($scope.occupationCheck){var occupationDocId=$scope.globalLabel.documentType.travelOccupation+"-"+$scope.selectedProduct.carrierId+"-"+$scope.selectedProduct.productId;getDocUsingId(RestAPI,occupationDocId,function(occupationList){$scope.occupationList=occupationList.Occupation,localStorageService.set("travelBuyOccupationList",occupationList.Occupation),$scope.prePopulateProposerDetails()})}else $scope.prePopulateProposerDetails()})})},$scope.prePopulateTravellerDetails=function(){$scope.quote=localStorageService.get("travelQuoteInputParamaters"),$scope.quoteRecalcParam=angular.copy(localStorageService.get("travelQuoteInputParamaters")),$scope.quoteParam=$scope.quote.quoteParam,$scope.medicalInfo.medicalQuestionarrie=$scope.medicalQuestionarrier,$scope.travelDetails=localStorageService.get("travelDetails"),$scope.QuoteResult=localStorageService.get("travelQuoteResult");for(var i=0;i<$scope.quoteParam.travellers.length;i++)$scope.quoteParam.travellers[i].diseaseDetails=[];$scope.quote.quoteParam=$scope.quoteParam,$scope.selectedTravellers=$scope.quoteParam.travellers,$scope.initTravellersDOB();for(i=0;i<$scope.QuoteResult.length;i++)if($scope.travelQuoteResponse=$scope.QuoteResult[i],$scope.travelQuoteResponse&&$scope.selectedProduct.carrierId==$scope.travelQuoteResponse.carrierId&&$scope.travelQuoteResponse.travellers){var len=$scope.travelQuoteResponse.travellers.length;$scope.storedDOBs=[];for(var j=0;j<len;j++)$scope.travelQuoteResponse.travellers[j].relation==SELF?($scope.proposerDetails.dateOfBirth=$scope.travelQuoteResponse.travellers[j].memberDOB,$scope.proposerDetails.gender=$scope.travelQuoteResponse.travellers[j].gender,$scope.travelQuoteResponse.travellers.length>1?$scope.proposerDetails.maritalStatus="MARRIED":$scope.proposerDetails.maritalStatus="SINGLE"):getAgeFromDOB($scope.travelQuoteResponse.travellers[0].memberDOB)<$scope.productValidation.maleMinAgeMarried&&($scope.proposerDetails.dateOfBirth=calcDOBFromAge($scope.productValidation.maleMinAgeSingle),$scope.proposerDetails.gender=MALE,$scope.proposerDetails.maritalStatus="SINGLE"),getAgeFromDOB($scope.travelQuoteResponse.travellers[j].memberDOB)<$scope.productValidation.maleMinAgeSingle?($scope.selectedTravellers[j].gender=$scope.travelQuoteResponse.travellers[j].gender,$scope.selectedTravellers[j].dob=$scope.travelQuoteResponse.travellers[j].memberDOB,$scope.selectedTravellers[j].gender==MALE?$scope.selectedTravellers[j].relation="Son":$scope.selectedTravellers[j].relation="Daughter",$scope.changeRelation(j)):($scope.selectedTravellers[j].dob=$scope.travelQuoteResponse.travellers[j].memberDOB,$scope.selectedTravellers[j].gender=$scope.travelQuoteResponse.travellers[j].gender),$scope.storedDOBs.push($scope.travelQuoteResponse.travellers[j].memberDOB),$scope.storedGenders.push($scope.travelQuoteResponse.travellers[j].gender)}localStorageService.set("selectedTravellersForTravel",$scope.selectedTravellers);for(i=0;i<$scope.selectedTravellers.length;i++){$scope.nomieeDetails={},$scope.selectedTravellers[i].nomineeDetails=$scope.nomieeDetails,$scope.selectedTravellers[i].carrierMedicalQuestion=[];for(var diseaseCount=0;diseaseCount<$scope.selectedTravellers[i].diseaseDetails.length;diseaseCount++){var key=$scope.selectedTravellers[i].relationshipCode+"-"+$scope.selectedTravellers[i].diseaseDetails[diseaseCount].masterDiseaseCode;$scope.masterDiseaseDetails[key]=$scope.selectedTravellers[i].diseaseDetails[diseaseCount]}}$scope.quoteRecalcParam.quoteParam.travellers=$scope.selectedTravellers,$scope.numberOfTravellers=getList($scope.selectedTravellers.length),"Y"==$scope.quoteParam.pedStatus?($scope.preDiseaseApplicable=!0,$scope.preExistingDiseases="Y",$scope.clicktoShowDisease()):($scope.preExistingDiseases="N",$scope.preDiseaseApplicable=!1)},$scope.prePopulateProposerDetails=function(){if(void 0!=$scope.selectedProduct.sumInsuredCurrency&&""!=$scope.selectedProduct.sumInsuredCurrency)for(var k=0;k<$scope.currencySymbols.length;k++)$scope.currencySymbols[k].symbol==$scope.selectedProduct.sumInsuredCurrency&&($scope.selectedProduct.sumInsuredCurrency=$scope.currencySymbols[k].symbol,$scope.selectedProduct.sumInsuredCurrencySymbol=$sce.trustAsHtml($scope.currencySymbols[k].htmlCode));else $scope.selectedProduct.sumInsuredCurrency=$scope.currencySymbols[0].symbol,$scope.selectedProduct.sumInsuredCurrencySymbol=$sce.trustAsHtml($scope.currencySymbols[0].htmlCode);localStorageService.get("proposerDetails")?$scope.proposerDetails=localStorageService.get("proposerDetails"):localStorageService.get("quoteUserInfo")?$scope.proposerDetails=angular.copy(localStorageService.get("quoteUserInfo")):$scope.proposerDetails={},$scope.prePopulateTravellerDetails(),localStorageService.get("travelBuyOccupationList")&&($scope.occupationList=localStorageService.get("travelBuyOccupationList"),$scope.proposerDetails.occupation=$scope.occupationList[0].occupation),buyScreens.visitPurposes&&($scope.purposeListOfVisit=buyScreens.visitPurposes,$scope.proposerDetails.purposeOfVisit=$scope.purposeListOfVisit[0].purposeOfVisit)},$scope.proposalInfo=function(){var proposalReq=travelProposalRequestDef;proposalReq.premiumDetails=localStorageService.get("selectedProduct"),proposalReq.premiumDetails.sumInsuredCurrencySymbol=proposalReq.premiumDetails.sumInsuredCurrencySymbol,proposalReq.proposerDetails.salutation=findSalutation($scope.proposerDetails.gender),proposalReq.proposerDetails.firstName=$scope.proposerDetails.firstName,proposalReq.proposerDetails.lastName=$scope.proposerDetails.lastName,proposalReq.proposerDetails.dateOfBirth=$scope.proposerDetails.dateOfBirth,proposalReq.proposerDetails.gender=$scope.proposerDetails.gender,proposalReq.proposerDetails.mobileNumber=$scope.proposerDetails.mobileNumber,proposalReq.proposerDetails.emailId=$scope.proposerDetails.emailId,proposalReq.proposerDetails.maritalStatus=$scope.proposerDetails.maritalStatus,$scope.proposerDetails.occupation&&(proposalReq.proposerDetails.occupation=$scope.proposerDetails.occupation),$scope.proposerDetails.purposeOfVisit&&(proposalReq.proposerDetails.purposeOfVisit=$scope.proposerDetails.purposeOfVisit),proposalReq.proposerDetails.communicationAddress=$scope.communicationAddress,$scope.isAddressSameAsCommun?(proposalReq.proposerDetails.isCommuniationAddressSameAsPermanant="Y",$scope.changePermentAddress(),proposalReq.proposerDetails.permanantAddress=$scope.proposerDetails.permanentAddress):(proposalReq.proposerDetails.isCommuniationAddressSameAsPermanant="N",proposalReq.proposerDetails.permanantAddress=$scope.permanentAddressDetails),proposalReq.travelDetails=localStorageService.get("travelDetails"),(proposalReq.travelDetails.tripType="single")&&(proposalReq.travelDetails.tripDuration=0);for(var travellers=angular.copy(localStorageService.get("selectedTravellersForTravel")),j=0;j<travellers.length;j++){var travellerDetail={},nomineeDetail={},appointeeDetail={};travellerDetail.traveller_id=travellers[j].traveller_id,travellerDetail.salutation=findSalutation(travellers[j].gender),travellerDetail.firstName=travellers[j].firstName,travellerDetail.lastName=travellers[j].lastName,travellerDetail.dateOfBirth=travellers[j].dob,travellerDetail.gender=travellers[j].gender,travellerDetail.passportNo=travellers[j].passportNo.toUpperCase(),travellerDetail.relation=travellers[j].relation,nomineeDetail.firstName=travellers[j].nomineeDetails.firstName,nomineeDetail.lastName=travellers[j].nomineeDetails.lastName,nomineeDetail.dateOfBirth=travellers[j].nomineeDetails.dateOfBirth,nomineeDetail.relation=travellers[j].nomineeDetails.relation,travellers[j].nomineeAge<18&&(appointeeDetail.firstName=travellers[j].nomineeDetails.apointeeDetails.firstName,appointeeDetail.lastName=travellers[j].nomineeDetails.apointeeDetails.lastName,appointeeDetail.dateOfBirth=travellers[j].nomineeDetails.apointeeDetails.dateOfBirth,appointeeDetail.relation=travellers[j].nomineeDetails.apointeeDetails.relation,travellerDetail.appointeeDetails={}),travellerDetail.nomineeDetails=nomineeDetail,travellers[j].nomineeAge<18&&(travellerDetail.appointeeDetails=appointeeDetail),proposalReq.medicalQuestionarrie=angular.copy($scope.medicalInfo.medicalQuestionarrie),$scope.preExistingDiseases="N";for(var diseaseDetails=[],l=0;l<travellers[j].carrierMedicalQuestion.length;l++)null!=travellers[j].carrierMedicalQuestion[l]&&void 0!=travellers[j].carrierMedicalQuestion[l]&&String(travellers[j].carrierMedicalQuestion[l])!=$scope.globalLabel.errorMessage.undefinedError||(travellers[j].carrierMedicalQuestion.splice(l,1),l-=1);for(var k=0;k<$scope.medicalInfo.medicalQuestionarrie.length;k++){if("false"==$scope.medicalInfo.medicalQuestionarrie[k].applicable&&"PREXDISEA"==$scope.medicalInfo.medicalQuestionarrie[k].questionCode){$scope.preExistingDiseases="N",diseaseDetails=[];break}if("true"==$scope.medicalInfo.medicalQuestionarrie[k].applicable&&"PREXDISEA"==$scope.medicalInfo.medicalQuestionarrie[k].questionCode){$scope.preExistingDiseases="Y",diseaseDetails=[];for(l=0;l<travellers[j].diseaseDetails.length;l++)null!=travellers[j].diseaseDetails[l]&&diseaseDetails.push(travellers[j].diseaseDetails[l]);break}}travellerDetail.preExistingDiseases=$scope.preExistingDiseases,travellerDetail.diseaseDetails=diseaseDetails,travellerDetail.carrierMedicalQuestion=travellers[j].carrierMedicalQuestion,proposalReq.travellerDetails[j]=travellerDetail}return proposalReq.declarationDetails=$scope.declarationDetails,$scope.travelProposeFormDetails=proposalReq,$scope.travelProposeFormDetails.productId=proposalReq.premiumDetails.productId,proposalReq},$scope.showAuthenticateForm=function(){$scope.disableOTP=!1;var validateAuthParam={paramMap:{}};validateAuthParam.mobileNumber=$scope.proposerDetails.mobileNumber,validateAuthParam.funcType=$scope.globalLabel.functionType.optAuth,validateAuthParam.paramMap.OTP=$scope.globalLabel.functionType.otpGenerate,getDocUsingParam(RestAPI,$scope.globalLabel.transactionName.sendSMS,validateAuthParam,function(createOTP){createOTP.responseCode==$scope.globalLabel.responseCode.success?($scope.createOTPError="",$scope.modalOTP=!0):createOTP.responseCode==$scope.globalLabel.responseCode.blockedMobile?($scope.createOTPError=createOTP.message,$scope.modalOTPError=!0,$scope.disableOTP=!0):($scope.createOTPError=$scope.globalLabel.errorMessage.createOTP,$scope.modalOTPError=!0)})},$scope.hideModal=function(){$scope.modalOTP=!1,$scope.disablePaymentButton=!0,$scope.authenticate.enteredOTP=""},$scope.hideModalAP=function(){$scope.modalAP=!1},$scope.hideModalError=function(){$scope.modalOTPError=!1},$scope.validateAuthenticateForm=function(){$scope.OTPFlag?$scope.showAuthenticateForm():$scope.OTPFlag||$scope.proceedForPayment()},$scope.resendOTP=function(){var validateAuthParam={paramMap:{}};validateAuthParam.mobileNumber=$scope.proposerDetails.mobileNumber,validateAuthParam.funcType=$scope.globalLabel.functionType.optAuth,validateAuthParam.paramMap.OTP=$scope.globalLabel.functionType.otpGenerate,sessionIDvar&&(validateAuthParam.sessionId=sessionIDvar),getDocUsingParam(RestAPI,$scope.globalLabel.transactionName.sendSMS,validateAuthParam,function(createOTP){createOTP.responseCode==$scope.globalLabel.responseCode.success?$scope.invalidOTPError="":createOTP.responseCode==$scope.globalLabel.responseCode.userNotExist?$scope.invalidOTPError=createOTP.message:createOTP.responseCode==$scope.globalLabel.responseCode.blockedMobile?$scope.invalidOTPError=createOTP.message:createOTP.responseCode==$scope.globalLabel.responseCode.mobileInvalidCode?$scope.invalidOTPError=createOTP.message:$scope.invalidOTPError=$scope.globalLabel.errorMessage.createOTP})},$scope.getYearList=function(dateofBirth){var dateArr=dateofBirth.split("/"),newDOB=dateArr[1]+"/"+dateArr[0]+"/"+dateArr[2];return listRegistrationYear("buyScreen",calculateAgeByDOB(newDOB))},$scope.setDieaseStartDate=function(insuredDiseaseDetails){null!=insuredDiseaseDetails.startMonth?insuredDiseaseDetails.startDate="01/"+insuredDiseaseDetails.startMonth+"/"+insuredDiseaseDetails.startYear:null!=insuredDiseaseDetails.startYear&&(insuredDiseaseDetails.startDate="01/01/"+insuredDiseaseDetails.startYear)},$scope.proceedForPayment=function(){if($scope.modalOTP=!1,$scope.modalOTPError=!1,$scope.proposalFormValid){var proposalSubmitConfirmMsg="Please make sure you have entered the right Mobile Number and Email ID. All our communication will be sent to your Mobile "+$scope.proposerDetails.mobileNumber+" or Email "+$scope.proposerDetails.emailId+". Is the entered Mobile No. and Email ID right?";$rootScope.P365Confirm($scope.globalLabel.applicationLabels.common.p365prompt,proposalSubmitConfirmMsg,"No","Yes",function(confirmStatus){confirmStatus&&$scope.proceedForConfirm()})}},$scope.proceedForConfirm=function(){$scope.disablePaymentButton=!1;var authenticateUserParam={};authenticateUserParam.mobileNumber=$scope.proposerDetails.mobileNumber,authenticateUserParam.OTP=Number($scope.authenticate.enteredOTP),$scope.disablePaymentButton=!0,$scope.modalOTP=!1,$scope.modalOTPError=!1,$scope.loading=!0,$scope.proposalInfo(),$scope.travelProposeFormDetails.QUOTE_ID=localStorageService.get("TRAVEL_UNIQUE_QUOTE_ID"),$scope.travelProposeFormDetails.requestType=$scope.globalLabel.request.travelPropRequestType,$scope.travelProposeFormDetails.planId=$scope.travelProposeFormDetails.premiumDetails.planId,$scope.travelProposeFormDetails.carrierId=$scope.travelProposeFormDetails.premiumDetails.carrierId,$scope.travelProposeFormDetails.businessLineId=$scope.globalLabel.businessLineType.travel,$rootScope.wordPressEnabled?$scope.travelProposeFormDetails.source=sourceOrigin:($scope.travelProposeFormDetails.baseEnvStatus=baseEnvEnabled,$scope.travelProposeFormDetails.source=sourceOrigin),localStorageService.set("travelFinalProposeForm",$scope.travelProposeFormDetails),$scope.loading=!0,RestAPI.invoke($scope.globalLabel.transactionName.submitTravelProposal,$scope.travelProposeFormDetails).then(function(proposeFormResponse){if($scope.modalOTP=!1,$scope.authenticate.enteredOTP="",$scope.modalOTPError=!1,proposeFormResponse.responseCode==$scope.globalLabel.responseCode.success){var proposalId=$scope.proposalId;sharePaymentLink;$scope.encryptedProposalId=proposeFormResponse.data.encryptedProposalId,localStorageService.set("proposalIdEncrypted",$scope.encryptedProposalId),$scope.responseToken=proposeFormResponse.data,$scope.responseToken.paymentGateway=$scope.paymentURL,$scope.responseToken.businessLineId=$scope.globalLabel.businessLineType.travel,localStorageService.set("travelReponseToken",$scope.responseToken),getDocUsingParam(RestAPI,$scope.globalLabel.transactionName.paymentService,$scope.responseToken,function(paymentDetails){if(paymentDetails.responseCode==$scope.globalLabel.responseCode.success){$scope.paymentServiceResponse=paymentDetails.data,1==imauticAutomation&&imatTravelProposal(localStorageService,$scope,"MakePayment");var paymentURLParamListLength=$scope.paymentServiceResponse.paramterList.length;if("GET"==$scope.paymentServiceResponse.method){var paymentURLParam="?";for(paymentURLParamListLength=$scope.paymentServiceResponse.paramterList.length,i=0;i<paymentURLParamListLength;i++)i<paymentURLParamListLength-1?paymentURLParam+=$scope.paymentServiceResponse.paramterList[i].name+"="+$scope.paymentServiceResponse.paramterList[i].value+"&":paymentURLParam+=$scope.paymentServiceResponse.paramterList[i].name+"="+$scope.paymentServiceResponse.paramterList[i].value;$window.location.href=$scope.paymentServiceResponse.paymentURL+paymentURLParam}else $timeout(function(){$scope.paymentForm.setAction($scope.paymentServiceResponse.paymentURL),$scope.paymentForm.commit()},100)}else{1==imauticAutomation&&imatEvent("ProposalFailed"),$scope.loading=!1;var buyScreenCnfrmError=paymentDetails.responseCode+" : "+$scope.globalLabel.validationMessages.buyScreenCnfrmError.replace("INSURER_NAME",$scope.selectedProduct.insuranceCompany);$rootScope.P365Alert($scope.globalLabel.applicationLabels.common.p365prompt,buyScreenCnfrmError,"Ok")}})}else if(proposeFormResponse.responseCode==$scope.globalLabel.responseCode.error)$scope.disablePaymentButton=!1,$scope.loading=!1,$rootScope.P365Alert("Error",proposeFormResponse.data,"Ok");else{$scope.loading=!1,$scope.disablePaymentButton=!1;var buyScreenCnfrmError=proposeFormResponse.responseCode+" : "+$scope.globalLabel.validationMessages.buyScreenCnfrmError.replace("INSURER_NAME",$scope.selectedProduct.insuranceCompany);$rootScope.P365Alert($scope.globalLabel.applicationLabels.common.p365prompt,buyScreenCnfrmError,"Ok")}})},$scope.submitProposalRequest=function(){var proposalReqNode=$scope.proposalInfo();if($scope.travelProposeFormDetails.QUOTE_ID=localStorageService.get("TRAVEL_UNIQUE_QUOTE_ID"),$scope.travelProposeFormDetails.requestType=$scope.globalLabel.request.travelPropRequestType,$scope.travelProposeFormDetails.planId=$scope.travelProposeFormDetails.premiumDetails.planId,$scope.travelProposeFormDetails.carrierId=$scope.travelProposeFormDetails.premiumDetails.carrierId,$scope.travelProposeFormDetails.businessLineId=$scope.globalLabel.businessLineType.travel,$rootScope.wordPressEnabled?$scope.travelProposeFormDetails.source=sourceOrigin:($scope.travelProposeFormDetails.baseEnvStatus=baseEnvEnabled,$scope.travelProposeFormDetails.source=sourceOrigin),$scope.loading=!0,$rootScope.agencyPortalEnabled){const localdata=JSON.parse(localStorage.getItem("finalLocalStorage"));$scope.travelProposeFormDetails.requestSource=sourceOrigin,$scope.travelProposeFormDetails.userName=localdata.username,$scope.travelProposeFormDetails.agencyId=localdata.agencyId}RestAPI.invoke($scope.globalLabel.transactionName.submitTravelProposal,$scope.travelProposeFormDetails).then(function(proposeFormResponse){if(proposeFormResponse.responseCode==$scope.globalLabel.responseCode.success)if($scope.responseToken=proposeFormResponse.data,$scope.responseToken.businessLineId=$scope.globalLabel.businessLineType.travel,$scope.responseToken.QUOTE_ID=$scope.iposRequest.docId,localStorageService.set("travelReponseToken",$scope.responseToken),$scope.encryptedProposalId=proposeFormResponse.data.encryptedProposalId,localStorageService.set("proposalIdEncrypted",$scope.encryptedProposalId),1==imauticAutomation)imatTravelProposal(localStorageService,$scope,"SubmitProposal");else{$rootScope.encryptedProposalID=$scope.encryptedProposalId;var body={};body.longURL=sharePaymentLink+String($scope.responseToken.proposalId)+"&lob="+String($scope.globalLabel.businessLineType.travel),$http({method:"POST",url:getShortURLLink,data:body}).success(function(shortURLResponse){if(shortURLResponse.responseCode==$scope.globalLabel.responseCode.success){var proposalDetailsEmail={paramMap:{}};proposalDetailsEmail.funcType=$scope.globalLabel.functionType.proposalDetailsTemplate,proposalDetailsEmail.isBCCRequired="Y",proposalDetailsEmail.username=proposalReqNode.proposerDetails.emailId.trim(),proposalDetailsEmail.paramMap.customerName=proposalReqNode.proposerDetails.firstName.trim()+" "+proposalReqNode.proposerDetails.lastName.trim(),proposalDetailsEmail.paramMap.selectedPolicyType=$scope.globalLabel.insuranceType.travel,proposalDetailsEmail.paramMap.quoteId=$scope.iposRequest.docId,proposalDetailsEmail.paramMap.premiumAmount=String($scope.selectedProduct.grossPremium),proposalDetailsEmail.paramMap.docId=String($scope.responseToken.proposalId),proposalDetailsEmail.paramMap.LOB=String($scope.globalLabel.businessLineType.travel),proposalDetailsEmail.paramMap.url=shortURLResponse.data.shortURL,RestAPI.invoke($scope.globalLabel.transactionName.sendEmail,proposalDetailsEmail).then(function(emailResponse){if(emailResponse.responseCode==$scope.globalLabel.responseCode.success)if(1==baseEnvEnabled&&1==agencyPortalEnabled){var frameURL=agencyPortalUrl+proposalDetailsEmail.paramMap.docId+"&lob="+proposalDetailsEmail.paramMap.LOB;$scope.URLforPayment=$sce.trustAsResourceUrl(frameURL),$scope.modalAP=!0,$scope.loading=!1}else $scope.loading=!1,$scope.modalIPOS=!0;else $scope.loading=!1,$rootScope.P365Alert("Policies365",$scope.globalLabel.errorMessage.emailSentFailed,"Ok")})}else $scope.loading=!1,$rootScope.P365Alert("Policies365",$scope.globalLabel.errorMessage.emailSentFailed,"Ok"),console.log(shortURLResponse.message)})}else if(proposeFormResponse.responseCode==$scope.globalLabel.responseCode.error)$scope.disablePaymentButton=!1,$scope.loading=!1,$rootScope.P365Alert("Error",proposeFormResponse.data,"Ok");else{$scope.loading=!1;var serverError=$scope.globalLabel.errorMessage.serverError;$rootScope.P365Alert("Policies365",serverError,"Ok")}})},$scope.hideModalIPOS=function(){$scope.modalIPOS=!1},$scope.iposRequest={},$scope.iposRequest.docId=$location.search().quoteId,$scope.iposRequest.carrierId=$location.search().carrierId,$scope.iposRequest.productId=$location.search().productId,$scope.iposRequest.docId)$http.get("ApplicationLabels.json").then(function(applicationCommonLabels){$scope.globalLabel=applicationCommonLabels.data.globalLabels,localStorageService.set("applicationLabels",applicationCommonLabels.data),$scope.quoteUserInfo=localStorageService.get("quoteUserInfo"),$scope.tripTypeList=tripTypeListGeneric,RestAPI.invoke("quoteDataReader",$scope.iposRequest).then(function(quoteData){if(quoteData.responseCode==$scope.globalLabel.responseCode.success){$scope.quoteInfo=quoteData.data,$scope.selectedProductInputParam=$scope.quoteInfo.quoteRequest,$scope.quoteCalcResponse=$scope.quoteInfo.quoteResponse;for(var i=0;i<$scope.quoteCalcResponse.length;i++)if($scope.quoteCalcResponse[i].id=i+1,$scope.quoteCalcResponse[i].carrierId==$scope.iposRequest.carrierId&&$scope.quoteCalcResponse[i].productId==$scope.iposRequest.productId){$scope.premiumDetails.selectedProductDetails=$scope.quoteCalcResponse[i],$scope.selectedProduct=$scope.premiumDetails.selectedProductDetails;break}$scope.changeInsuranceCompany=function(){$location.path("/ipos").search({quoteId:localStorageService.get("TRAVEL_UNIQUE_QUOTE_ID"),carrierId:$scope.premiumDetails.selectedProductDetails.carrierId,productId:$scope.premiumDetails.selectedProductDetails.productId,lob:localStorageService.get("selectedBusinessLineId")})};var buyScreenParam={documentType:"proposalScreenConfig"};buyScreenParam.carrierId=Number($scope.iposRequest.carrierId),buyScreenParam.businessLineId=Number($scope.globalLabel.businessLineType.travel),buyScreenParam.productId=Number($scope.iposRequest.productId),localStorageService.set("selectedProduct",$scope.selectedProduct),getDocUsingParam(RestAPI,$scope.globalLabel.transactionName.productDataReader,buyScreenParam,function(buyScreen){if(buyScreen.responseCode==$scope.globalLabel.responseCode.success){var buyScreens=buyScreen.data;$scope.proposerDetailsTemplate=$sce.trustAsHtml(buyScreens.templates[0].template),$scope.travellersDetailsTemplate=$sce.trustAsHtml(buyScreens.templates[1].template),$scope.medicalDetailsTemplate=$sce.trustAsHtml(buyScreens.templates[2].template),$scope.occupationDetailsTemplate=$sce.trustAsHtml(buyScreens.templates[3].template),$scope.productValidation=buyScreens.validation,$scope.requestFormat=buyScreens.requestFormat,$scope.transactionName=buyScreens.transaction.proposalService.name,buyScreens.visitPurposes&&($scope.purposeListOfVisit=buyScreens.visitPurposes,$scope.proposerDetails.purposeOfVisit=$scope.purposeListOfVisit[0].purposeOfVisit),$scope.occupationCheck=$scope.productValidation.occupationCheck,$scope.init()}else $scope.loading=!1,$rootScope.P365Alert("Policies365",$scope.globalLabel.validationMessages.iposFormErrorMsg,"Ok")})}else $rootScope.P365Alert("Policies365",$scope.globalLabel.validationMessages.iposFormErrorMsg,"Ok")})});else{var applicationLabels=localStorageService.get("applicationLabels");$scope.globalLabel=applicationLabels.globalLabels,$scope.quoteUserInfo=localStorageService.get("quoteUserInfo"),$rootScope.loaderContent={businessLine:"5",header:"Travel Insurance",desc:$sce.trustAsHtml($scope.globalLabel.applicationLabels.travel.proverbBuyProduct)},$rootScope.title=$scope.globalLabel.policies365Title.travelBuyQuote,$scope.selectedProductInputParam=localStorageService.get("travelQuoteInputParamaters"),$scope.buyTooltip=localStorageService.get("buyScreenTooltip");buyScreens=localStorageService.get("buyScreen");$scope.productValidation=buyScreens.validation,$scope.OTPFlag=$scope.productValidation.OTPFlag,$scope.requestFormat=buyScreens.requestFormat,$scope.transactionName=buyScreens.transaction.proposalService.name,buyScreens.visitPurposes&&($scope.purposeListOfVisit=buyScreens.visitPurposes),$scope.occupationCheck=$scope.productValidation.occupationCheck,$scope.proposerDetailsTemplate=$sce.trustAsHtml(buyScreens.templates[0].template),$scope.travellersDetailsTemplate=$sce.trustAsHtml(buyScreens.templates[1].template),$scope.medicalDetailsTemplate=$sce.trustAsHtml(buyScreens.templates[2].template),$scope.occupationDetailsTemplate=$sce.trustAsHtml(buyScreens.templates[3].template),$scope.redirectUrl=buyScreens.redirectSuccessUrl,$scope.init()}$scope.$watch("communicationAddress.addressLine",function(newValue){$scope.isAddressSameAsCommun&&$scope.changePermentAddress()}),$scope.$watch("communicationAddress.houseNo",function(newValue){$scope.isAddressSameAsCommun&&$scope.changePermentAddress()}),$scope.$on("setCommAddressByAPI",function(){setTimeout(function(){var googleAddressObject=angular.copy($rootScope.chosenCommPlaceDetails);getAddressFields(googleAddressObject,function(fomattedAddress,formattedCity,formattedState,formattedPincode){$scope.communicationAddress.addressLine=fomattedAddress,String(formattedPincode)!=$scope.globalLabel.errorMessage.undefinedError&&""!=formattedPincode?$scope.calcDefaultAreaDetails(formattedPincode):($scope.communicationAddress.pincode="",$scope.communicationAddress.state="",$scope.communicationAddress.city="",$scope.communicationAddress.stateCode="",$scope.communicationAddress.cityCode=""),$scope.$apply()})},10)}),$scope.$on("setRegAddressByAPI",function(){setTimeout(function(){var googleAddressObject=angular.copy($rootScope.chosenRegPlaceDetails);getAddressFields(googleAddressObject,function(fomattedAddress,formattedCity,formattedState,formattedPincode){$scope.vehicleDetails.address=fomattedAddress,String(formattedPincode)!=$scope.globalLabel.errorMessage.undefinedError&&""!=formattedPincode?$scope.calcDefaultPermAreaDetails(formattedPincode):($scope.permanentAddressDetails.pincode="",$scope.permanentAddressDetails.state="",$scope.permanentAddressDetails.city=""),$scope.$apply()})},10)}),$scope.isRegreatPolicyMsg=!1;var quesArr=[];$scope.inputTypeCheck=function(sel,quesId,mquestion){if("true"==sel)$scope.selectedQuestions=quesId,quesArr.push(quesId),"N"==mquestion.isRegretPolicy&&$scope.productValidation.proceedWithN&&($scope.regretErrorMessage=$scope.globalLabel.errorMessage.regretPolicyMsgBH,$scope.isRegreatPolicyMsg=!0),"N"!=mquestion.isRegretPolicy||$scope.productValidation.proceedWithN||($scope.isRegreatPolicyMsg=!1);else{quesArr.length>0&&quesArr.splice(-1,quesId);for(var i=0;i<$scope.quoteParam.travellers.length;i++)for(var j=0;j<$scope.quoteParam.travellers[i].carrierMedicalQuestion.length;j++)$scope.quoteParam.travellers[i].carrierMedicalQuestion[j]&&quesId==$scope.quoteParam.travellers[i].carrierMedicalQuestion[j].questionCode&&($scope.quoteParam.travellers[i].carrierMedicalQuestion[j].applicable=!1);if("N"!=mquestion.isRegretPolicy||$scope.productValidation.proceedWithN)$scope.regretErrorMessage=$scope.globalLabel.errorMessage.regretPolicyMsgBH,$scope.isRegreatPolicyMsg=!1;else{var screenCnfrmError=mquestion.message;$rootScope.P365Alert("Policies365",screenCnfrmError,"Ok"),$scope.isRegreatPolicyMsg=!0}}},$scope.isDiseaseApplicable=function(relationshipCode,masterDiseasesCode){var key=relationshipCode+"-"+masterDiseasesCode;return null!=$scope.masterDiseaseDetails[key]},$scope.isDisableApplicable=function(parentId){for(var i=0;i<$scope.diseaseListDisable.length;i++)return parentId!=$scope.diseaseListDisable[i].subParentId},$scope.changeGender=function(){},$scope.calculateProposerAge=function(proposerDob){String(proposerDob)!==$scope.globalLabel.errorMessage.undefinedError&&($scope.proposerAge=getAgeFromDOB(proposerDob),$scope.validateData())},$scope.calculateNomineeAge=function(traveller_id,nomineeDob){if(String(nomineeDob)!==$scope.globalLabel.errorMessage.undefinedError){for(var i=0;i<$scope.selectedTravellers.length;i++)$scope.selectedTravellers[i].traveller_id==traveller_id&&($scope.selectedTravellers[i].nomineeAge=getAgeFromDOB(nomineeDob));$scope.nomineeAge=getAgeFromDOB(nomineeDob)}},$scope.calculateApointeeAge=function(apointeeDob){String(apointeeDob)!==$scope.globalLabel.errorMessage.undefinedError&&($scope.apointeeAge=getAgeFromDOB(String(apointeeDob)))},$scope.reCalcQuotes=function(travelQuoteInputParams){localStorageService.get("quoteUserInfo").mobileNumber&&(travelQuoteInputParams.mobileNumber=localStorageService.get("quoteUserInfo").mobileNumber),RestAPI.invoke($scope.globalLabel.getRequest.quoteTravel,travelQuoteInputParams).then(function(callback){if($scope.travelRecalculateQuoteRequest=[],callback.responseCode==$scope.globalLabel.responseCode.success)$scope.responseRecalculateCodeList=[],$scope.travelQuoteResult=[],$scope.quoteCalcResponse=[],String($scope.quoteCalcResponse)!=$scope.globalLabel.errorMessage.undefinedError&&$scope.quoteCalcResponse.length>0&&($scope.quoteCalcResponse.length=0),localStorageService.set("QUOTE_ID",callback.QUOTE_ID),localStorageService.set("TRAVEL_UNIQUE_QUOTE_ID",callback.QUOTE_ID),$scope.travelRecalculateQuoteRequest=callback.data,angular.forEach($scope.travelRecalculateQuoteRequest,function(obj,i){var request={},header={};header.messageId=messageIDVar,header.campaignID=campaignIDVar,header.source=sourceOrigin,header.transactionName=$scope.globalLabel.transactionName.travelQuoteResult,header.deviceId=deviceIdOrigin,request.header=header,request.body=obj,$http({method:"POST",url:getQuoteCalcLink,data:request}).success(function(callback,status){var travelQuoteResponse=JSON.parse(callback);if($scope.responseRecalculateCodeList.push(travelQuoteResponse.responseCode),travelQuoteResponse.responseCode==$scope.globalLabel.responseCode.success)null!=travelQuoteResponse.data&&travelQuoteResponse.data.quotes[0].carrierId==$scope.selectedProduct.carrierId&&travelQuoteResponse.data.quotes[0].planId==$scope.selectedProduct.planId&&($scope.loading=!1,$scope.selectedProduct.grossPremium=travelQuoteResponse.data.quotes[0].grossPremium,travelQuoteResponse.data.quotes[0].netPremium&&($scope.selectedProduct.netPremium=travelQuoteResponse.data.quotes[0].netPremium),travelQuoteResponse.data.quotes[0].serviceTax&&($scope.selectedProduct.serviceTax=travelQuoteResponse.data.quotes[0].serviceTax),$scope.premiumDetails=travelQuoteResponse.data.quotes[0],$scope.selectedProduct=travelQuoteResponse.data.quotes[0],void 0==travelQuoteResponse.data.quotes[0].carrierQuoteId&&""==travelQuoteResponse.data.quotes[0].carrierQuoteId&&null==travelQuoteResponse.data.quotes[0].carrierQuoteId||($scope.selectedProduct.carrierQuoteId=travelQuoteResponse.data.quotes[0].carrierQuoteId),localStorageService.set("selectedProduct",$scope.selectedProduct)),travelQuoteResponse.data.quotes[0].id=travelQuoteResponse.messageId,$scope.quoteCalcResponse.push(travelQuoteResponse.data.quotes[0]);else if(null!=travelQuoteResponse.data&&travelQuoteResponse.data.quotes[0].carrierId==$scope.selectedProduct.carrierId&&travelQuoteResponse.data.quotes[0].planId==$scope.selectedProduct.planId){$scope.loading=!1;var screenCnfrmError=$scope.selectedProduct.insuranceCompany+""+$scope.globalLabel.errorMessage.screenConfirmErrorMsgDob;$rootScope.P365Alert("Policies365",screenCnfrmError,"Ok")}}).error(function(data,status){$scope.responseRecalculateCodeList.push($scope.globalLabel.responseCode.systemError),$scope.loading=!1})});else{$scope.loading=!1;var screenCnfrmError=$scope.selectedProduct.insuranceCompany+""+$scope.globalLabel.errorMessage.screenConfirmErrorMsgDob;$rootScope.P365Alert("Policies365",screenCnfrmError,"Ok")}})},$scope.validateData=function(){if(console.log("called validateData"),$scope.proposerAge<$scope.productValidation.maleMinAgeSingle&&$scope.proposerDetails.maritalStatus==$scope.productValidation.checkSingleStatus&&$scope.proposerDetails.gender==MALE)$scope.proposerDetailsForm.dateOfBirth.$setValidity("dateOfBirth",!0),$scope.proposerDetailsForm.gender.$setValidity("gender",!0),$scope.proposerDetailsForm.maritalStatus.$setValidity("maritalStatus",!0),$scope.errorMsg=!0;else if($scope.proposerAge<$scope.productValidation.maleMinAgeMarried&&$scope.proposerDetails.maritalStatus==$scope.productValidation.checkMarriedStatus&&$scope.proposerDetails.gender==MALE)$scope.proposerDetailsForm.dateOfBirth.$setValidity("dateOfBirth",!1),$scope.proposerDetailsForm.gender.$setValidity("gender",!1),$scope.proposerDetailsForm.maritalStatus.$setValidity("maritalStatus",!1),$scope.errorMsg=!0;else if($scope.proposerAge<$scope.productValidation.femaleMinAge&&$scope.proposerDetails.gender==FEMALE)$scope.proposerDetailsForm.dateOfBirth.$setValidity("dateOfBirth",!0),$scope.proposerDetailsForm.gender.$setValidity("gender",!0),$scope.proposerDetailsForm.maritalStatus.$setValidity("maritalStatus",!0),$scope.errorMsg=!0;else{$scope.proposerDetailsForm.dateOfBirth.$setValidity("dateOfBirth",!0),$scope.proposerDetailsForm.gender.$setValidity("gender",!0),$scope.proposerDetailsForm.maritalStatus.$setValidity("maritalStatus",!0),$scope.errorMsg=!1;for(var i=0;i<$scope.selectedTravellers.length;i++)if($scope.selectedTravellers[i].relation==SELF){$scope.changeRelation(i);break}}if("SINGLE"==$scope.proposerDetails.maritalStatus){for(i=0;i<$scope.selectedTravellers.length;i++)if("Spouse"==$scope.selectedTravellers[i].relation||"Son"==$scope.selectedTravellers[i].relation||"Daughter"==$scope.selectedTravellers[i].relation){$scope.proposerDetailsForm.maritalStatus.$setValidity("maritalStatus",!1),$scope.errorMsgFlag=!0;break}}else $scope.proposerDetailsForm.maritalStatus.$setValidity("maritalStatus",!0),$scope.errorMsgFlag=!1},$scope.validateDOB=function(){if($scope.proposerAge=getAgeFromDOB($scope.proposerDetails.dateOfBirth),$scope.productValidation.proposerAgeCheck)$scope.validateData();else for(var i=0;i<$scope.selectedTravellers.length;i++)if($scope.selectedTravellers[i].relation==SELF){$scope.changeRelation(i);break}},$scope.validateGender=function(){$scope.productValidation.proposerAgeCheck?$scope.validateData():$scope.changeGender()},$scope.validateMaritalStatus=function(){$scope.validateData()}}]),angular.module("proposalresdatatravel",["CoreComponentApp","LocalStorageModule","checklist-model","ngMessages"]).controller("proposalResponseDataTravelController",["$scope","$rootScope","$timeout","RestAPI","localStorageService","$location","$window","$http","$filter","$interval","$sce",function($scope,$rootScope,$timeout,RestAPI,localStorageService,$location,$window,$http,$filter,$interval,$sce){var SELF="Self",FEMALE="Female",MALE="Male";loadDatbase(function(){$scope.travelProposalSectionHTML=wp_path+"buy/travel/html/TravelProposalSection.html",$http.get(wp_path+"ApplicationLabels.json").then(function(applicationCommonLabels){$scope.globalLabel=applicationCommonLabels.data.globalLabels,localStorageService.set("applicationLabels",applicationCommonLabels.data),$rootScope.loaderContent={businessLine:"5",header:"Travel Insurance",desc:$sce.trustAsHtml($scope.globalLabel.applicationLabels.travel.proverbBuyProduct)},$rootScope.title=$scope.globalLabel.policies365Title.travelBuyQuote,$rootScope.loading=!0,$scope.proposalFormValid=!0,$scope.screenOneStatus=!0,$scope.screenTwoStatus=!1,$scope.screenThreeStatus=!1,$scope.isAddressSameAsCommun=!0,$scope.accordion=1,$scope.numberOfTravellers=getList(1),$scope.genderType=genderTypeGeneric,$scope.preDiseaseStatus=preDiseaseStatusGeneric,$scope.maritalStatusType=maritalStatusListGeneric,$scope.undertakingList=religareUndertakingList,$scope.medicalQuestionarrier=QuestionListGen,$scope.monthList=healthmonthListGeneric,$scope.relationType=travelGeneric,$scope.nomineeRelationType=nomineeRelationTypeGeneric,$scope.appointeeRelationType=nomineeRelationTypeGeneric,$scope.currencySymbols=currencySymbolList,$scope.proposalStatus={},$scope.proposerDetails={},$scope.proposerDetails.permanentAddress={},$scope.communicationAddress={},$scope.permanentAddressDetails={},$scope.insuredTravellerDetails={},$scope.insuredDetails={},$scope.nominationDetails={},$scope.travelProposalApp={},$scope.tripDetails={},$scope.quoteParam={},$scope.declarationDetails=[],$scope.travelDetails={},$scope.authenticate={},$scope.travelProposalResponse={},$scope.paymentResponse={},$scope.travelPolicyResponse={},$scope.nomineeDetails={},$scope.nomineeDetails.apointeeDetails={},$scope.selectedProduct={},$scope.quoteUserInfo={},$scope.premiumDetails={},$scope.medicalInfo={},$scope.medicalInfo.medicalQuestionarrie=[],$scope.masterDiseaseDetails={},$scope.storedDOBs=[],$scope.storedGenders=[],$scope.resetCommunicationAddress=function(){String($scope.communicationAddress.addressLine)!=$scope.globalLabel.errorMessage.undefinedError&&0!=$scope.communicationAddress.addressLine.length||($scope.communicationAddress.pincode="",$scope.communicationAddress.state="",$scope.communicationAddress.city="")},$scope.resetPermenentAddress=function(){String($scope.permanentAddressDetails.address)!=$scope.globalLabel.errorMessage.undefinedError&&0!=$scope.permanentAddressDetails.addressLine.length||($scope.permanentAddressDetails.pincode="",$scope.permanentAddressDetails.state="",$scope.permanentAddressDetails.city="")},$scope.changePermentAddress=function(){$scope.isAddressSameAsCommun?$scope.permanentAddressDetails=$scope.communicationAddress:($scope.permanentAddressDetails.houseNo="",$scope.permanentAddressDetails.pincode="",$scope.permanentAddressDetails.state="",$scope.permanentAddressDetails.stateCode="",$scope.permanentAddressDetails.cityCode="",$scope.permanentAddressDetails.city="",$scope.permanentAddressDetails.addressLine=""),$scope.proposerDetails.permanentAddress=$scope.permanentAddressDetails},$scope.proposalInfo=function(){var proposalReq=travelProposalRequestDef;proposalReq.premiumDetails=angular.copy(localStorageService.get("selectedProduct")),proposalReq.premiumDetails.sumInsuredCurrencySymbol=proposalReq.premiumDetails.sumInsuredCurrencySymbol,proposalReq.proposerDetails.salutation=findSalutation($scope.proposerDetails.gender),proposalReq.proposerDetails.firstName=$scope.proposerDetails.firstName,proposalReq.proposerDetails.lastName=$scope.proposerDetails.lastName,proposalReq.proposerDetails.dateOfBirth=$scope.proposerDetails.dateOfBirth,proposalReq.proposerDetails.gender=$scope.proposerDetails.gender,proposalReq.proposerDetails.mobileNumber=$scope.proposerDetails.mobileNumber,proposalReq.proposerDetails.emailId=$scope.proposerDetails.emailId,proposalReq.proposerDetails.maritalStatus=$scope.proposerDetails.maritalStatus,$scope.proposerDetails.occupation&&(proposalReq.proposerDetails.occupation=$scope.proposerDetails.occupation),$scope.proposerDetails.purposeOfVisit&&(proposalReq.proposerDetails.purposeOfVisit=$scope.proposerDetails.purposeOfVisit),proposalReq.proposerDetails.communicationAddress=$scope.communicationAddress,$scope.isAddressSameAsCommun?(proposalReq.proposerDetails.isCommuniationAddressSameAsPermanant="Y",$scope.changePermentAddress(),proposalReq.proposerDetails.permanantAddress=$scope.proposerDetails.permanentAddress):(proposalReq.proposerDetails.isCommuniationAddressSameAsPermanant="N",proposalReq.proposerDetails.permanantAddress=$scope.permanentAddressDetails),proposalReq.travelDetails=localStorageService.get("travelDetails"),(proposalReq.travelDetails.tripType="single")&&(proposalReq.travelDetails.tripDuration=0);for(var travellers=localStorageService.get("selectedTravellersForTravel"),j=0;j<travellers.length;j++){var travellerDetail={},nomineeDetail={},appointeeDetail={};travellerDetail.traveller_id=travellers[j].traveller_id,travellerDetail.salutation=findSalutation(travellers[j].gender),travellerDetail.firstName=travellers[j].firstName,travellerDetail.lastName=travellers[j].lastName,travellerDetail.dateOfBirth=travellers[j].dob,travellerDetail.gender=travellers[j].gender,travellerDetail.passportNo=travellers[j].passportNo.toUpperCase(),travellerDetail.relation=travellers[j].relation,nomineeDetail.firstName=travellers[j].nomineeDetails.firstName,nomineeDetail.lastName=travellers[j].nomineeDetails.lastName,nomineeDetail.dateOfBirth=travellers[j].nomineeDetails.dateOfBirth,nomineeDetail.relation=travellers[j].nomineeDetails.relation,travellers[j].nomineeAge<18&&(appointeeDetail.firstName=travellers[j].nomineeDetails.apointeeDetails.firstName,appointeeDetail.lastName=travellers[j].nomineeDetails.apointeeDetails.lastName,appointeeDetail.dateOfBirth=travellers[j].nomineeDetails.apointeeDetails.dateOfBirth,appointeeDetail.relation=travellers[j].nomineeDetails.apointeeDetails.relation,travellerDetail.appointeeDetails={}),travellerDetail.nomineeDetails=nomineeDetail,travellers[j].nomineeAge<18&&(travellerDetail.appointeeDetails=appointeeDetail),proposalReq.medicalQuestionarrie=$scope.medicalInfo.medicalQuestionarrie;for(var preExistingDieases="",diseaseDetails=[],l=0;l<travellers[j].carrierMedicalQuestion.length;l++)null!=travellers[j].carrierMedicalQuestion[l]&&void 0!=travellers[j].carrierMedicalQuestion[l]&&String(travellers[j].carrierMedicalQuestion[l])!=$scope.globalLabel.errorMessage.undefinedError||(travellers[j].carrierMedicalQuestion.splice(l,1),l-=1);for(var k=0;k<$scope.medicalInfo.medicalQuestionarrie.length;k++)if($scope.medicalInfo.medicalQuestionarrie[k].applicable){if("PREXDISEA"==$scope.medicalInfo.medicalQuestionarrie[k].questionCode){preExistingDieases="Y",diseaseDetails=[];for(l=0;l<travellers[j].diseaseDetails.length;l++)if(null!=travellers[j].diseaseDetails[l]){var disease={};disease.diseaseCode=travellers[j].diseaseDetails[l].diseaseCode,disease.diseaseName=travellers[j].diseaseDetails[l].diseaseName,disease.diseaseType=travellers[j].diseaseDetails[l].diseaseType,disease.diseaseDesc=travellers[j].diseaseDetails[l].diseaseDesc,travellers[j].diseaseDetails[l].applicable&&(disease.fromdate=travellers[j].diseaseDetails[l].startDate),disease.applicable=travellers[j].diseaseDetails[l].applicable,diseaseDetails.push(disease)}}}else"PREXDISEA"==$scope.medicalInfo.medicalQuestionarrie[k].questionCode&&(preExistingDieases="N",diseaseDetails=[]);travellerDetail.preExistingDieases=preExistingDieases,travellerDetail.diseaseDetails=diseaseDetails,travellerDetail.carrierMedicalQuestion=travellers[j].carrierMedicalQuestion,proposalReq.travellerDetails[j]=travellerDetail}return proposalReq.declarationDetails=$scope.declarationDetails,$scope.travelProposeFormDetails=proposalReq,$scope.travelProposeFormDetails.productId=proposalReq.premiumDetails.productId,proposalReq},$scope.reCalcQuotes=function(travelQuoteInputParams){localStorageService.get("quoteUserInfo").mobileNumber&&(travelQuoteInputParams.mobileNumber=localStorageService.get("quoteUserInfo").mobileNumber),RestAPI.invoke($scope.globalLabel.getRequest.quoteTravel,travelQuoteInputParams).then(function(callback){if($scope.travelRecalculateQuoteRequest=[],callback.responseCode==$scope.globalLabel.responseCode.success)$scope.responseRecalculateCodeList=[],$scope.travelQuoteResult=[],$scope.quoteCalcResponse=[],String($scope.quoteCalcResponse)!=$scope.globalLabel.errorMessage.undefinedError&&$scope.quoteCalcResponse.length>0&&($scope.quoteCalcResponse.length=0),localStorageService.set("QUOTE_ID",callback.QUOTE_ID),localStorageService.set("TRAVEL_UNIQUE_QUOTE_ID",callback.QUOTE_ID),$scope.travelRecalculateQuoteRequest=callback.data,angular.forEach($scope.travelRecalculateQuoteRequest,function(obj,i){var request={},header={};header.messageId=messageIDVar,header.campaignID=campaignIDVar,header.source=sourceOrigin,header.transactionName=$scope.globalLabel.transactionName.travelQuoteResult,header.deviceId=deviceIdOrigin,request.header=header,request.body=obj,$http({method:"POST",url:getQuoteCalcLink,data:request}).success(function(callback,status){var travelQuoteResponse=JSON.parse(callback);if($scope.responseRecalculateCodeList.push(travelQuoteResponse.responseCode),travelQuoteResponse.responseCode==$scope.globalLabel.responseCode.success){if(null!=travelQuoteResponse.data&&travelQuoteResponse.data.quotes[0].carrierId==$scope.selectedProduct.carrierId&&travelQuoteResponse.data.quotes[0].planId==$scope.selectedProduct.planId){if($scope.loading=!1,$scope.premiumDetails=travelQuoteResponse.data.quotes[0],$scope.selectedProduct=travelQuoteResponse.data.quotes[0],void 0==travelQuoteResponse.data.quotes[0].carrierQuoteId&&""==travelQuoteResponse.data.quotes[0].carrierQuoteId&&null==travelQuoteResponse.data.quotes[0].carrierQuoteId||($scope.selectedProduct.carrierQuoteId=travelQuoteResponse.data.quotes[0].carrierQuoteId),void 0!=$scope.selectedProduct.sumInsuredCurrency&&""!=$scope.selectedProduct.sumInsuredCurrency)for(var k=0;k<$scope.currencySymbols.length;k++)$scope.currencySymbols[k].symbol==$scope.selectedProduct.sumInsuredCurrency&&($scope.selectedProduct.sumInsuredCurrency=$scope.currencySymbols[k].symbol,$scope.selectedProduct.sumInsuredCurrencySymbol=$sce.trustAsHtml($scope.currencySymbols[k].htmlCode));else $scope.selectedProduct.sumInsuredCurrency=$scope.currencySymbols[0].symbol,$scope.selectedProduct.sumInsuredCurrencySymbol=$sce.trustAsHtml($scope.currencySymbols[0].htmlCode);localStorageService.set("selectedProduct",$scope.selectedProduct)}travelQuoteResponse.data.quotes[0].id=travelQuoteResponse.messageId,$scope.quoteCalcResponse.push(travelQuoteResponse.data.quotes[0])}else if(null!=travelQuoteResponse.data&&travelQuoteResponse.data.quotes[0].carrierId==$scope.selectedProduct.carrierId&&travelQuoteResponse.data.quotes[0].planId==$scope.selectedProduct.planId){$scope.loading=!1;var screenCnfrmError=$scope.selectedProduct.insuranceCompany+""+$scope.globalLabel.errorMessage.screenConfirmErrorMsgDob;$rootScope.P365Alert("Policies365",screenCnfrmError,"Ok")}}).error(function(data,status){$scope.responseRecalculateCodeList.push($scope.globalLabel.responseCode.systemError),$scope.loading=!1})});else{$scope.loading=!1;var screenCnfrmError=$scope.selectedProduct.insuranceCompany+""+$scope.globalLabel.errorMessage.screenConfirmErrorMsgDob;$rootScope.P365Alert("Policies365",screenCnfrmError,"Ok")}})},$scope.showAuthenticateForm=function(){$scope.disableOTP=!1;var validateAuthParam={paramMap:{}};validateAuthParam.mobileNumber=$scope.proposerDetails.mobileNumber,validateAuthParam.funcType=$scope.globalLabel.functionType.optAuth,validateAuthParam.paramMap.OTP=$scope.globalLabel.functionType.otpGenerate,sessionIDvar&&(validateAuthParam.sessionId=sessionIDvar),getDocUsingParam(RestAPI,$scope.globalLabel.transactionName.sendSMS,validateAuthParam,function(createOTP){createOTP.responseCode==$scope.globalLabel.responseCode.success?($scope.createOTPError="",$scope.modalOTP=!0):createOTP.responseCode==$scope.globalLabel.responseCode.blockedMobile?($scope.createOTPError=createOTP.message,$scope.modalOTPError=!0,$scope.disableOTP=!0):($scope.createOTPError=$scope.globalLabel.errorMessage.createOTP,$scope.modalOTPError=!0)})},$scope.hideModal=function(){$scope.modalOTP=!1,$scope.disablePaymentButton=!0,$scope.authenticate.enteredOTP=""},$scope.hideModalError=function(){$scope.modalOTPError=!1},$scope.validateAuthenticateForm=function(){$scope.OTPFlag?$scope.showAuthenticateForm():$scope.OTPFlag||$scope.proceedForPayment()},$scope.resendOTP=function(){var validateAuthParam={paramMap:{}};validateAuthParam.mobileNumber=$scope.proposerDetails.mobileNumber,validateAuthParam.funcType=$scope.globalLabel.functionType.optAuth,validateAuthParam.paramMap.OTP=$scope.globalLabel.functionType.otpGenerate,sessionIDvar&&(validateAuthParam.sessionId=sessionIDvar),getDocUsingParam(RestAPI,$scope.globalLabel.transactionName.sendSMS,validateAuthParam,function(createOTP){createOTP.responseCode==$scope.globalLabel.responseCode.success?$scope.invalidOTPError="":createOTP.responseCode==$scope.globalLabel.responseCode.userNotExist?$scope.invalidOTPError=createOTP.message:createOTP.responseCode==$scope.globalLabel.responseCode.blockedMobile?$scope.invalidOTPError=createOTP.message:createOTP.responseCode==$scope.globalLabel.responseCode.mobileInvalidCode?$scope.invalidOTPError=createOTP.message:$scope.invalidOTPError=$scope.globalLabel.errorMessage.createOTP})},$scope.getYearList=function(dateofBirth){var dateArr=dateofBirth.split("/"),newDOB=dateArr[1]+"/"+dateArr[0]+"/"+dateArr[2];return listRegistrationYear("buyScreen",calculateAgeByDOB(newDOB))},$scope.setDieaseStartDate=function(insuredDiseaseDetails){null!=insuredDiseaseDetails.startMonth?insuredDiseaseDetails.startDate="01/"+insuredDiseaseDetails.startMonth+"/"+insuredDiseaseDetails.startYear:null!=insuredDiseaseDetails.startYear&&(insuredDiseaseDetails.startDate="01/01/"+insuredDiseaseDetails.startYear)},$scope.proceedForPayment=function(){if($scope.modalOTP=!1,$scope.modalOTPError=!1,$scope.proposalFormValid){var proposalSubmitConfirmMsg="Please make sure you have entered the right Mobile Number and Email ID. All our communication will be sent to your Mobile "+$scope.proposerDetails.mobileNumber+" or Email "+$scope.proposerDetails.emailId+". Is the entered Mobile No. and Email ID right?";$rootScope.P365Confirm($scope.globalLabel.applicationLabels.common.p365prompt,proposalSubmitConfirmMsg,"No","Yes",function(confirmStatus){confirmStatus&&$scope.proceedForConfirm()})}},$scope.submitProposalRequest=function(){var proposalReqNode=$scope.proposalInfo();if($scope.travelProposeFormDetails.QUOTE_ID=localStorageService.get("TRAVEL_UNIQUE_QUOTE_ID"),$scope.travelProposeFormDetails.requestType=$scope.globalLabel.request.travelPropRequestType,$scope.travelProposeFormDetails.planId=$scope.travelProposeFormDetails.premiumDetails.planId,$scope.travelProposeFormDetails.carrierId=$scope.travelProposeFormDetails.premiumDetails.carrierId,$scope.travelProposeFormDetails.businessLineId=$scope.globalLabel.businessLineType.travel,$rootScope.wordPressEnabled?$scope.travelProposeFormDetails.source=sourceOrigin:($scope.travelProposeFormDetails.baseEnvStatus=baseEnvEnabled,$scope.travelProposeFormDetails.source=sourceOrigin),$scope.loading=!0,$rootScope.agencyPortalEnabled){const localdata=JSON.parse(localStorage.getItem("finalLocalStorage"));$scope.travelProposeFormDetails.requestSource=sourceOrigin,$scope.travelProposeFormDetails.userName=localdata.username,$scope.travelProposeFormDetails.agencyId=localdata.agencyId}RestAPI.invoke($scope.globalLabel.transactionName.submitTravelProposal,$scope.travelProposeFormDetails).then(function(proposeFormResponse){if(proposeFormResponse.responseCode==$scope.globalLabel.responseCode.success)if($scope.responseToken=proposeFormResponse.data,$scope.responseToken.businessLineId=$scope.globalLabel.businessLineType.travel,$scope.responseToken.QUOTE_ID=$scope.iposRequest.docId,localStorageService.set("travelReponseToken",$scope.responseToken),$scope.encryptedProposalId=proposeFormResponse.data.encryptedProposalId,localStorageService.set("proposalIdEncrypted",$scope.encryptedProposalId),1==imauticAutomation)imatTravelProposal(localStorageService,$scope,"MakePayment");else{$rootScope.encryptedProposalID=$scope.encryptedProposalId;var body={};body.longURL=sharePaymentLink+String($scope.responseToken.proposalId)+"&lob="+String($scope.globalLabel.businessLineType.travel),$http({method:"POST",url:getShortURLLink,data:body}).success(function(shortURLResponse){if(shortURLResponse.responseCode==$scope.globalLabel.responseCode.success){var proposalDetailsEmail={paramMap:{}};proposalDetailsEmail.funcType=$scope.globalLabel.functionType.proposalDetailsTemplate,proposalDetailsEmail.isBCCRequired="Y",proposalDetailsEmail.username=proposalReqNode.proposerDetails.emailId.trim(),proposalDetailsEmail.paramMap.customerName=proposalReqNode.proposerDetails.firstName.trim()+SPACE+proposalReqNode.proposerDetails.lastName.trim(),proposalDetailsEmail.paramMap.selectedPolicyType=$scope.globalLabel.insuranceType.travel,proposalDetailsEmail.paramMap.quoteId=$scope.iposRequest.docId,proposalDetailsEmail.paramMap.premiumAmount=String($scope.selectedProduct.grossPremium),proposalDetailsEmail.paramMap.docId=String($scope.responseToken.proposalId),proposalDetailsEmail.paramMap.LOB=String($scope.globalLabel.businessLineType.travel),proposalDetailsEmail.paramMap.url=shortURLResponse.data.shortURL,RestAPI.invoke($scope.globalLabel.transactionName.sendEmail,proposalDetailsEmail).then(function(emailResponse){if(emailResponse.responseCode==$scope.globalLabel.responseCode.success)if(1==baseEnvEnabled&&1==agencyPortalEnabled){var frameURL=agencyPortalUrl+proposalDetailsEmail.paramMap.docId+"&lob="+proposalDetailsEmail.paramMap.LOB;$scope.URLforPayment=$sce.trustAsResourceUrl(frameURL),$scope.modalAP=!0,$scope.loading=!1}else $scope.loading=!1,$scope.modalIPOS=!0;else $scope.loading=!1,$rootScope.P365Alert("Policies365",$scope.globalLabel.errorMessage.emailSentFailed,"Ok")})}else $scope.loading=!1,$rootScope.P365Alert("Policies365",$scope.globalLabel.errorMessage.emailSentFailed,"Ok")})}else if(proposeFormResponse.responseCode==$scope.globalLabel.responseCode.error)$scope.disablePaymentButton=!1,$scope.loading=!1,$rootScope.P365Alert("Error",proposeFormResponse.data,"Ok");else{1==imauticAutomation&&imatEvent("ProposalFailed"),$scope.loading=!1;var serverError=$scope.globalLabel.errorMessage.serverError;$rootScope.P365Alert("Policies365",serverError,"Ok")}})},$scope.proceedForConfirm=function(){$scope.disablePaymentButton=!1;var authenticateUserParam={};authenticateUserParam.mobileNumber=$scope.proposerDetails.mobileNumber,authenticateUserParam.OTP=Number($scope.authenticate.enteredOTP),$scope.disablePaymentButton=!0,$scope.modalOTP=!1,$scope.modalOTPError=!1,$scope.loading=!0,$scope.proposalInfo(),$scope.travelProposeFormDetails.QUOTE_ID=localStorageService.get("TRAVEL_UNIQUE_QUOTE_ID"),$scope.travelProposeFormDetails.requestType=$scope.globalLabel.request.travelPropRequestType,$scope.travelProposeFormDetails.planId=$scope.travelProposeFormDetails.premiumDetails.planId,$scope.travelProposeFormDetails.carrierId=$scope.travelProposeFormDetails.premiumDetails.carrierId,$scope.travelProposeFormDetails.businessLineId=$scope.globalLabel.businessLineType.travel,$rootScope.wordPressEnabled?$scope.travelProposeFormDetails.source=sourceOrigin:($scope.travelProposeFormDetails.baseEnvStatus=baseEnvEnabled,$scope.travelProposeFormDetails.source=sourceOrigin),localStorageService.set("travelFinalProposeForm",$scope.travelProposeFormDetails),$scope.loading=!0,RestAPI.invoke($scope.globalLabel.transactionName.submitTravelProposal,$scope.travelProposeFormDetails).then(function(proposeFormResponse){if($scope.modalOTP=!1,$scope.authenticate.enteredOTP="",$scope.modalOTPError=!1,proposeFormResponse.responseCode==$scope.globalLabel.responseCode.success){var proposalId=$scope.proposalId;sharePaymentLink;$scope.encryptedProposalId=proposeFormResponse.data.encryptedProposalId,localStorageService.set("proposalIdEncrypted",$scope.encryptedProposalId),1==imauticAutomation&&imatTravelProposal(localStorageService,$scope,"SubmitProposal"),$scope.responseToken=proposeFormResponse.data,$scope.responseToken.paymentGateway=$scope.paymentURL,$scope.responseToken.businessLineId=$scope.globalLabel.businessLineType.travel,localStorageService.set("travelReponseToken",$scope.responseToken),getDocUsingParam(RestAPI,$scope.globalLabel.transactionName.paymentService,$scope.responseToken,function(paymentDetails){if(paymentDetails.responseCode==$scope.globalLabel.responseCode.success){$scope.paymentServiceResponse=paymentDetails.data;var paymentURLParamListLength=$scope.paymentServiceResponse.paramterList.length;if("GET"==$scope.paymentServiceResponse.method){var paymentURLParam="?";for(paymentURLParamListLength=$scope.paymentServiceResponse.paramterList.length,i=0;i<paymentURLParamListLength;i++)i<paymentURLParamListLength-1?paymentURLParam+=$scope.paymentServiceResponse.paramterList[i].name+"="+$scope.paymentServiceResponse.paramterList[i].value+"&":paymentURLParam+=$scope.paymentServiceResponse.paramterList[i].name+"="+$scope.paymentServiceResponse.paramterList[i].value;$window.location.href=$scope.paymentServiceResponse.paymentURL+paymentURLParam}else $timeout(function(){$scope.paymentForm.setAction($scope.paymentServiceResponse.paymentURL),$scope.paymentForm.commit()},100)}else{$scope.loading=!1;var buyScreenCnfrmError=paymentDetails.responseCode+" : "+$scope.globalLabel.validationMessages.buyScreenCnfrmError.replace("INSURER_NAME",$scope.selectedProduct.insuranceCompany);$rootScope.P365Alert($scope.globalLabel.applicationLabels.common.p365prompt,buyScreenCnfrmError,"Ok")}})}else if(proposeFormResponse.responseCode==$scope.globalLabel.responseCode.error)$scope.disablePaymentButton=!1,$scope.loading=!1,$rootScope.P365Alert("Error",proposeFormResponse.data,"Ok");else{$scope.loading=!1,$scope.disablePaymentButton=!1;var buyScreenCnfrmError=proposeFormResponse.responseCode+" : "+$scope.globalLabel.validationMessages.buyScreenCnfrmError.replace("INSURER_NAME",$scope.selectedProduct.insuranceCompany);$rootScope.P365Alert($scope.globalLabel.applicationLabels.common.p365prompt,buyScreenCnfrmError,"Ok")}})},$scope.hideModalIPOS=function(){$scope.modalIPOS=!1},$scope.hideModalAP=function(){$scope.modalAP=!1},$scope.editProposerInfo=function(){$scope.accordion=1,$scope.screenOneStatus=!0,$scope.screenTwoStatus=!1,$scope.screenThreeStatus=!1,$scope.disableAllFields()},$scope.editInsuredInfo=function(){$scope.accordion=2,$scope.screenOneStatus=!1,$scope.screenTwoStatus=!0,$scope.screenThreeStatus=!1,$scope.disableAllFields()},$scope.submitPersonalDetails=function(){$scope.screenOneStatus=!0,$scope.screenTwoStatus=!0,$scope.screenThreeStatus=!1,$scope.screenFourStatus=!1,$scope.Section2Inactive=!1,$scope.accordion=2,$scope.quoteParam.proposerDetails=$scope.proposerDetails,localStorageService.set("proposerDetails",$scope.proposerDetails),1==imauticAutomation&&imatEvent("ProposalFilled");for(var i=0;i<$scope.selectedTravellers.length;i++)$scope.selectedTravellers[i].relation&&$scope.selectedTravellers[i].relation==SELF?($scope.selectedTravellers[i].relationshipCode="S",$scope.selectedTravellers[i].firstName=$scope.proposerDetails.firstName,$scope.selectedTravellers[i].lastName=$scope.proposerDetails.lastName,$scope.selectedTravellers[i].dob=$scope.proposerDetails.dateOfBirth,$scope.selectedTravellers[i].gender=$scope.proposerDetails.gender,$scope.selectedTravellers[i].sameAsProposer=!0,$scope.changeDateOfBirth(i)):$scope.selectedTravellers[i].relation&&"Spouse"==$scope.selectedTravellers[i].relation&&($scope.selectedTravellers[i].gender=$scope.proposerDetails.gender==FEMALE?MALE:FEMALE,$scope.selectedTravellers[i].sameAsProposer=!1)},$scope.submitAddressDetails=function(){$scope.screenOneStatus=!0,$scope.screenTwoStatus=!0,$scope.screenThreeStatus=!0,$scope.screenFourStatus=!1,$scope.Section2Inactive=!1,$scope.accordion=3,$scope.quoteParam.proposerDetails=$scope.proposerDetails,localStorageService.set("proposerDetails",$scope.proposerDetails);for(var i=0;i<$scope.selectedTravellers.length;i++)$scope.selectedTravellers[i].relation&&$scope.selectedTravellers[i].relation==SELF?($scope.selectedTravellers[i].relationshipCode="S",$scope.selectedTravellers[i].firstName=$scope.proposerDetails.firstName,$scope.selectedTravellers[i].lastName=$scope.proposerDetails.lastName,$scope.selectedTravellers[i].dob=$scope.proposerDetails.dateOfBirth,$scope.selectedTravellers[i].gender=$scope.proposerDetails.gender,$scope.selectedTravellers[i].sameAsProposer=!0):$scope.selectedTravellers[i].relation&&"Spouse"==$scope.selectedTravellers[i].relation&&($scope.selectedTravellers[i].gender=$scope.proposerDetails.gender==FEMALE?MALE:FEMALE,$scope.selectedTravellers[i].sameAsProposer=!1)},$scope.submitInsuredDetails=function(){$scope.screenOneStatus=!0,$scope.screenTwoStatus=!0,$scope.screenThreeStatus=!0,$scope.screenFourStatus=!0,$scope.Section2Inactive=!1,$scope.accordion=4,localStorageService.set("selectedTravellersForTravel",$scope.selectedTravellers)},$scope.proposalDocParam={};var proposalId=$location.search().proposalId;$scope.proposalDocParam.proposalId=proposalId,$scope.proposalDocParam.businessLineId=$scope.globalLabel.businessLineType.travel,$scope.iposRequest={},$scope.iposRequest.parent_id=String($rootScope.parent_id)!=$scope.globalLabel.errorMessage.undefinedError?$rootScope.parent_id:$location.search().recordId,$scope.iposRequest.parent_type=String($rootScope.parent_type)!=$scope.globalLabel.errorMessage.undefinedError?$rootScope.parent_type:$location.search().moduleName,$scope.iposRequest.requestType=$scope.globalLabel.request.createProposalRecord,$scope.quote={},RestAPI.invoke($scope.globalLabel.transactionName.proposalDataReader,$scope.proposalDocParam).then(function(proposalDataResponse){if(proposalDataResponse.responsecode==$scope.globalLabel.responseCode.success){if($scope.responseProduct=proposalDataResponse.data.PolicyTransaction,$scope.responseProduct.proposalRequest.declarationDetails)for(var i=0;i<$scope.responseProduct.proposalRequest.declarationDetails.length;i++)$scope.declarationDetails[i].accepted=$scope.responseProduct.proposalRequest.declarationDetails[i].accepted;$scope.proposalStatusForm=!0,null!=$scope.responseProduct.travelProposalResponse&&($scope.proposalStatus.statusDateProp=$scope.responseProduct.travelProposalResponse.updatedDate,$scope.proposalStatus.statusProp="completed"),null!=$scope.responseProduct.paymentResponse&&(1==$scope.responseProduct.paymentResponse.transactionStatusCode?($scope.proposalStatus.statusDatePaym=$scope.responseProduct.paymentResponse.updatedDate,$scope.proposalStatus.statusPaym="completed",$scope.disableAllFields=function(){setTimeout(function(){$("form md-option").attr("disabled","disabled"),$("form md-select").attr("disabled","disabled"),$("input").attr("disabled","disabled"),$("md-radio-button").attr("disabled","disabled"),$("md-checkbox").attr("disabled","disabled"),$scope.medicalDetailsForm.$invalid=!0},1e3)},$scope.disableAllFields()):0==$scope.responseProduct.paymentResponse.transactionStatusCode?($scope.proposalStatus.statusDatePaym=$scope.responseProduct.paymentResponse.updatedDate,$scope.proposalStatus.statusPaym="failed"):($scope.proposalStatus.statusPaym="pending",$scope.proposalStatus.statusPoli="pending")),null!=$scope.responseProduct.travelPolicyResponse&&(1==$scope.responseProduct.travelPolicyResponse.transactionStatusCode?($scope.proposalStatus.statusDatePoli=$scope.responseProduct.travelPolicyResponse.updatedDate,$scope.proposalStatus.statusPoli="completed"):0==$scope.responseProduct.travelPolicyResponse.transactionStatusCode&&($scope.proposalStatus.statusDatePoli=$scope.responseProduct.travelPolicyResponse.updatedDate,$scope.proposalStatus.statusPoli="failed")),$scope.travelProposalApp.documentType="TravelProposalRequest",$scope.travelProposalApp.carrierId=$scope.responseProduct.proposalRequest.premiumDetails.carrierId,$scope.travelProposalApp.productId=$scope.responseProduct.proposalRequest.premiumDetails.productId,$scope.travelProposalApp.planId=$scope.responseProduct.proposalRequest.premiumDetails.planId,$scope.travelProposalApp.QUOTE_ID=$scope.responseProduct.QUOTE_ID,localStorageService.set("QUOTE_ID",$scope.responseProduct.QUOTE_ID),localStorageService.set("TRAVEL_UNIQUE_QUOTE_ID",$scope.responseProduct.QUOTE_ID),$scope.travelProposalApp.businessLineId=$scope.globalLabel.businessLineType.travel,messageIDVar=$scope.responseProduct.leadMessageId;var buyScreenParam={};buyScreenParam.documentType=$scope.globalLabel.applicationLabels.common.constants.proposalScreenConfig,buyScreenParam.businessLineId=Number($scope.globalLabel.businessLineType.travel),buyScreenParam.carrierId=$scope.travelProposalApp.carrierId,buyScreenParam.productId=$scope.travelProposalApp.productId,buyScreenParam.QUOTE_ID=$scope.travelProposalApp.QUOTE_ID,getDocUsingParam(RestAPI,$scope.globalLabel.transactionName.productDataReader,buyScreenParam,function(buyScreen){if(buyScreen.responseCode==$scope.globalLabel.responseCode.success){var buyScreens=buyScreen.data;$scope.productValidation=buyScreens.validation,$scope.requestFormat=buyScreens.requestFormat,$scope.transactionName=buyScreens.transaction.proposalService.name,buyScreens.visitPurposes&&($scope.purposeListOfVisit=buyScreens.visitPurposes,$scope.proposerDetails.purposeOfVisit=$scope.purposeListOfVisit[0].purposeOfVisit),$scope.occupationCheck=$scope.productValidation.occupationCheck,$scope.paymentURL=buyScreens.paymentUrl,$scope.OTPFlag=$scope.productValidation.OTPFlag,$scope.proposerDetailsTemplate=$sce.trustAsHtml(buyScreens.templates[0].template),$scope.travellersDetailsTemplate=$sce.trustAsHtml(buyScreens.templates[1].template),$scope.medicalDetailsTemplate=$sce.trustAsHtml(buyScreens.templates[2].template),$scope.occupationDetailsTemplate=$sce.trustAsHtml(buyScreens.templates[3].template),$scope.productValidation.areaMaxLength?$scope.areaMaxLength=$scope.productValidation.areaMaxLength:$scope.areaMaxLength=250,getDocUsingIdQuoteDB(RestAPI,$scope.travelProposalApp.QUOTE_ID,function(quoteCalcDetails){$scope.quoteCalcResponse=quoteCalcDetails.quoteResponse,$scope.quoteCalcRequest=quoteCalcDetails.quoteRequest;for(var i=0;i<$scope.quoteCalcResponse.length;i++)if($scope.quoteCalcResponse[i].carrierId==$scope.responseProduct.proposalRequest.premiumDetails.carrierId){$scope.premiumDetails.selectedProductDetails=$scope.quoteCalcResponse[i],$scope.selectedProduct=$scope.premiumDetails.selectedProductDetails;break}$scope.changeInsuranceCompany=function(){$location.path("/buyTravel").search({quoteId:localStorageService.get("TRAVEL_UNIQUE_QUOTE_ID"),carrierId:$scope.premiumDetails.selectedProductDetails.carrierId,productId:$scope.premiumDetails.selectedProductDetails.productId,lob:localStorageService.get("selectedBusinessLineId")})},$scope.quoteCalcRequest.quoteParam.userIdv=parseInt($scope.responseProduct.proposalRequest.premiumDetails.sumInsured),$scope.productValidation.reQuoteCalc?RestAPI.invoke($scope.globalLabel.getRequest.quoteTravel,$scope.quoteCalcRequest).then(function(proposeFormResponse){$scope.travelRecalculateQuoteRequest=[],proposeFormResponse.responseCode==$scope.globalLabel.responseCode.success?($scope.responseProduct.QUOTE_ID=proposeFormResponse.QUOTE_ID,localStorageService.set("QUOTE_ID",proposeFormResponse.QUOTE_ID),$scope.travelRecalculateQuoteRequest=proposeFormResponse.data,$scope.quoteCalcResponse=[],angular.forEach($scope.travelRecalculateQuoteRequest,function(obj,i){var request={},header={};header.transactionName=$scope.globalLabel.transactionName.travelQuoteResult,header.deviceId=deviceIdOrigin,request.header=header,request.body=obj,$http({method:"POST",url:getQuoteCalcLink,data:request}).success(function(callback,status){var travelQuoteResponse=JSON.parse(callback);$scope.responseRecalculateCodeList.push(travelQuoteResponse.responseCode),travelQuoteResponse.responseCode==$scope.globalLabel.responseCode.success?(null!=travelQuoteResponse.data&&travelQuoteResponse.data.quotes[0].carrierId==$scope.responseProduct.carrierId&&travelQuoteResponse.data.quotes[0].productId==$scope.responseProduct.productId&&($scope.loading=!1,$scope.premiumDetails=travelQuoteResponse.data.quotes[0],$scope.selectedProduct=travelQuoteResponse.data.quotes[0],$scope.proposalDataReader()),travelQuoteResponse.data.quotes[0].id=travelQuoteResponse.messageId,$scope.quoteCalcResponse.push(travelQuoteResponse.data.quotes[0])):null!=travelQuoteResponse.data&&travelQuoteResponse.data.quotes[0].carrierId==$scope.responseProduct.carrierId&&travelQuoteResponse.data.quotes[0].productId==$scope.responseProduct.productId&&($scope.loading=!1,$scope.propScreenError=$scope.globalLabel.validationMessages.generalisedErrMsg,$scope.modalPropScreenError=!0)})})):($scope.propScreenError=$scope.globalLabel.validationMessages.generalisedErrMsg,$scope.modalPropScreenError=!0)}):$scope.proposalDataReader()})}else $rootScope.P365Alert("Error",buyScreen.data,"Ok")}),$scope.redirectToQuote=function(){$location.path("/quote")}}else{$scope.loading=!1;var buyScreenCnfrmError=$scope.globalLabel.validationMessages.buyScreenCnfrmError.replace("INSURER_NAME",$scope.selectedProduct.insuranceCompany);$rootScope.P365Alert("Policies365",buyScreenCnfrmError,"Ok")}$scope.initTravellersDOB=function(){for(var len=$scope.selectedTravellers.length,i=0;i<len;i++){var travellerDOBOption={};"Father"==$scope.selectedTravellers[i].relation||"Mother"==$scope.selectedTravellers[i].relation?(travellerDOBOption.minimumYearLimit="-100Y",fAge=Math.round(getAgeFromDOB($scope.proposerDetails.dateOfBirth)),travellerDOBOption.maximumYearLimit="-"+(fAge+21)+"y",travellerDOBOption.changeMonth=!0,travellerDOBOption.changeYear=!0,travellerDOBOption.dateFormat="dd/mm/yy",$scope["travellerDOBOptions"+i]=setP365DatePickerProperties(travellerDOBOption)):"Son"==$scope.selectedTravellers[i].relation||"Daughter"==$scope.selectedTravellers[i].relation?(travellerDOBOption.minimumYearLimit="-"+$scope.productValidation.childMaxAge+"Y",travellerDOBOption.maximumDayLimit=-$scope.productValidation.childMinAge,travellerDOBOption.changeMonth=!0,travellerDOBOption.changeYear=!0,travellerDOBOption.dateFormat="dd/mm/yy",$scope["travellerDOBOptions"+i]=setP365DatePickerProperties(travellerDOBOption)):(travellerDOBOption.minimumYearLimit="-"+$scope.productValidation.maxAge+"Y",travellerDOBOption.maximumYearLimit="-"+$scope.productValidation.maleMinAgeSingle+"y",travellerDOBOption.changeMonth=!0,travellerDOBOption.changeYear=!0,travellerDOBOption.dateFormat="dd/mm/yy",$scope["travellerDOBOptions"+i]=setP365DatePickerProperties(travellerDOBOption))}},$scope.prePopulateForm=function(){$scope.quote=$scope.responseProduct.proposalRequest;for(var w=0;w<$scope.quoteCalcRequest.quoteParam.travellers.length;w++)$scope.quoteCalcRequest.quoteParam.travellers[w].dob=angular.copy($scope.quoteCalcRequest.quoteParam.travellers[w].memberDOB),delete $scope.quoteCalcRequest.quoteParam.travellers[w].memberDOB;$scope.quoteParam=$scope.quoteCalcRequest.quoteParam,$scope.quote.quoteParam=$scope.quoteParam,$scope.quote.requestType=$scope.quoteCalcRequest.requestType,$scope.quoteRecalcParam=angular.copy($scope.quote),$scope.proposerDetails=$scope.responseProduct.proposalRequest.proposerDetails,$scope.communicationAddress=$scope.responseProduct.proposalRequest.proposerDetails.communicationAddress;var addressFlag=$scope.responseProduct.proposalRequest.proposerDetails.isCommuniationAddressSameAsPermanant;if($scope.isAddressSameAsCommun="Y"==addressFlag,$scope.isAddressSameAsCommun?$scope.permanentAddressDetails=$scope.responseProduct.proposalRequest.proposerDetails.communicationAddress:$scope.permanentAddressDetails=$scope.responseProduct.proposalRequest.proposerDetails.permanantAddress,$scope.selectedProduct=$scope.responseProduct.proposalRequest.premiumDetails,localStorageService.get("selectedBusinessLineId",$scope.selectedProduct.quoteType),void 0!=$scope.selectedProduct.sumInsuredCurrency&&""!=$scope.selectedProduct.sumInsuredCurrency)for(var k=0;k<$scope.currencySymbols.length;k++)$scope.currencySymbols[k].symbol==$scope.selectedProduct.sumInsuredCurrency&&($scope.selectedProduct.sumInsuredCurrency=$scope.currencySymbols[k].symbol,$scope.selectedProduct.sumInsuredCurrencySymbol=$sce.trustAsHtml($scope.currencySymbols[k].htmlCode));else $scope.selectedProduct.sumInsuredCurrency=$scope.currencySymbols[0].symbol,$scope.selectedProduct.sumInsuredCurrencySymbol=$sce.trustAsHtml($scope.currencySymbols[0].htmlCode);if(localStorageService.set("selectedProduct",$scope.selectedProduct),$scope.travelDetails=$scope.responseProduct.proposalRequest.travelDetails,localStorageService.set("travelDetails",$scope.travelDetails),$scope.selectedTravellers=$scope.responseProduct.proposalRequest.travellerDetails,$scope.responseProduct.proposalRequest.travellerDetails){var len=$scope.responseProduct.proposalRequest.travellerDetails.length;$scope.storedDOBs=[],$scope.storedGenders=[];for(var j=0;j<len;j++)getAgeFromDOB($scope.responseProduct.proposalRequest.travellerDetails[j].dateOfBirth)<$scope.productValidation.maleMinAgeSingle?($scope.selectedTravellers[j].gender=$scope.responseProduct.proposalRequest.travellerDetails[j].gender,$scope.selectedTravellers[j].dob=$scope.responseProduct.proposalRequest.travellerDetails[j].dateOfBirth,$scope.selectedTravellers[j].gender==MALE?$scope.selectedTravellers[j].relation="Son":$scope.selectedTravellers[j].relation="Daughter",$scope.changeRelation(j)):($scope.selectedTravellers[j].dob=$scope.responseProduct.proposalRequest.travellerDetails[j].dateOfBirth,$scope.selectedTravellers[j].gender=$scope.responseProduct.proposalRequest.travellerDetails[j].gender),$scope.storedDOBs.push($scope.responseProduct.proposalRequest.travellerDetails[j].dateOfBirth),$scope.storedGenders.push($scope.responseProduct.proposalRequest.travellerDetails[j].gender)}$scope.quoteRecalcParam.quoteParam.travellers=$scope.selectedTravellers,localStorageService.set("selectedTravellersForTravel",$scope.selectedTravellers),$scope.medicalQuestionarrier=$scope.responseProduct.proposalRequest.medicalQuestionarrie,$scope.medicalInfo.medicalQuestionarrie=$scope.medicalQuestionarrier,$scope.initTravellersDOB()},$scope.initDatePickers=function(){var proposerDOBOption={};proposerDOBOption.minimumYearLimit="-"+$scope.productValidation.proposerDateOfBirthMaxLimit+"Y",proposerDOBOption.maximumYearLimit="-"+$scope.productValidation.proposerDateOfBirthMinLimit+"Y",proposerDOBOption.changeMonth=!0,proposerDOBOption.changeYear=!0,proposerDOBOption.dateFormat="dd/mm/yy",$scope.proposerDOBOptions=setP365DatePickerProperties(proposerDOBOption);var nomineeDOBOption={};nomineeDOBOption.minimumYearLimit="-"+$scope.productValidation.proposerDateOfBirthMaxLimit+"Y",nomineeDOBOption.maximumYearLimit="-1Y",nomineeDOBOption.changeMonth=!0,nomineeDOBOption.changeYear=!0,nomineeDOBOption.dateFormat="dd/mm/yy",$scope.nomineeDOBOptions=setP365DatePickerProperties(nomineeDOBOption);var appointeeDOBOption={};appointeeDOBOption.minimumYearLimit="-"+$scope.productValidation.proposerDateOfBirthMaxLimit+"Y",appointeeDOBOption.maximumYearLimit="-"+$scope.productValidation.proposerDateOfBirthMinLimit+"y",appointeeDOBOption.changeMonth=!0,appointeeDOBOption.changeYear=!0,appointeeDOBOption.dateFormat="dd/mm/yy",$scope.appointeeDOBOptions=setP365DatePickerProperties(appointeeDOBOption);var hospitalisedOption={minimumMonthLimit:"-48m",maximumMonthLimit:"0m",changeMonth:!0,changeYear:!0,dateFormat:"dd/mm/yy"};$scope.hospitalisedDateOptions=setP365DatePickerProperties(hospitalisedOption);var claimDateOption={minimumMonthLimit:"-48m",maximumMonthLimit:"0m",changeMonth:!0,changeYear:!0,dateFormat:"dd/mm/yy"};$scope.claimedDateOptions=setP365DatePickerProperties(claimDateOption)},$scope.proposalDataReader=function(){if($scope.occupationCheck=$scope.productValidation.occupationCheck,$scope.occupationCheck){var occupationDocId=$scope.globalLabel.documentType.travelOccupation+"-"+$scope.travelProposalApp.carrierId+"-"+$scope.travelProposalApp.productId;getDocUsingId(RestAPI,occupationDocId,function(occupationList){$scope.occupationList=occupationList.Occupation,localStorageService.set("travelBuyOccupationList",occupationList.Occupation)})}$rootScope.loading=!1,$scope.prePopulateForm(),$scope.initDatePickers()}}),$scope.clicktoShowDisease=function(){$scope.diseaseShow=!0},$scope.submitDieaseList=function(){$scope.diseaseShow=!1},$scope.clicktoHideDisease=function(){$scope.diseaseShow=!1},$scope.clickToShowDiagnosed=function(){$scope.dignosedShow=!0},$scope.clickToHideDiagnosed=function(){$scope.dignosedShow=!1},$scope.clicktoShowLastClaim=function(){$scope.lastClaimShow=!0},$scope.clicktoHideLastClaim=function(){$scope.lastClaimShow=!1},$scope.showTermsDiv=!1,$rootScope.showTerms=function(terms){$scope.termsAndConditions=$sce.trustAsHtml(terms),$scope.showTermsDiv=!0},$scope.TermsCheck=function(sel){$scope.termsAndConditionsAgree="true"!=sel},$rootScope.closeTerms=function(){$scope.showTermsDiv=!1},$scope.next=function(){$scope.page=$scope.page+1},$scope.back=function(){$scope.page=$scope.page-1},$scope.changeRelation=function(index){var fAge=0,travellerDOBOption={changeMonth:!0,changeYear:!0,dateFormat:"dd/mm/yy"};$scope.selectedTravellers[index].relation!=SELF?($scope.selectedTravellers[index].sameAsProposer=!1,$scope.selectedTravellers[index].lastName=$scope.proposerDetails.lastName,"Spouse"==$scope.selectedTravellers[index].relation?($scope.selectedTravellers[index].gender=$scope.proposerDetails.gender==MALE?FEMALE:MALE,$scope.selectedTravellers[index].gender==FEMALE?(travellerDOBOption.minimumYearLimit="-"+$scope.productValidation.maxAge+"Y - 1D",travellerDOBOption.maximumYearLimit="-"+$scope.productValidation.femaleMinAge+"y",$scope["travellerDOBOptions"+index]=setP365DatePickerProperties(travellerDOBOption),$scope.selectedTravellers[index].dob=""):(travellerDOBOption.minimumYearLimit="-"+$scope.productValidation.maxAge+"Y - 1D",travellerDOBOption.maximumYearLimit="-"+$scope.productValidation.maleMinAgeMarried+"y",$scope["travellerDOBOptions"+index]=setP365DatePickerProperties(travellerDOBOption),$scope.selectedTravellers[index].dob="")):"Son"==$scope.selectedTravellers[index].relation?($scope.selectedTravellers[index].gender=MALE,travellerDOBOption.minimumYearLimit="-"+$scope.productValidation.childMaxAge+"Y",travellerDOBOption.maximumDayLimit=-$scope.productValidation.childMinAge,$scope["travellerDOBOptions"+index]=setP365DatePickerProperties(travellerDOBOption)):"Daughter"==$scope.selectedTravellers[index].relation?($scope.selectedTravellers[index].gender=FEMALE,travellerDOBOption.minimumYearLimit="-"+$scope.productValidation.childMaxAge+"Y",travellerDOBOption.maximumDayLimit=-$scope.productValidation.childMinAge,$scope["travellerDOBOptions"+index]=setP365DatePickerProperties(travellerDOBOption)):"Father"==$scope.selectedTravellers[index].relation?($scope.selectedTravellers[index].gender=MALE,travellerDOBOption.minimumYearLimit="-100Y",fAge=Math.round(getAgeFromDOB($scope.proposerDetails.dateOfBirth)),travellerDOBOption.maximumYearLimit="-"+(fAge+21)+"y",$scope["travellerDOBOptions"+index]=setP365DatePickerProperties(travellerDOBOption),$scope.selectedTravellers[index].dob=""):"Mother"==$scope.selectedTravellers[index].relation&&($scope.selectedTravellers[index].gender=FEMALE,travellerDOBOption.minimumYearLimit="-100Y",fAge=Math.round(getAgeFromDOB($scope.proposerDetails.dateOfBirth)),travellerDOBOption.maximumYearLimit="-"+(fAge+18)+"y",$scope["travellerDOBOptions"+index]=setP365DatePickerProperties(travellerDOBOption),$scope.selectedTravellers[index].dob="")):($scope.selectedTravellers[index].sameAsProposer=!0,$scope.selectedTravellers[index].gender=$scope.proposerDetails.gender,$scope.selectedTravellers[index].dob=$scope.proposerDetails.dateOfBirth,$scope.selectedTravellers[index].firstName=$scope.proposerDetails.firstName,$scope.selectedTravellers[index].lastName=$scope.proposerDetails.lastName,$scope.changeDateOfBirth(index),$scope.selectedTravellers[index].gender==FEMALE?(travellerDOBOption.minimumYearLimit="-"+$scope.productValidation.maxAge+"Y - 1D",travellerDOBOption.maximumYearLimit="-"+$scope.productValidation.femaleMinAge+"y",$scope["travellerDOBOptions"+index]=setP365DatePickerProperties(travellerDOBOption)):"MARRIED"==$scope.proposerDetails.maritalStatus?(travellerDOBOption.minimumYearLimit="-"+$scope.productValidation.maxAge+"Y - 1D",travellerDOBOption.maximumYearLimit="-"+$scope.productValidation.maleMinAgeMarried+"y",$scope["travellerDOBOptions"+index]=setP365DatePickerProperties(travellerDOBOption)):"SINGLE"==$scope.proposerDetails.maritalStatus&&(travellerDOBOption.minimumYearLimit="-"+$scope.productValidation.maxAge+"Y - 1D",travellerDOBOption.maximumYearLimit="-"+$scope.productValidation.maleMinAgeSingle+"y",$scope["travellerDOBOptions"+index]=setP365DatePickerProperties(travellerDOBOption))),localStorageService.set("selectedTravellersForTravel",$scope.selectedTravellers)},$scope.changeDateOfBirth=function(index){if("undefined"!=String($scope.storedDOBs[index])||null!=$scope.storedDOBs[index]||void 0!=$scope.storedDOBs[index]){var dob=angular.copy($scope.quoteRecalcParam.quoteParam.travellers[index].dob),tempDateArray=angular.copy($scope.quoteRecalcParam.quoteParam.travellers[index].dob).split("/"),tempDOBinMM_DD_YY=String(tempDateArray[0]+"/"+tempDateArray[1]+"/"+tempDateArray[2]);$scope.storedDOBs[index]!=tempDOBinMM_DD_YY?$rootScope.P365Confirm($scope.globalLabel.applicationLabels.common.p365prompt,$scope.globalLabel.applicationLabels.common.DobChangeMsg,"No","Yes",function(confirmStatus){if(confirmStatus){$scope.loading=!0;var tempDOBinDD_MM_YY=String(tempDateArray[0]+"/"+tempDateArray[1]+"/"+tempDateArray[2]);$scope.storedDOBs[index]=tempDOBinDD_MM_YY,$scope.ageList=[];for(var i=0;i<$scope.quoteRecalcParam.quoteParam.travellers.length;i++)$scope.quoteRecalcParam.quoteParam.travellers[i].relation==SELF?($scope.proposerDetails.age=getAgeFromDOB($scope.quoteRecalcParam.quoteParam.travellers[i].dob),$scope.quoteRecalcParam.quoteParam.travellers[i].age=getAgeFromDOB($scope.quoteRecalcParam.quoteParam.travellers[i].dob)):$scope.quoteRecalcParam.quoteParam.travellers[i].age=getAgeFromDOB($scope.quoteRecalcParam.quoteParam.travellers[i].dob),$scope.ageList.push($scope.quoteRecalcParam.quoteParam.travellers[i].age);$scope.quoteRecalcParam.quoteParam.quoteMinAge=getMinAge($scope.ageList),$scope.quoteRecalcParam.quoteParam.quoteMaxAge=getMaxAge($scope.ageList),localStorageService.set("selectedTravellersForTravel",$scope.quoteRecalcParam.quoteParam.travellers),$scope.quoteRecalc=prepareQuoteRequest($scope.quoteRecalcParam),$scope.reCalcQuotes($scope.quoteRecalc)}else $scope.loading=!1,$scope.quoteRecalcParam.quoteParam.travellers[index].dob=$scope.storedDOBs[index],$scope.quoteRecalcParam.quoteParam.travellers[index].relation==SELF&&($scope.proposerDetails.dateOfBirth=$scope.quoteRecalcParam.quoteParam.travellers[index].dob)}):($scope.storedDOBs[index]=dob,$scope.quoteRecalcParam.quoteParam.travellers[index].dob=$scope.storedDOBs[index],$scope.quoteRecalcParam.quoteParam.travellers[index].relation==SELF&&($scope.proposerDetails.dateOfBirth=$scope.quoteRecalcParam.quoteParam.travellers[index].dob))}},$scope.getOccupationList=function(){var occupationDocId=$scope.globalLabel.documentType.travelOccupation+"-"+$scope.selectedProduct.carrierId+"-"+$scope.selectedProduct.productId;getDocUsingId(RestAPI,occupationDocId,function(occupationList){$scope.occupationList=occupationList.Occupation,localStorageService.set("travelBuyOccupationList",occupationList.Occupation)})},$scope.init=function(){$scope.medicalQuestionarrier=[];var searchData={};searchData.documentType=$scope.globalLabel.documentType.travelDiseaseQuestion,searchData.carrierId=$scope.selectedProduct.carrierId,searchData.planId=$scope.selectedProduct.planId,searchData.lob=$scope.globalLabel.businessLineType.travel,getDocUsingParam(RestAPI,$scope.globalLabel.transactionName.getHealthQuestionList,searchData,function(callback){$scope.medicalQuestionarrier=callback.data;for(var i=0;i<$scope.medicalQuestionarrier.length;i++)"PREXDISEA"==$scope.medicalQuestionarrier[i].questionCode&&"true"==$scope.medicalQuestionarrier[i].applicable&&($scope.diseaseShow,$scope.clicktoShowDisease());$scope.termsAndConditionsAgree=!1;var searchDiseaseData={};searchDiseaseData.documentType=$scope.globalLabel.documentType.travelDiseaseMapping,searchDiseaseData.carrierId=$scope.selectedProduct.carrierId,searchDiseaseData.planId=$scope.selectedProduct.planId,searchDiseaseData.lob=$scope.globalLabel.businessLineType.travel,getDocUsingParam(RestAPI,$scope.globalLabel.transactionName.getHealthQuestionList,searchDiseaseData,function(callback){$scope.diseaseList=callback.data,$scope.numberOfPages=Math.ceil($scope.diseaseList.length/$scope.numRecords),$scope.diseaseListDisable=angular.copy($scope.diseaseList);for(var i=0;i<$scope.diseaseListDisable.length;i++)$scope.diseaseListDisable[i].subParentId=$scope.diseaseListDisable[i].parentId;$scope.occupationCheck&&$scope.getOccupationList()})})}})}),$scope.validateData=function(){if($scope.proposerAge<$scope.productValidation.maleMinAgeSingle&&$scope.proposerDetails.maritalStatus==$scope.productValidation.checkSingleStatus&&$scope.proposerDetails.gender==MALE)$scope.proposerDetailsForm.dateOfBirth.$setValidity("dateOfBirth",!0),$scope.proposerDetailsForm.gender.$setValidity("gender",!0),$scope.proposerDetailsForm.maritalStatus.$setValidity("maritalStatus",!0),$scope.errorMsg=!0;else if($scope.proposerAge<$scope.productValidation.maleMinAgeMarried&&$scope.proposerDetails.maritalStatus==$scope.productValidation.checkMarriedStatus&&$scope.proposerDetails.gender==MALE)$scope.proposerDetailsForm.dateOfBirth.$setValidity("dateOfBirth",!1),$scope.proposerDetailsForm.gender.$setValidity("gender",!1),$scope.proposerDetailsForm.maritalStatus.$setValidity("maritalStatus",!1),$scope.errorMsg=!0;else if($scope.proposerAge<$scope.productValidation.femaleMinAge&&$scope.proposerDetails.gender==FEMALE)$scope.proposerDetailsForm.dateOfBirth.$setValidity("dateOfBirth",!0),$scope.proposerDetailsForm.gender.$setValidity("gender",!0),$scope.proposerDetailsForm.maritalStatus.$setValidity("maritalStatus",!0),$scope.errorMsg=!0;else{$scope.proposerDetailsForm.dateOfBirth.$setValidity("dateOfBirth",!0),$scope.proposerDetailsForm.gender.$setValidity("gender",!0),$scope.proposerDetailsForm.maritalStatus.$setValidity("maritalStatus",!0),$scope.errorMsg=!1;for(var i=0;i<$scope.selectedTravellers.length;i++)if($scope.selectedTravellers[i].relation==SELF){$scope.changeRelation(i);break}}if("SINGLE"==$scope.proposerDetails.maritalStatus){for(i=0;i<$scope.selectedTravellers.length;i++)if("Spouse"==$scope.selectedTravellers[i].relation||"Son"==$scope.selectedTravellers[i].relation||"Daughter"==$scope.selectedTravellers[i].relation){$scope.proposerDetailsForm.maritalStatus.$setValidity("maritalStatus",!1),$scope.errorMsgFlag=!0;break}}else $scope.proposerDetailsForm.maritalStatus.$setValidity("maritalStatus",!0),$scope.errorMsgFlag=!1},$scope.validateDOB=function(){if($scope.proposerAge=getAgeFromDOB($scope.proposerDetails.dateOfBirth),$scope.productValidation.proposerAgeCheck)$scope.validateData();else for(var i=0;i<$scope.selectedTravellers.length;i++)if($scope.selectedTravellers[i].relation==SELF){$scope.changeRelation(i);break}},$scope.validateGender=function(){$scope.productValidation.proposerAgeCheck?$scope.validateData():$scope.changeGender()},$scope.validateMaritalStatus=function(){$scope.validateData()},$scope.backToResultScreen=function(){$rootScope.baseEnvEnabled&&!$rootScope.wordPressEnabled&&$location.path("/sharefromAPI").search({docId:$scope.bikeProposeFormDetails.UNIQUE_QUOTE_ID_ENCRYPTED,LOB:5})}}]);