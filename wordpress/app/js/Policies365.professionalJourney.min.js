var sourceOrigin,organizationName;angular.module("shareProfessionalQuoteByEmail",[]).controller("ShareProfessionalQuoteByEmailController",["$scope","$rootScope","$location","$filter","$http","RestAPI","localStorageService","$timeout","$interval","$mdDialog","$window","$sce",function($scope,$rootScope,$location,$filter,$http,RestAPI,localStorageService,$timeout,$interval,$mdDialog,$window,$sce){if($location.search().docId){$scope.p365Labels=commonResultLabels,console.log("$scope.p365Labels in share professional quote is: ",$scope.p365Labels),$scope.decryptedQuote_Id=String($location.search().docId),$scope.decryptedLOB=String($location.search().LOB),$scope.decryptedEmailId=String($location.search().userId);var request={LOB:0};if(request.docId=$scope.decryptedQuote_Id,request.userId=$scope.decryptedEmailId,$rootScope.isActiveTab2=0,localStorageService.set("PROF_QUOTE_ID",$scope.decryptedQuote_Id),localStorageService.set("selectedBusinessLineId",request.LOB),$scope.carInsuranceTypes=carInsuranceTypeGeneric,$scope.bikeInsuranceTypes=bikeInsuranceTypeGeneric,$scope.ncbList=ncbListGeneric,null==localStorageService.get("userLoginInfo")||"undefined"==String(localStorageService.get("userLoginInfo"))){var userLoginInfo={username:void 0,mobileNumber:void 0,status:!1};console.log("UL shareProf: ",userLoginInfo),localStorageService.set("userLoginInfo",userLoginInfo)}if($location.search().sharedProfile){$rootScope.sharedProfileString="";var sharedProfile=String($location.search().sharedProfile);$rootScope.sharedProfileString="riskProfile"==sharedProfile?"riskProfile":"insuranceAssessment"==sharedProfile?"insuranceAssessment":""}if("undefined"!=String($location.search().leaddetails)){var leaddetails=JSON.parse($location.search().leaddetails);localStorageService.set("quoteUserInfo",leaddetails)}if($rootScope.baseEnvEnabled&&!$rootScope.wordPressEnabled&&$location.search().messageId&&(messageIDVar=$location.search().messageId,$scope.quoteUserInfo.messageId=$location.search().messageId),console.log("carInsuranceTypeGeneric : ",carInsuranceTypeGeneric),$location.search().sharedProfile){$rootScope.sharedProfileString="";sharedProfile=String($location.search().sharedProfile);$rootScope.sharedProfileString="riskProfile"==sharedProfile?"riskProfile":"insuranceAssessment"==sharedProfile?"insuranceAssessment":""}RestAPI.invoke("quoteDataReader",request).then(function(_professionalQuoteCallback){if(1e3==_professionalQuoteCallback.responseCode){console.log("in shareProfessionalQuoteByEmail"),console.log("_professionalQuoteCallback : ",_professionalQuoteCallback);var _professionalQuoteData=_professionalQuoteCallback.data;if(_professionalQuoteData){var professionalQuoteRequest={};professionalQuoteRequest.professionId=_professionalQuoteData.professionId,professionalQuoteRequest.profession=_professionalQuoteData.profession,professionalQuoteRequest.professionCode=_professionalQuoteData.professionCode,professionalQuoteRequest.currentQuestionCode=_professionalQuoteData.currentQuestionCode,professionalQuoteRequest.bikeInfo=_professionalQuoteData.bikeInfo,professionalQuoteRequest.carInfo=_professionalQuoteData.carInfo,professionalQuoteRequest.healthInfo=_professionalQuoteData.healthInfo,professionalQuoteRequest.commonInfo=_professionalQuoteData.commonInfo;var profession={};profession.professionId=_professionalQuoteData.professionId,profession.professionName=_professionalQuoteData.profession,profession.professionCode=_professionalQuoteData.professionCode,localStorage.setItem("profession",JSON.stringify(profession)),localStorageService.set("commAddressDetails",_professionalQuoteData.commonInfo.address),localStorageService.set("updateProdcutInCartFlag",!0),localStorageService.set("professionalQuoteParams",professionalQuoteRequest),console.log("gtggggg",professionalQuoteRequest),_professionalQuoteData.lobQuoteId&&angular.forEach(_professionalQuoteData.lobQuoteId,function(object,index){var req={};req.docId=object.QUOTE_ID,req.lob=object.businessLineId,$scope.quoteParam={},$scope.carQuote={};var request={},header={};header.messageId=messageIDVar,header.source=sourceOrigin,header.transactionName="quoteDataReader",header.deviceId=deviceIdOrigin,request.header=header,request.body=req,console.log("QUOTE ID GOING TO BE READ : ",req.docId),$http({method:"POST",url:getQuoteCalcLink,data:request}).success(function(callback,status){if((callback=JSON.parse(callback)).data)if(3==callback.data.businessLineId||2==callback.data.businessLineId){var todayDate=new Date,formatedTodaysDate=("0"+(todayDate.getMonth()+1).toString()).substr(-2)+"/"+("0"+todayDate.getDate().toString()).substr(-2)+"/"+todayDate.getFullYear().toString();if(getPolicyStatusList(formatedTodaysDate),$scope.policyStatusList=policyStatusListGeneric,3==callback.data.businessLineId){$scope.carQuoteRequest=callback.data.carQuoteRequest,$rootScope.carQuoteResult=callback.data.carQuoteResponse,$scope.carRequestId=callback.data.carQuoteResponse.QUOTE_ID,$scope.carQuote.quoteParam=$scope.carQuoteRequest.quoteParam,$scope.carQuote.vehicleInfo=$scope.carQuoteRequest.vehicleInfo,localStorageService.set("selectedCarDetails",professionalQuoteRequest.carInfo),localStorageService.set("carQuoteInputParamaters",$scope.carQuote);var riderReq={documentType:"Rider",searchValue:"Car"},riderRequest={};(riderHeader={}).messageId=messageIDVar,riderHeader.source=sourceOrigin,riderHeader.transactionName="findAppConfig",riderHeader.deviceId=deviceIdOrigin,riderRequest.header=riderHeader,riderRequest.body=riderReq,$scope.carDetails={},$scope.CarPACoverDetails={isPACoverApplicable:!1,existingInsurance:!0},console.log("callback.data.carQuoteResponse in share profession: ",callback.data.carQuoteResponse),$scope.carQuoteRequest.vehicleInfo.registrationNumber?($rootScope.showCarRegAreaStatus=!1,$scope.carDetails.showCarRegAreaStatus=!1,$scope.carDetails.registrationNumber=$scope.vehicleInfo.registrationNumber):($scope.carDetails.showCarRegAreaStatus=!0,$rootScope.showCarRegAreaStatus=!0),"N"==$scope.carQuoteRequest.vehicleInfo.previousPolicyExpired?$scope.carDetails.policyStatusKey=3:$scope.carDetails.policyStatusKey=2,$scope.carQuoteRequest.vehicleInfo.displayVehicle&&($scope.carDetails.displayVehicle=$scope.carQuoteRequest.vehicleInfo.displayVehicle),$scope.carDetails.idvOption=$scope.carQuoteRequest.vehicleInfo.idvOption,$scope.carDetails.manufacturingYear=$scope.carQuoteRequest.vehicleInfo.regYear,$scope.carDetails.expiry=20,$scope.carDetails.maxVehicleAge=15,"N"==$scope.carQuoteRequest.vehicleInfo.previousPolicyExpired?$scope.carDetails.policyStatusKey=3:$scope.carDetails.policyStatusKey=2;for(var i=0;i<$scope.carInsuranceTypes.length;i++)if($scope.carQuoteRequest.quoteParam.policyType==$scope.carInsuranceTypes[i].value){$scope.carDetails.insuranceType=$scope.carInsuranceTypes[i];break}for(i=0;i<$scope.policyStatusList.length;i++)if($scope.carDetails.policyStatusKey==$scope.policyStatusList[i].key){$scope.carDetails.policyStatus=$scope.policyStatusList[i];break}for(i=0;i<$scope.ncbList.length;i++)if($scope.carQuoteRequest.quoteParam.ncb==$scope.ncbList[i].value){$scope.carDetails.ncb=$scope.ncbList[i];break}1==$scope.carDetails.idvOption&&localStorageService.set("CAR_IDV_QUOTE_ID",$scope.CAR_UNIQUE_QUOTE_ID),localStorageService.set("CAR_UNIQUE_QUOTE_ID",$scope.carRequestId),localStorageService.set("CarPACoverDetails",$scope.CarPACoverDetails),localStorageService.set("selectedCarDetails",$scope.carDetails)}else if(2==callback.data.businessLineId){$scope.bikeQuoteRequest=callback.data.bikeQuoteRequest,$rootScope.bikeQuoteResult=callback.data.bikeQuoteResponse,$scope.quoteParam={},$scope.bikeQuote={},$scope.bikeQuote.quoteParam=$scope.bikeQuoteRequest.quoteParam,$scope.bikeQuote.vehicleInfo=$scope.bikeQuoteRequest.vehicleInfo,localStorageService.set("selectedBikeDetails",professionalQuoteRequest.bikeInfo),localStorageService.set("bikeQuoteInputParamaters",$scope.bikeQuote),console.log("bikeQuoteInputParamaters is:: ",$scope.bikeQuote);var riderHeader;riderReq={documentType:"Rider",searchValue:"Bike"},riderRequest={};(riderHeader={}).messageId=messageIDVar,riderHeader.source=sourceOrigin,riderHeader.transactionName="findAppConfig",riderHeader.deviceId=deviceIdOrigin,riderRequest.header=riderHeader,riderRequest.body=riderReq,$scope.bikeDetails={},console.log("$scope.bikeQuoteRequest step 1 : ",$scope.bikeQuoteRequest),$scope.bikeQuoteResponse=callback.data.bikeQuoteResponse,$scope.bikeRequestId=callback.data.bikeQuoteResponse.QUOTE_ID,console.log("$scope.bikeQuoteRequest is ...",$scope.bikeQuoteRequest),$scope.BikePACoverDetails={isPACoverApplicable:!1,existingInsurance:!0},localStorageService.get("selectedBikeDetails")&&($scope.bikeDetails=localStorageService.get("selectedBikeDetails")),$scope.bikeQuoteRequest.vehicleInfo.registrationNumber?($rootScope.showBikeRegAreaStatus=!1,$scope.bikeDetails.showBikeRegAreaStatus=!1,$scope.bikeDetails.registrationNumber=$scope.vehicleInfo.registrationNumber):($scope.bikeDetails.showBikeRegAreaStatus=!0,$rootScope.showBikeRegAreaStatus=!0),"N"==$scope.bikeQuoteRequest.vehicleInfo.previousPolicyExpired?$scope.bikeDetails.policyStatusKey=3:$scope.bikeDetails.policyStatusKey=2,"N"==$scope.bikeQuoteRequest.vehicleInfo.previousPolicyExpired?$scope.bikeDetails.policyStatusKey=3:$scope.bikeDetails.policyStatusKey=2,$scope.bikeDetails.idvOption=$scope.bikeQuoteRequest.vehicleInfo.idvOption,$scope.bikeDetails.manufacturingYear=$scope.bikeQuoteRequest.vehicleInfo.regYear,$scope.bikeDetails.policyType=$scope.bikeQuoteRequest.quoteParam.policyType,$scope.bikeDetails.expiry=20,$scope.bikeDetails.maxVehicleAge=15;for(i=0;i<$scope.carInsuranceTypes.length;i++)if($scope.bikeQuoteRequest.quoteParam.policyType==$scope.carInsuranceTypes[i].value){$scope.bikeDetails.insuranceType=$scope.carInsuranceTypes[i];break}for(i=0;i<$scope.policyStatusList.length;i++)if($scope.bikeDetails.policyStatusKey==$scope.policyStatusList[i].key){$scope.bikeDetails.policyStatus=$scope.policyStatusList[i];break}for(i=0;i<$scope.ncbList.length;i++)if($scope.bikeQuoteRequest.quoteParam.ncb==$scope.ncbList[i].value){$scope.bikeDetails.ncb=$scope.ncbList[i];break}$scope.bikeQuoteRequest.vehicleInfo.displayVehicle&&($scope.bikeDetails.displayVehicle=$scope.bikeQuoteRequest.vehicleInfo.displayVehicle),1==$scope.bikeDetails.idvOption&&localStorageService.set("BIKE_IDV_QUOTE_ID",$scope.BIKE_UNIQUE_QUOTE_ID),localStorageService.set("BIKE_UNIQUE_QUOTE_ID",$scope.bikeRequestId),localStorageService.set("BikePACoverDetails",$scope.BikePACoverDetails),localStorageService.set("selectedBikeDetails",$scope.bikeDetails),localStorageService.set("bikeDetailsToBeAddedInCart",$scope.bikeDetails)}}else if(4==callback.data.businessLineId){$scope.healthResponse=callback.data,$rootScope.healthQuoteResult=callback.data.quoteResponse,$scope.healthRequestId=callback.data.quoteResponse.QUOTE_ID,$scope.diseaseList=[],$scope.healthQuote={},$scope.selectedFamilyArray=[],$scope.selectedDisease={},$scope.diseaseList={},$scope.selectedDisease.diseaseList=[],$scope.selectedFeatures=[],$rootScope.healthQuoteResult=[];var item={};$scope.hospitalisationLimit={},$scope.isDiseased=!1,console.log("$scope.healthResponse is",$scope.healthResponse),$scope.healthQuote.quoteParam=$scope.healthResponse.quoteRequest.quoteParam,$scope.healthQuote.personalInfo=$scope.healthResponse.quoteRequest.personalInfo,$scope.selectedArea=$scope.healthResponse.quoteRequest.personalInfo.displayArea,$scope.selectedBusinessLineId=$scope.healthResponse.businessLineId,$scope.selectedFamilyArray=$scope.healthQuote.personalInfo.selectedFamilyMembers,$scope.healthQuote.ratingParam=$scope.healthResponse.quoteRequest.ratingParam;for(i=0;i<$scope.selectedFamilyArray.length;i++)for(var j=0;j<$scope.selectedFamilyArray[i].dieaseDetails.length;j++)if($scope.selectedFamilyArray[i].dieaseDetails.length>0&&void 0!=$scope.selectedFamilyArray[i].dieaseDetails[j].dieaseCode){if(p365Includes($scope.selectedDisease.diseaseList,$scope.selectedFamilyArray[i].dieaseDetails[j].dieaseCode))continue;$scope.selectedDisease.diseaseList.push($scope.selectedFamilyArray[i].dieaseDetails[j].dieaseCode),$scope.isDiseased=!0}for(i=0;i<$scope.healthResponse.quoteResponse.length;i++)Number($scope.healthResponse.quoteResponse[i].basicPremium>0)&&$rootScope.healthQuoteResult.push($scope.healthResponse.quoteResponse[i]);$rootScope.selectedBusinessLineId=$scope.selectedBusinessLineId,$scope.healthQuote.personalInfo.pincode&&(item.pincode=$scope.healthQuote.personalInfo.pincode),$scope.healthQuote.personalInfo.city&&(item.district=$scope.healthQuote.personalInfo.city),item.displayArea=$scope.healthQuote.personalInfo.displayArea,item.state=$scope.healthQuote.personalInfo.state,"Yes"==$scope.healthQuote.personalInfo.preDiseaseStatus&&($scope.isDiseased=!0),console.log("health quote param is: ",$scope.healthQuote),$scope.familyList=healthFamilyListGeneric;var sonCount=0,daughterCount=0;for(j=0;j<$scope.familyList.length;j++)$scope.familyList[j].val=!1;for(i=0;i<$scope.selectedFamilyArray.length;i++){"Son"==$scope.selectedFamilyArray[i].relation?sonCount+=1:"Daughter"==$scope.selectedFamilyArray[i].relation&&(daughterCount+=1);for(j=0;j<$scope.familyList.length;j++)if($scope.selectedFamilyArray[i].relation==$scope.familyList[j].member){$scope.familyList[j].val=!0;break}}for(i=0;i<sonCount-1;i++)$scope.familyList.push({member:"Son",age:5,gender:"M",relationship:"CH",occupationClass:2,val:!0,other:!1,mandatory:!1,minAge:1,maxAge:82,iconFlag:!0});for(i=0;i<daughterCount-1;i++)$scope.familyList.push({member:"Daughter",age:5,gender:"F",relationship:"CH",occupationClass:2,val:!0,other:!1,mandatory:!1,minAge:1,maxAge:25,iconFlag:!0});localStorageService.get("selectedDisease")&&($scope.selectedDisease=localStorageService.get("selectedDisease")),localStorageService.set("HEALTH_UNIQUE_QUOTE_ID",$scope.healthRequestId),localStorageService.set("selectedArea",$scope.selectedArea),localStorageService.set("selectedFamilyForHealth",$scope.familyList),localStorageService.set("selectedFamilyArray",$scope.selectedFamilyArray),localStorageService.set("isDiseasedForHealth",$scope.isDiseased),localStorageService.set("userGeoDetails",item),localStorageService.set("selectedDisease",$scope.selectedDisease),localStorageService.set("healthQuoteInputParamatersReset",$scope.healthQuote),localStorageService.set("selectedAreaReset",$scope.selectedArea),localStorageService.set("selectedFamilyForHealthReset",$scope.familyList),localStorageService.set("selectedFamilyArrayReset",$scope.selectedFamilyArray),localStorageService.set("isDiseasedForHealth",$scope.isDiseased),localStorageService.set("selectedDiseaseReset",$scope.selectedDisease);for(i=0;i<$scope.diseaseList.length;i++)$scope.diseaseList[i].familyList=[];for(console.log("$scope.selectedFamilyArray is: ",$scope.selectedFamilyArray),i=0;i<$scope.selectedFamilyArray.length;i++)if($scope.dieaseDetails=[],$scope.selectedFamilyArray[i].dieaseDetails){for(j=0;j<$scope.selectedFamilyArray[i].dieaseDetails.length;j++)for(var k=0;k<$scope.diseaseList.length;k++)$scope.selectedFamilyArray[i].dieaseDetails[j].dieaseCode==$scope.diseaseList[k].diseaseId&&($scope.selectedFamilyArray[i].label=$scope.selectedFamilyArray[i].relation,$scope.selectedFamilyArray[i].display=$scope.selectedFamilyArray[i].relation,$scope.diseaseList[k].familyList.push($scope.selectedFamilyArray[i]));for(i=0;i<sonCount-1;i++)$scope.familyList.push({member:"Son",age:5,gender:"M",relationship:"CH",occupationClass:2,val:!0,other:!1,mandatory:!1,minAge:1,maxAge:82,iconFlag:!0});for(i=0;i<daughterCount-1;i++)$scope.familyList.push({member:"Daughter",age:5,gender:"F",relationship:"CH",occupationClass:2,val:!0,other:!1,mandatory:!1,minAge:1,maxAge:25,iconFlag:!0});localStorageService.get("selectedDisease")&&($scope.selectedDisease=localStorageService.get("selectedDisease")),localStorageService.set("healthQuoteInputParamaters",$scope.healthQuote),localStorageService.set("HEALTH_UNIQUE_QUOTE_ID",$scope.healthRequestId),localStorageService.set("selectedArea",$scope.selectedArea),localStorageService.set("selectedFamilyForHealth",$scope.familyList),localStorageService.set("selectedFamilyArray",$scope.selectedFamilyArray),localStorageService.set("isDiseasedForHealth",$scope.isDiseased),localStorageService.set("userGeoDetails",item),localStorageService.set("selectedDisease",$scope.selectedDisease),localStorageService.set("healthQuoteInputParamatersReset",$scope.healthQuote),localStorageService.set("selectedAreaReset",$scope.selectedArea),localStorageService.set("selectedFamilyForHealthReset",$scope.familyList),localStorageService.set("selectedFamilyArrayReset",$scope.selectedFamilyArray),localStorageService.set("isDiseasedForHealth",$scope.isDiseased),localStorageService.set("selectedDiseaseReset",$scope.selectedDisease);for(i=0;i<$scope.diseaseList.length;i++)$scope.diseaseList[i].familyList=[];for(console.log("$scope.selectedFamilyArray is: ",$scope.selectedFamilyArray),i=0;i<$scope.selectedFamilyArray.length;i++)if($scope.dieaseDetails=[],$scope.selectedFamilyArray[i].dieaseDetails)for(j=0;j<$scope.selectedFamilyArray[i].dieaseDetails.length;j++)for(k=0;k<$scope.diseaseList.length;k++)$scope.selectedFamilyArray[i].dieaseDetails[j].dieaseCode==$scope.diseaseList[k].diseaseId&&($scope.selectedFamilyArray[i].label=$scope.selectedFamilyArray[i].relation,$scope.selectedFamilyArray[i].display=$scope.selectedFamilyArray[i].relation,$scope.diseaseList[k].familyList.push($scope.selectedFamilyArray[i]));for(localStorageService.set("diseaseList",$scope.diseaseList),localStorageService.set("diseaseListReset",$scope.diseaseList),console.log("$scope.diseaseList is in quote response::",$scope.diseaseList),console.log("$scope.healthQuoteRequest : ",$scope.healthResponse),i=0;i<sonCount-1;i++)$scope.familyList.push({member:"Son",age:5,gender:"M",relationship:"CH",occupationClass:2,val:!0,other:!1,mandatory:!1,minAge:1,maxAge:82,iconFlag:!0});for(i=0;i<daughterCount-1;i++)$scope.familyList.push({member:"Daughter",age:5,gender:"F",relationship:"CH",occupationClass:2,val:!0,other:!1,mandatory:!1,minAge:1,maxAge:25,iconFlag:!0});localStorageService.get("selectedDisease")&&($scope.selectedDisease=localStorageService.get("selectedDisease")),localStorageService.set("HEALTH_UNIQUE_QUOTE_ID",$scope.healthRequestId),localStorageService.set("selectedArea",$scope.selectedArea),localStorageService.set("selectedFamilyForHealth",$scope.familyList),localStorageService.set("selectedFamilyArray",$scope.selectedFamilyArray),localStorageService.set("isDiseasedForHealth",$scope.isDiseased),localStorageService.set("userGeoDetails",item),localStorageService.set("selectedDisease",$scope.selectedDisease),localStorageService.set("healthQuoteInputParamatersReset",$scope.healthQuote),localStorageService.set("selectedAreaReset",$scope.selectedArea),localStorageService.set("selectedFamilyForHealthReset",$scope.familyList),localStorageService.set("selectedFamilyArrayReset",$scope.selectedFamilyArray),localStorageService.set("isDiseasedForHealth",$scope.isDiseased),localStorageService.set("selectedDiseaseReset",$scope.selectedDisease);for(i=0;i<$scope.diseaseList.length;i++)$scope.diseaseList[i].familyList=[];for(console.log("$scope.selectedFamilyArray is: ",$scope.selectedFamilyArray),i=0;i<$scope.selectedFamilyArray.length;i++)if($scope.dieaseDetails=[],$scope.selectedFamilyArray[i].dieaseDetails)for(j=0;j<$scope.selectedFamilyArray[i].dieaseDetails.length;j++)for(k=0;k<$scope.diseaseList.length;k++)$scope.selectedFamilyArray[i].dieaseDetails[j].dieaseCode==$scope.diseaseList[k].diseaseId&&($scope.selectedFamilyArray[i].label=$scope.selectedFamilyArray[i].relation,$scope.selectedFamilyArray[i].display=$scope.selectedFamilyArray[i].relation,$scope.diseaseList[k].familyList.push($scope.selectedFamilyArray[i]));localStorageService.set("diseaseList",$scope.diseaseList),localStorageService.set("diseaseListReset",$scope.diseaseList),console.log("$scope.diseaseList is in quote response::",$scope.diseaseList),console.log("$scope.healthQuoteRequest : ",$scope.healthResponse)}localStorageService.set("diseaseList",$scope.diseaseList),localStorageService.set("diseaseListReset",$scope.diseaseList),console.log("$scope.diseaseList is in quote response::",$scope.diseaseList),console.log("$scope.healthQuoteRequest : ",$scope.healthResponse)}else 1==callback.data.businessLineId&&($scope.lifeQuoteRequest=callback.data.lifeQuoteRequest,$rootScope.lifeQuoteResult=callback.data.lifeQuoteResponse,$scope.lifeRequestId=callback.data.QUOTE_ID,console.log("$scope.lifeQuoteRequestId : ",$scope.lifeRequestId),$scope.lifeQuote={},$scope.quoteParam={},$scope.personalDetails={},$scope.lifeQuote.quoteParam=$scope.lifeQuoteRequest.quoteParam,$scope.lifeQuote.personalDetails=$scope.lifeQuoteRequest.personalDetails,$scope.personalDetails=$scope.lifeQuote.personalDetails,localStorageService.set("LIFE_UNIQUE_QUOTE_ID",$scope.lifeRequestId),localStorageService.set("lifeQuoteInputParamaters",$scope.lifeQuote),localStorageService.set("lifePersonalDetails",$scope.personalDetails))})})}else console.log("Unable to process with null");console.log("Redirecting to professionalJourneyResult 123.. "),$location.path("/professionalJourneyResult")}else console.log("Not able to fetch professional related data : ",_professionalQuoteData)})}}]),angular.module("professionalJourney",["CoreComponentApp","LocalStorageModule","ngMessages"]).controller("professionalJourneyController",["RestAPI","$scope","$rootScope","$location","$http","localStorageService","$timeout","$sce","$filter","$controller","$anchorScroll",function(RestAPI,$scope,$rootScope,$location,$http,localStorageService,$timeout,$sce,$filter,$controller,$anchorScroll){function getLocationDetails(){var mapCords={center:new google.maps.LatLng(position.coords.latitude,position.coords.longitude),zoom:18};new google.maps.Map(document.getElementById("mapViewer"),mapCords)}$controller("motorController",{$scope:$scope,$rootScope:$rootScope}),$scope.declaration=function(){$scope.p365Labels=commonResultLabels,$scope.termAndConditions=termAndConditions,$scope.privacyPolicy=privacyPolicy,$scope.agentName="Mia",$scope.personalInfo=!1,$scope.incomeInfo=!1,$scope.familyInfo=!1,$scope.showMoreProfession=!1,$scope.isAgeApplicable=!0,$rootScope.showRecommendedRider=!1,$rootScope.isProfessionalJourneySelected=!1,$scope.specializationFlag=!1,$scope.LiabilityFlag=!1,$scope.showOtpButton=!0,$scope.disableContact=!1,$scope.globalLabel={},$scope.commonInfo={},$scope.commonInfo.familyHistory=[],$scope.vehicleDetails={},$scope.slideConfig={},$scope.slideConfig.slides=[],$scope.addressDetails={streetDetails:"",city:"",state:"",pincode:"",displayArea:"",address:""},$scope.commonInfo.address=$scope.addressDetails,$scope.commonInfo.termsCondition=!0,$scope.healthInfo={},$scope.selectedFamilyMember=[],$scope.progress=0,$scope.commonInfo.gender="Male",$rootScope.insuredGender=$scope.commonInfo.gender,$scope.commonInfo.salutation="Mr",$scope.professionList=[],$scope.incomeRsangeList=[],$scope.family=[],$scope.ageList=[],$scope.professionSpecializationList=[],$scope.professionalLiabilityList=[],$scope.diseaseList=[],$scope.weightStatus=[],$scope.dailyActivityStatus=[],$scope.ngoList=[],$scope.homeOwnershipList=[],$scope.clinicOwnershipList=[]},$scope.setEditProfile=function(_status){$rootScope.editProfile=_status},$scope.askMia=function(_question,_answer){$scope.miaTimeout=!1,_answer.currentQuestionCode=-1==_question?_answer.professionCode+"000":$scope.slideConfig.slides[_question].quesId,RestAPI.invoke("miaassistmentinfo",_answer).then(function(miaAnswer){1e3==miaAnswer.responseCode?($scope.miaAnswer=miaAnswer.data,$timeout(function(){$scope.miaTimeout=!0},5e3)):$scope.miaAnswer=void 0})},$scope.initConfimationScreen=function(){if($scope.bikeDetails=localStorageService.get("selectedBikeDetails"),$scope.carDetails=localStorageService.get("selectedCarDetails"),$scope.bikeDetails&&($scope.bikeDetails.showBikeRegAreaStatus?$rootScope.showBikeRegAreaStatus=$scope.bikeDetails.showBikeRegAreaStatus:$rootScope.showBikeRegAreaStatus=!0),$scope.carDetails&&($scope.carDetails.showCarRegAreaStatus?$rootScope.showCarRegAreaStatus=$scope.carDetails.showCarRegAreaStatus:$rootScope.showCarRegAreaStatus=!1),localStorageService.get("professionalQuoteParams")){var professionalQuoteParams=localStorageService.get("professionalQuoteParams");$scope.carInfo=professionalQuoteParams.carInfo,$scope.bikeInfo=professionalQuoteParams.bikeInfo,$scope.commonInfo=professionalQuoteParams.commonInfo,professionalQuoteParams.healthInfo&&($scope.healthInfo=professionalQuoteParams.healthInfo),$scope.commonInfo.incomeRange&&($rootScope.incomeAbsoluteValue=$scope.commonInfo.incomeRange.absoluteValue),$scope.commonInfo.ngo&&($rootScope.ngoName=$scope.commonInfo.ngo.name)}$scope.addressDetails=localStorageService.get("commAddressDetails"),$scope.profession=localStorageService.get("profession")},$scope.checkSpecz=function(){0==$scope.specializationFlag&&($scope.commonInfo.specialization="",$rootScope.specialization="")},$scope.checkLiab=function(){0==$scope.LiabilityFlag&&($scope.commonInfo.professionalLiability="",$scope.commonInfo.clinicStatus="",$rootScope.professionalLiability="")},$scope.getProfessionsQuestionList=function(profession){var searchData={documentType:"ProfessionQuestion"};searchData.professionName=profession.professionName,searchData.professionCode=profession.professionCode,$scope.progressLimit=0,$scope.slideConfig={},$scope.slideConfig.slides=[],getDocUsingParam(RestAPI,"getProfessionsQuestions",searchData,function(professionQuestionList){if(null!=professionQuestionList&&"undefined"!=String(professionQuestionList)){$scope.slideConfig.slides=professionQuestionList.data;for(var _length=$scope.slideConfig.slides.length,index=0;index<_length;index++)"confirmation"==$scope.slideConfig.slides[index].slideKey&&($scope.progressLimit=index);for(var i=0;i<$scope.slideConfig.slides.length;i++)"specialisation"==$scope.slideConfig.slides[i].slideKey&&($scope.specializationFlag=!0,$scope.checkSpecz()),"personalLibility"==$scope.slideConfig.slides[i].slideKey&&($scope.LiabilityFlag=!0,$scope.checkLiab());$rootScope.editProfile?($scope.initConfimationScreen(),$scope.updateSlideStatusByKey("confirmation")):$rootScope.editCarDetails?$scope.updateSlideStatusByKey("carRTO"):$rootScope.editBikeDetails?$scope.updateSlideStatusByKey("bikeRTO"):$rootScope.editFamilyDetails?$scope.updateSlideStatusByKey("familyDetails"):$scope.updateSlideStatusByIndex(0)}})},$scope.getCoordinates=function(){if(navigator.geolocation)navigator.geolocation.getCurrentPosition(getLocationDetails);else{getLocationDetails()}},$scope.validateAnswer=function(answerNode){if(answerNode&&answerNode.skipTo){$scope.skipTo=answerNode.skipTo,$scope.skippedFrom=answerNode.skippedFrom;for(let index=0;index<answerNode.skippedParams.length;index++){const element=answerNode.skippedParams[index];$scope.commonInfo[element]=""}}else $scope.skipTo=null,$scope.skippedFrom=null},$scope.updateSlideStatusByIndex=function(currentStatus){null!=currentStatus&&void 0!=currentStatus?($scope.slideStatus={},$scope.slideStatus.isFirst=!1,$scope.slideStatus.isLast=!1,0==currentStatus&&($scope.slideStatus.isFirst=!0,$scope.slideStatus.current=Number(currentStatus),$scope.slideStatus.next=Number(currentStatus+1)),currentStatus>=1&&currentStatus<$scope.slideConfig.slides.length&&($scope.slideStatus.prev=Number(currentStatus-1),$scope.slideStatus.current=Number(currentStatus),$scope.slideStatus.next=Number(currentStatus+1)),currentStatus==$scope.slideConfig.slides.length&&($scope.slideStatus.isLast=!0,$scope.slideStatus.prev=Number(currentStatus-1),$scope.slideStatus.current=Number(currentStatus)),$scope.slideClass="slide-left"):null==currentStatus?console.error("Slide status is not updated caused by Order is null"):""==currentStatus?console.error("Slide status is not updated caused by Order is empty"):void 0==currentStatus&&console.error("Slide status is not updated caused by Order is undefined")},$scope.updateSlideStatusByKey=function(_key){if(null!=_key&&""!=_key&&void 0!=_key){for(var _length=$scope.slideConfig.slides.length,index=0;index<_length;index++)if($scope.slideConfig.slides[index].slideKey==_key){$scope.updateSlideStatusByIndex(index);break}}else null==currentStatus?console.error("Slide status is not updated caused by KEY is null"):""==currentStatus?console.error("Slide status is not updated caused by KEY is empty"):void 0==currentStatus&&console.error("Slide status is not updated caused by KEY is undefined")},$scope.prev=function(){$scope.showOtpButton=!0,$scope.askMia(Number($scope.slideStatus.prev),$scope.quoteRequest),$scope.skippedFrom?($scope.updateSlideStatusByKey($scope.skippedFrom),$scope.skipTo=null,$scope.skippedFrom=null):$scope.updateSlideStatusByIndex($scope.slideStatus.prev),$scope.slideClass="slide-right"},$scope.next=function(){$scope.updateSlideStatusByIndex($scope.slideStatus.next),$scope.slideClass="slide-left"},$scope.professionSelects=function(profession){profession&&($scope.quoteRequest={},$scope.profession=profession,localStorageService.set("profession",$scope.profession),$scope.personalInfo=!0,$scope.quoteRequest.professionId=profession.professionId,$scope.quoteRequest.profession=profession.professionName,$scope.quoteRequest.professionCode=profession.professionCode,$scope.getProfessionsQuestionList(profession))},$scope.updateProgress=function(currentStage){$scope.progress=100*(currentStage+1)/$scope.progressLimit},$scope.moreProfessions=function(){$scope.showMoreProfession=!0},$scope.getMoreProfessionsList=function(query){var filteredProfessions=[];return angular.forEach($scope.professionList,function(value){filteredProfessions.length<=5&&value.professionName.toLowerCase().includes(query.toLowerCase())&&filteredProfessions.push(value)}),filteredProfessions},$scope.skipCarDetails=function(slideIndex){$anchorScroll("home"),$scope.carInfo={},$scope.carDetails={},$scope.carDetails.showCarRegAreaStatus=!1,$scope.carVehicleInfo={},$scope.selectedCar.displayVehicle="",localStorageService.removeRecord("carQuoteInputParamaters"),localStorageService.set("professionalQuoteParams",$scope.quoteRequest),$scope.updateSlideStatusByIndex(slideIndex+1)},$scope.skipBikeDetails=function(slideIndex){$anchorScroll("home"),$scope.bikeInfo={},$scope.bikeDetails={},$scope.bikeDetails.showBikeRegAreaStatus=!0,$scope.bikeVehicleInfo={},$scope.selectedBike.displayVehicle="",localStorageService.removeRecord("bikeQuoteInputParamaters"),localStorageService.set("professionalQuoteParams",$scope.quoteRequest),$scope.updateSlideStatusByIndex(slideIndex+1)};$scope.submitFormDetails=function(slideIndex,isUpdateReq){if($scope.showOtpButton=!0,$anchorScroll("home"),$scope.quoteRequest.carInfo=$scope.carInfo,$scope.quoteRequest.bikeInfo=$scope.bikeInfo,"Male"==$scope.commonInfo.gender?$scope.commonInfo.salutation="Mr":$scope.commonInfo.salutation="Miss",$("#wplc_name").val($scope.commonInfo.firstName),$rootScope.ngoName)for(var i=0;i<$scope.ngoList.length;i++)if($scope.ngoList[i].name==$rootScope.ngoName){$scope.commonInfo.ngo=$scope.ngoList[i];break}if($rootScope.specialization&&($scope.commonInfo.specialization=angular.copy($rootScope.specialization.value)),$rootScope.professionalLiability&&($scope.commonInfo.professionalLiability=angular.copy($rootScope.professionalLiability.value)),$scope.quoteRequest.commonInfo=$scope.commonInfo,$scope.addressDetails&&localStorageService.set("commAddressDetails",$scope.addressDetails),localStorageService.set("professionalQuoteParams",$scope.quoteRequest),$scope.askMia(slideIndex,$scope.quoteRequest),isUpdateReq){if($scope.quoteRequest.healthInfo&&($scope.healthInfo=$scope.quoteRequest.healthInfo,$scope.healthInfo.selectedFamilyMembers))for(i=0;i<$scope.healthInfo.selectedFamilyMembers.length;i++)if("SELF"==$scope.healthInfo.selectedFamilyMembers[i].relation.toUpperCase()){$scope.healthInfo.selectedFamilyMembers[i].gender=$scope.commonInfo.gender;break}if($scope.commonInfo.familyComp)for(i=0;i<$scope.commonInfo.familyComp.length;i++)if("SELF"==$scope.commonInfo.familyComp[i].relation.toUpperCase()){$scope.commonInfo.familyComp[i].gender=$scope.commonInfo.gender;break}$scope.setEditProfile(!1),$scope.initConfimationScreen(),$scope.updateSlideStatusByKey("confirmation")}else $scope.skipTo?($scope.updateSlideStatusByKey($scope.skipTo),$scope.skipTo=null):$scope.updateSlideStatusByIndex(slideIndex+1)},$scope.getPinCodeAreaList=function(searchValue){return $http.get(getSearchServiceLink+"CityDetails&q="+searchValue).then(function(response){return JSON.parse(response.data).data})},$scope.onSelectPinOrArea=function(item){$scope.addressDetails.pincode=item.pincode,$scope.addressDetails.city=item.city,$scope.addressDetails.state=item.state},$scope.submitFamilyIncome=function(slideIndex,isUpdateReq){if($scope.showOtpButton=!0,$rootScope.incomeAbsoluteValue){for(var i=0;i<$scope.incomeRangeList.length;i++)if($scope.incomeRangeList[i].absoluteValue==$rootScope.incomeAbsoluteValue){$scope.commonInfo.incomeRange=$scope.incomeRangeList[i];break}$scope.quoteRequest.commonInfo=$scope.commonInfo,localStorageService.set("professionalQuoteParams",$scope.quoteRequest),$scope.askMia(slideIndex,$scope.quoteRequest),isUpdateReq?($scope.setEditProfile(!1),$scope.initConfimationScreen(),$scope.updateSlideStatusByKey("confirmation")):($scope.skipTo&&($scope.updateSlideStatusByKey($scope.skipTo),$scope.skipTo=null),$scope.updateSlideStatusByIndex(slideIndex+1))}},$scope.submitFamilyDetails=function(slideIndex,isUpdateReq){$anchorScroll("home");var current_Year=(new Date).getFullYear();$scope.commonInfo.familyComp=[],$scope.healthInfo.selectedFamilyMembers=[],$scope.dieaseDetails=[];for(var i=0;i<$scope.family.length;i++)if($scope.family[i].val){var member={};member.relation=$scope.family[i].member,member.birthYear=$scope.family[i].birthYear,member.display=$scope.family[i].member,member.id=$scope.family[i].id,member.salutation="M"==$scope.family[i].gender?"Mr":"Ms",member.existSince="",member.existSinceError=!1,member.status=!1,member.relationship=$scope.family[i].relationship,current_Year==$scope.family[i].birthYear?(member.age=calculateAgeByDOB("01/01/"+$scope.family[i].birthYear),member.dob="01/01/"+$scope.family[i].birthYear,$scope.family[i].dob="01/01/"+$scope.family[i].birthYear):(member.age=calculateAgeByDOB("01/07/"+$scope.family[i].birthYear),member.dob="01/07/"+$scope.family[i].birthYear,$scope.family[i].dob="01/07/"+$scope.family[i].birthYear),"SELF"==member.relation.toUpperCase()&&($scope.commonInfo.age=member.age,member.gender=$scope.commonInfo.gender),$scope.family[i].age=member.age,"SPOUSE"==member.relation.toUpperCase()?"Male"==$scope.commonInfo.gender?member.gender="Female":member.gender="Male":"SELF"!=member.relation.toUpperCase()&&("M"==$scope.family[i].gender?member.gender="Male":member.gender="Female"),member.dieaseDetails=[],$scope.commonInfo.familyComp.push(member),$scope.healthInfo.selectedFamilyMembers.push(member),$scope.commonInfo.familyMemberCount=$scope.commonInfo.familyComp.length}$scope.quoteRequest.commonInfo=$scope.commonInfo,localStorageService.set("professionalQuoteParams",$scope.quoteRequest),$scope.askMia(slideIndex,$scope.quoteRequest),isUpdateReq?($scope.setEditProfile(!1),$scope.initConfimationScreen(),$scope.updateSlideStatusByKey("confirmation")):($scope.skipTo&&($scope.updateSlideStatusByKey($scope.skipTo),$scope.skipTo=null),$scope.updateSlideStatusByIndex(slideIndex+1))},$scope.submitLifeStyleDetails=function(slideIndex,isUpdateReq){$anchorScroll("home"),$scope.commonInfo.dailyActivity=$scope.dailyActivityStatus[$rootScope.dailyActivity].value,$scope.commonInfo.weight=$scope.weightStatus[$rootScope.weight].value,$scope.quoteRequest.commonInfo=$scope.commonInfo,localStorageService.set("professionalQuoteParams",$scope.quoteRequest),$scope.askMia(slideIndex,$scope.quoteRequest),isUpdateReq?($scope.setEditProfile(!1),$scope.initConfimationScreen(),$scope.updateSlideStatusByKey("confirmation")):($scope.skipTo&&($scope.updateSlideStatusByKey($scope.skipTo),$scope.skipTo=null),$scope.updateSlideStatusByIndex(slideIndex+1))},$scope.addMember=function(){$scope.showAdditionalMembers=!0},$scope.$on("setCommAddressByAPI",function(){setTimeout(function(){var googleAddressObject=angular.copy($rootScope.chosenCommPlaceDetails);getAddressFields(googleAddressObject,function(fomattedAddress,formattedCity,formattedState,formattedPincode){$scope.addressDetails.pincode=formattedPincode||"",fomattedAddress&&($scope.addressDetails.streetDetails=formattedPincode?fomattedAddress+","+formattedPincode:fomattedAddress,$scope.addressDetails.displayArea=fomattedAddress),$scope.addressDetails.state=formattedState||"",$scope.addressDetails.city=formattedCity||"",localStorageService.set("commAddressDetails",$scope.addressDetails),$scope.$apply()})},10)}),$scope.redirectToResult=function(){$location.path("/professionalJourneyResult")},$scope.createLead=function(){var leadInfo={},quoteParam={},contactInfo={};messageIDVar?contactInfo.messageId=messageIDVar:contactInfo.messageId="",contactInfo.termsCondition=!0,contactInfo.firstName=$scope.commonInfo.firstName,contactInfo.lastName=$scope.commonInfo.lastName,contactInfo.emailId=$scope.commonInfo.emailId,contactInfo.mobileNumber=$scope.commonInfo.mobileNumber,contactInfo.createLeadStatus=!1,$("#wplc_email").val($scope.commonInfo.emailId),leadInfo.isProfessionalJourney=!0;for(let index=0;index<professionListForCRM.length;index++){professionListForCRM[index].index==$scope.quoteRequest.professionId&&(leadInfo.profession=professionListForCRM[index].value)}$rootScope.isFromLeadForm=!0,localStorageService.set("updateProdcutInCartFlag",!0),localStorageService.set("policies365-application-version",APPLICATION_VERSION),quoteParam.documentType="QuoteRequest",quoteParam.quoteType="ProfessionalJourney",requestSource="web",leadInfo.quoteParam=quoteParam,leadInfo.contactInfo=contactInfo,$scope.commonInfo.address=$scope.addressDetails,leadInfo.documentType="professionalQuoteRequest",leadInfo.profession=$scope.profession.professionName,leadInfo.professionCode=$scope.profession.professionCode,leadInfo.professionId=$scope.profession.professionId,leadInfo.commonInfo=$scope.commonInfo,leadInfo.carInfo=$scope.carInfo,leadInfo.bikeInfo=$scope.bikeInfo,leadInfo.healthInfo=$scope.healthInfo,$scope.commonInfo.familyHistory&&(leadInfo.commonInfo.diseaseCount=$scope.commonInfo.familyHistory.length),console.log("abhi",JSON.stringify(contactInfo)),localStorageService.set("quoteUserInfo",contactInfo),$scope.quoteUserInfo=contactInfo,RestAPI.invoke($scope.globalLabel.transactionName.createLead,leadInfo).then(function(leadCallback){leadCallback.responseCode==$scope.globalLabel.responseCode.success&&(messageIDVar=leadCallback.data.messageId,contactInfo.messageId,messageIDVar),$scope.quoteRequest.documentType="professionalQuoteRequest",$scope.quoteRequest.profession=$scope.profession.professionName,$scope.quoteRequest.professionCode=$scope.profession.professionCode,$scope.quoteRequest.professionId=$scope.profession.professionId,$scope.quoteRequest.commonInfo=$scope.commonInfo,$scope.quoteRequest.carInfo=$scope.carInfo,$scope.quoteRequest.bikeInfo=$scope.bikeInfo,$scope.quoteRequest.healthInfo=$scope.healthInfo,$scope.commonInfo.familyHistory&&($scope.quoteRequest.commonInfo.diseaseCount=$scope.commonInfo.familyHistory.length),localStorageService.set("selectedCarDetails",$scope.carDetails),localStorageService.set("selectedBikeDetails",$scope.bikeDetails),localStorageService.set("professionalQuoteParams",$scope.quoteRequest),localStorageService.set("selectedFamilyForHealth",$scope.family),$scope.redirectToResult()})};var numberSon=1,numberDaughter=1;$scope.addNewSon=function(index){for(var i=0;i<$scope.family.length;i++)"Son"==$scope.family[i].member&&(numberSon+=1);$scope.family[index].iconFlag=!1,$scope.family.push({member:"Son",relation:"SON",visible:!0,age:5,gender:"M",relationship:"CH",occupationClass:2,val:!0,other:!1,mandatory:!1,minAge:1,maxAge:82,iconFlag:!0,count:numberSon})},$scope.addNewDaughter=function(index){for(var i=0;i<$scope.family.length;i++)"Daughter"==$scope.family[i].member&&(numberDaughter+=1);$scope.family[index].iconFlag=!1,$scope.family.push({member:"Daughter",relation:"DAUGHTER",visible:!0,age:5,gender:"F",relationship:"CH",occupationClass:2,val:!0,other:!1,mandatory:!1,minAge:1,maxAge:25,iconFlag:!0,count:numberDaughter})},$scope.addChild=function(data,index){"Son"==data.member&&$scope.addNewSon(index),"Daughter"==data.member&&$scope.addNewDaughter(index)},$scope.isOnwed=function(status){return"own"==status.toLowerCase()},$scope.changeGender=function(){$rootScope.insuredGender=$scope.commonInfo.gender,"Male"==$scope.commonInfo.gender?$scope.commonInfo.salutation="Mr":$scope.commonInfo.salutation="Miss"},$scope.fetchLocalStorageDetails=function(){if(localStorageService.get("professionalQuoteParams")&&($scope.quoteRequest=localStorageService.get("professionalQuoteParams")),localStorageService.get("selectedFamilyForHealth")){if($scope.family=localStorageService.get("selectedFamilyForHealth"),localStorageService.get("healthQuoteInputParamaters")){if($scope.quoteParam=localStorageService.get("healthQuoteInputParamaters").quoteParam,$scope.personalInfo=localStorageService.get("healthQuoteInputParamaters").personalInfo,localStorageService.get("professionalQuoteParams")?($scope.quoteRequest=localStorageService.get("professionalQuoteParams"),$scope.quoteRequest.healthInfo?$scope.healthInfo=$scope.quoteRequest.healthInfo:$scope.healthInfo={}):($scope.quoteRequest={},$scope.quoteRequest.healthInfo={},$scope.quoteRequest.commonInfo={},$scope.healthInfo={},$scope.commonInfo=$scope.quoteRequest.commonInfo),$scope.personalInfo.selectedFamilyMembers){$scope.healthInfo.selectedFamilyMembers=[];for(var i=0;i<$scope.personalInfo.selectedFamilyMembers.length;i++)$scope.healthInfo.selectedFamilyMembers.push({gender:$scope.personalInfo.selectedFamilyMembers[i].gender,dob:$scope.personalInfo.selectedFamilyMembers[i].dob,display:$scope.personalInfo.selectedFamilyMembers[i].display,existSince:$scope.personalInfo.selectedFamilyMembers[i].existSince,id:$scope.personalInfo.selectedFamilyMembers[i].id,salutation:$scope.personalInfo.selectedFamilyMembers[i].salutation,relationship:$scope.personalInfo.selectedFamilyMembers[i].relationship,age:$scope.personalInfo.selectedFamilyMembers[i].age,existSinceError:$scope.personalInfo.selectedFamilyMembers[i].existSinceError,status:$scope.personalInfo.selectedFamilyMembers[i].status,relation:$scope.personalInfo.selectedFamilyMembers[i].relation})}$scope.quoteRequest.commonInfo&&($scope.commonInfo=$scope.quoteRequest.commonInfo,"M"==$scope.quoteParam.selfGender||"Male"==$scope.quoteParam.selfGender?$scope.commonInfo.gender="Male":$scope.commonInfo.gender="Female",$scope.quoteRequest.commonInfo=$scope.commonInfo,$scope.changeGender(),localStorageService.set("professionalQuoteParams",$scope.quoteRequest))}for(i=0;i<$scope.family.length;i++)if($scope.family[i].val&&$scope.family[i].dob){var tempDOB=$scope.family[i].dob.split("/");$scope.family[i].birthYear=tempDOB[2]}}localStorageService.get("lifeQuoteInputParamaters")&&($scope.quoteParam=localStorageService.get("lifeQuoteInputParamaters").quoteParam,localStorageService.get("professionalQuoteParams")?($scope.quoteRequest=localStorageService.get("professionalQuoteParams"),$scope.quoteRequest.commonInfo&&($scope.commonInfo=$scope.quoteRequest.commonInfo,$scope.commonInfo.age=$scope.quoteParam.age,"Y"==$scope.quoteParam.tobacoAdicted?$scope.commonInfo.smoking=!0:$scope.commonInfo.smoking=!1)):($scope.quoteRequest={},$scope.quoteRequest.commonInfo={},$scope.commonInfo=$scope.quoteRequest.commonInfo),$scope.quoteParam.gender&&("M"==$scope.quoteParam.gender||"Male"==$scope.quoteParam.gender?$scope.commonInfo.gender="Male":$scope.commonInfo.gender="Female",$scope.changeGender()),$scope.quoteRequest.commonInfo=$scope.commonInfo,localStorageService.set("professionalQuoteParams",$scope.quoteRequest))},$scope.initialisation=function(){if(wordPressEnabled?($rootScope.wordPressEnabled=wordPressEnabled,$rootScope.wp_path=wp_path):$rootScope.wp_path="",$scope.getCoordinates(),$scope.incomeRangeList=annualIncomesGeneric,$scope.family=healthFamilyListGeneric,$scope.family.forEach(function(healthFamilyListGeneric){healthFamilyListGeneric.dob=calcDOBFromAge(healthFamilyListGeneric.age)}),$scope.ageList=ageList,"DR"==$scope.profession.professionCode?($scope.professionSpecializationList=drProfessionSpecializationList,$scope.professionalLiabilityList=drProfessionalLiabilityList):"IT"==$scope.profession.professionCode?($scope.professionSpecializationList=itProfessionSpecializationList,$scope.professionalLiabilityList=itProfessionalLiabilityList):"CA"==$scope.profession.professionCode?($scope.professionSpecializationList=caProfessionSpecializationList,$scope.professionalLiabilityList=caProfessionalLiabilityList):"ECOMM"==$scope.profession.professionCode?($scope.professionSpecializationList=retailProfessionSpecializationList,$scope.professionalLiabilityList=retailProfessionLiabilityList):"SELFEMP"==$scope.profession.professionCode?($scope.professionSpecializationList=freelancerProfessionSpecializationList,$scope.professionalLiabilityList=freelancerProfessionLiabilityList):"EDUT"==$scope.profession.professionCode?($scope.professionSpecializationList=educatorProfessionSpecializationList,$scope.professionalLiabilityList=educatorProfessionLiabilityList):"GOVT"==$scope.profession.professionCode?$scope.professionSpecializationList=govtProfessionSpecializationist:"HOSP"==$scope.profession.professionCode?($scope.professionSpecializationList=hospitalityProfessionSpecializationList,$scope.professionalLiabilityList=hospitalityProfessionLiabilityList):"LAW"==$scope.profession.professionCode?($scope.professionSpecializationList=legalProfessionSpecializationList,$scope.professionalLiabilityList=legalProfessionLiabilityList):"MANU"==$scope.profession.professionCode?$scope.professionSpecializationList=manufacturingProfessionSpecializationList:"REAL"==$scope.profession.professionCode?($scope.professionSpecializationList=realEstateProfessionSpecializationList,$scope.professionalLiabilityList=realEstateProfessionLiabilityList):"ARMY"==$scope.profession.professionCode?$scope.professionSpecializationList=armedForcesProfessionSpecializationList:($scope.professionSpecializationList=drProfessionSpecializationList,$scope.professionalLiabilityList=drProfessionalLiabilityList),$scope.diseaseList=diseaseList,$scope.weightStatus=weightStatus,$scope.dailyActivityStatus=dailyActivityStatus,$scope.ngoList=ngoList,$scope.homeOwnershipList=homeOwnershipList,$scope.clinicOwnershipList=clinicOwnershipList,$scope.quoteRequest.commonInfo=$scope.commonInfo,$rootScope.weight=1,$rootScope.dailyActivity=1,localStorageService.get("commAddressDetails")&&($scope.addressDetails=localStorageService.get("commAddressDetails")),localStorageService.get("selectedBikeDetails")&&($scope.bikeDetails=localStorageService.get("selectedBikeDetails")),localStorageService.get("selectedCarDetails")&&($scope.carDetails=localStorageService.get("selectedCarDetails")),$http.get(wp_path+"ApplicationLabels.json").then(function(response){localStorageService.set("applicationLabels",response.data),$scope.globalLabel=response.data.globalLabels;var popularRTOParam={popularRTOList:"Y"};getDocUsingParam(RestAPI,$scope.globalLabel.transactionName.getPopularRTO,popularRTOParam,function(callbackMetro){callbackMetro.data?(console.log("defaultMetroListNotVar"),localStorageService.set("defaultMetroCityList",callbackMetro.data),$scope.defaultMetroList=callbackMetro.data):(console.log("defaultMetroListVar"),localStorageService.set("defaultMetroCityList",defaultMetroListVar),$scope.defaultMetroList=defaultMetroListVar),getListFromDB(RestAPI,"","CarDataList",$scope.globalLabel.request.findAppConfig,function(callbackCar5){callbackCar5.responseCode==$scope.globalLabel.responseCode.success&&($scope.carDisplayNames=callbackCar5.data,localStorageService.set("carMakeListDisplay",callbackCar5.data),$scope.askMia(-1,$scope.quoteRequest))}),setTimeout(function(){getListFromDB(RestAPI,"","BikeVariants",$scope.globalLabel.request.findAppConfig,function(callbackBike5){callbackBike5.responseCode==$scope.globalLabel.responseCode.success&&($scope.bikeDisplayNames=callbackBike5.data,localStorageService.set("bikeMakeListDisplay",callbackBike5.data))})},300)})}),localStorageService.get("profession")&&localStorageService.get("professionalQuoteParams"))if($scope.fetchLocalStorageDetails(),localStorageService.get("professionalQuoteParams").commonInfo){$scope.commonInfo=localStorageService.get("professionalQuoteParams").commonInfo,$scope.commonInfo.incomeRange&&($rootScope.incomeAbsoluteValue=$scope.commonInfo.incomeRange.absoluteValue),$scope.commonInfo.ngo&&($rootScope.ngoName=$scope.commonInfo.ngo.name);for(var i=0;i<$scope.dailyActivityStatus.length;i++)if($scope.commonInfo.dailyActivity==$scope.dailyActivityStatus[i].value){$rootScope.dailyActivity=$scope.dailyActivityStatus[i].index;break}for(i=0;i<$scope.weightStatus.length;i++)if($scope.commonInfo.weight==$scope.weightStatus[i].value){$rootScope.weight=$scope.weightStatus[i].index;break}var counter=0;for(i=0;i<$scope.professionSpecializationList.length;i++){if($scope.commonInfo.specialization===$scope.professionSpecializationList[i].value&&(counter=1),0!=counter){$rootScope.specialization=$scope.professionSpecializationList[i];break}$rootScope.specialization=$scope.professionSpecializationList[0]}var liabilitycounter=0;if($scope.professionalLiabilityList.length>0)for(i=0;i<$scope.professionalLiabilityList.length;i++){if($scope.commonInfo.professionalLiability===$scope.professionalLiabilityList[i].value&&(liabilitycounter=1),0!=liabilitycounter){$rootScope.professionalLiability=$scope.professionalLiabilityList[i];break}"DR"==$scope.profession.professionCode?$rootScope.professionalLiability=$scope.professionalLiabilityList[0]:$rootScope.professionalLiability=$scope.professionalLiabilityList[1]}if($rootScope.specialization&&($rootScope.specialization=$scope.professionSpecializationList.find(function(specialization){return $rootScope.specialization.value===specialization.value})),$rootScope.professionalLiability&&($rootScope.professionalLiability=$scope.professionalLiabilityList.find(function(professionalLiability){return $rootScope.professionalLiability.label===professionalLiability.label})),$scope.commonInfo.familyComp&&$scope.commonInfo.familyComp.length>0)for(i=0;i<$scope.commonInfo.familyComp.length;i++)$scope.family[i].relation==$scope.commonInfo.familyComp[i].relation&&($scope.family[i].birthYear=$scope.commonInfo.familyComp[i].birthYear,$scope.family[i].status=!0,$scope.family[i].val=!0)}else{if(localStorageService.get("quoteUserInfo")){var quoteUserInfo=localStorageService.get("quoteUserInfo");$scope.commonInfo.firstName=quoteUserInfo.firstName,$scope.commonInfo.lastName=quoteUserInfo.lastName,$scope.commonInfo.emailId=quoteUserInfo.emailId,$scope.commonInfo.mobileNumber=quoteUserInfo.mobileNumber}$scope.commonInfo.gender="Male",$scope.changeGender(),$rootScope.incomeAbsoluteValue=$scope.incomeRangeList[0].absoluteValue,$scope.commonInfo.specialization=$scope.professionSpecializationList[0].value,$rootScope.specialization=$scope.professionSpecializationList[0],$rootScope.specialization=$scope.professionSpecializationList.find(function(specialization){return $rootScope.specialization.value===specialization.value}),$scope.professionalLiabilityList.length>0&&($scope.commonInfo.professionalLiability=$scope.professionalLiabilityList[0].value,$rootScope.professionalLiability=$scope.professionalLiabilityList[0],$rootScope.professionalLiability=$scope.professionalLiabilityList.find(function(professionalLiability){return $rootScope.professionalLiability.label===professionalLiability.label})),$scope.commonInfo.homeStatus="Owned",$scope.commonInfo.clinicStatus="Owned",$rootScope.ngoName=$scope.ngoList[0].name,$scope.commonInfo.smoking=!1,$scope.fetchLocalStorageDetails()}else{if(localStorageService.get("quoteUserInfo")){quoteUserInfo=localStorageService.get("quoteUserInfo");$scope.commonInfo.firstName=quoteUserInfo.firstName,$scope.commonInfo.lastName=quoteUserInfo.lastName,$scope.commonInfo.emailId=quoteUserInfo.emailId,$scope.commonInfo.mobileNumber=quoteUserInfo.mobileNumber}$scope.commonInfo.gender="Male",$scope.changeGender(),$rootScope.incomeAbsoluteValue=$scope.incomeRangeList[0].absoluteValue,$scope.commonInfo.specialization=$scope.professionSpecializationList[0].value,$rootScope.specialization=$scope.professionSpecializationList[0],$rootScope.specialization=$scope.professionSpecializationList.find(function(specialization){return $rootScope.specialization.value===specialization.value}),$scope.professionalLiabilityList.length>0&&($scope.commonInfo.professionalLiability=$scope.professionalLiabilityList[0].value,$rootScope.professionalLiability=$scope.professionalLiabilityList[0],$rootScope.professionalLiability=$scope.professionalLiabilityList.find(function(professionalLiability){return $rootScope.professionalLiability.label===professionalLiability.label})),$scope.commonInfo.homeStatus="Owned",$scope.commonInfo.clinicStatus="Owned",$rootScope.ngoName=$scope.ngoList[0].name,$scope.commonInfo.smoking=!1,$scope.fetchLocalStorageDetails()}for(i=0;i<$scope.family.length;i++)"A"==$scope.family[i].relationship&&1==$scope.family[i].val&&($scope.showAdditionalMembers=!0);localStorageService.set("selectedFamilyForHealth",$scope.family)},$scope.changeFamilyMemberStatus=function(member){$scope.isAgeApplicable=!0;for(var i=0;i<$scope.family.length;i++)$scope.family[i].relation==member.relation&&(member.val||($scope.family[i].birthYear="",member.invalidAge=!1));for(i=0;i<$scope.family.length;i++)if($scope.family[i].val&&$scope.family[i].invalidAge){$scope.isAgeApplicable=!1;break}},$scope.validateAge=function(selectedMember){$scope.isAgeApplicable=!0;var age=(new Date).getFullYear()-selectedMember.birthYear;"SON"!=selectedMember.relation&&"DAUGHTER"!=selectedMember.relation?Number(age)>Number(selectedMember.maxAge)||Number(age)<Number(selectedMember.minAge)?selectedMember.invalidAge=!0:selectedMember.invalidAge=!1:Number(age)>100||Number(age)<0?selectedMember.invalidAge=!0:selectedMember.invalidAge=!1;for(var i=0;i<$scope.family.length;i++)if($scope.family[i].val&&$scope.family[i].invalidAge){$scope.isAgeApplicable=!1;break}},$scope.init=function(){$scope.declaration(),$scope.initialisation()};var profession={};localStorage.getItem("profession")&&(profession=JSON.parse(localStorage.getItem("profession")),$scope.professionSelects(profession),$scope.init()),$scope.showRiskAssessmentDemo=function(){$scope.riskAssessmentDemoModal=!0},$scope.hideRiskAssessmentDemo=function(){$scope.riskAssessmentDemoModal=!1},$scope.showInsuranceProfileDemo=function(){$scope.insuranceProfileDemoModal=!0},$scope.hideInsuranceProfileDemo=function(){$scope.insuranceProfileDemoModal=!1},$scope.sendOTP=function(){if($scope.commonInfo.mobileNumber){$scope.disableContact=!0;var validateAuthParam={paramMap:{}};validateAuthParam.mobileNumber=$scope.commonInfo.mobileNumber,validateAuthParam.funcType=$scope.p365Labels.functionType.otpAuth,validateAuthParam.paramMap.OTP=$scope.p365Labels.functionType.otpGenerate,getDocUsingParam(RestAPI,$scope.p365Labels.transactionName.sendSMS,validateAuthParam,function(createOTP){createOTP.responseCode==$scope.p365Labels.responseCode.success?($scope.createOTPError="",$scope.modalOTPError=!1,$scope.showOtpButton=!1):createOTP.responseCode==$scope.p365Labels.responseCode.userNotExist?($scope.createOTPError=createOTP.message,$scope.modalOTPError=!0):createOTP.responseCode==$scope.p365Labels.responseCode.blockedMobile?($scope.createOTPError=createOTP.message,$scope.modalOTPError=!0):createOTP.responseCode==$scope.p365Labels.responseCode.mobileInvalidCode?($scope.createOTPError=createOTP.message,$scope.modalOTPError=!0):($scope.createOTPError=$scope.p365Labels.errorMessage.createOTP,$scope.modalOTPError=!0)})}},$scope.resendOTP=function(){$scope.sendOTP()},$scope.submitOTP=function(){var authenticateUserParam={};authenticateUserParam.mobileNumber=$scope.commonInfo.mobileNumber,authenticateUserParam.OTP=Number($scope.commonInfo.OTP),getDocUsingParam(RestAPI,$scope.p365Labels.transactionName.validateOTP,authenticateUserParam,function(validateOTP){$rootScope.authenticated=!1,validateOTP.responseCode==$scope.p365Labels.responseCode.success?($rootScope.authenticated=!0,$scope.invalidOTPError="",$scope.createLead()):validateOTP.responseCode==$scope.p365Labels.responseCode.noRecordsFound?$scope.invalidOTPError=$scope.p365Labels.validationMessages.invalidOTP:validateOTP.responseCode==$scope.p365Labels.responseCode.expiredOTP?$scope.invalidOTPError=$scope.p365Labels.errorMessage.expiredOTP:validateOTP.responseCode==$scope.p365Labels.responseCode.blockedMobile?$scope.invalidOTPError=validateOTP.message:$scope.invalidOTPError=$scope.p365Labels.errorMessage.authOTP})},$scope.$watch("commonInfo.mobileNumber",function(newValue){localStorageService.get("quoteUserInfo")&&$scope.commonInfo&&($scope.commonInfo.mobileNumber!=localStorageService.get("quoteUserInfo").mobileNumber?$rootScope.authenticated=!1:$rootScope.authenticated=!0)}),$scope.changeNumber=function(){$scope.disableContact=!1,$scope.showOtpButton=!0}}]),ageList=["2001","2000","1999","1998","1997","1996","1995","1994","1993","1992","1991","1990","1989","1988","1987","1986","1985","1984","1983","1982","1981","1980","1979","1978","1977","1976","1975","1974","1973","1972","1971","1970","1969","1968","1967","1966","1965","1964","1963","1962","1961","1960","1959","1958","1957","1956","1955","1954","1953","1952","1951","1950","1949","1948","1947","1946","1945","1944","1943","1942","1941","1940","1939","1938","1937","1936","1935","1934","1933","1932","1931","1930","1929","1928","1927","1926","1925","1924","1923","1922","1921","1920","1919"],incomeRangeList=[{label:"Up to 5 Lacs",absoluteValue:5e5,minimum:0,maximum:5e5},{label:"5 to 10 Lacs",absoluteValue:1e6,minimum:500001,maximum:1e6},{label:"10 to 18 Lacs",absoluteValue:18e5,minimum:1000001,maximum:18e5},{label:"18 to 30 Lacs",absoluteValue:3e6,minimum:1800001,maximum:3e6},{label:"30 to 50 Lacs",absoluteValue:5e6,minimum:3000001,maximum:5e6},{label:"50 Lacs+",absoluteValue:99e6,minimum:5000001,maximum:99e6}],annualIncomesGeneric=[{display:"< 5 Lakh",label:"Up to 5 Lacs",annualIncomeInterval:1,annualIncome:5e5,absoluteValue:5e5,minimum:0,maximum:5e5},{display:"5 Lakh - 10 Lakh",label:"5 to 10 Lacs",annualIncomeInterval:2,annualIncome:1e6,absoluteValue:1e6,minimum:500001,maximum:1e6},{display:"10 Lakh - 18 Lakh",label:"10 to 18 Lacs",annualIncomeInterval:3,annualIncome:18e5,absoluteValue:18e5,minimum:1000001,maximum:18e5},{display:"18 Lakh - 30 Lakh",label:"18 to 30 Lacs",annualIncomeInterval:4,annualIncome:3e6,absoluteValue:3e6,minimum:1800001,maximum:3e6},{display:"30 Lakh - 50 Lakh",label:"30 to 50 Lacs",annualIncomeInterval:5,annualIncome:5e6,absoluteValue:5e6,minimum:3000001,maximum:5e6},{display:"50 Lakh - 100 Lakh",label:"50 Lacs+",annualIncomeInterval:6,annualIncome:1e7,absoluteValue:99e6,minimum:5000001,maximum:99e6}],diseaseList=[{label:"Diabetes",diseaseName:"diabetes"},{label:"Blood Pressure",diseaseName:"bloodPressure"},{label:"Heart Disease",diseaseName:"heartDisease"}],weightStatus=[{index:0,value:"Under Weight"},{index:1,value:"Normal Weight"},{index:2,value:"Over Weight"}],dailyActivityStatus=[{index:0,value:"Low"},{index:1,value:"Adequte"},{index:2,value:"High"}],professionListForCRM=[{index:1,value:"healthcare"},{index:2,value:"technical"},{index:3,value:"finance"},{index:4,value:"hospitality"},{index:5,value:"self_employed"},{index:6,value:"marketing"},{index:7,value:"others"}],ngoList=[{name:"armedForces",displayName:"Armed Forces",preference:1},{name:"childrenEducation",displayName:"Children Education",preference:3},{name:"elderlyCare",displayName:"Elderly Care",preference:2},{name:"ruralUpliftment",displayName:"Rural Upliftment",preference:4},{name:"sanitationAndCleanliness",displayName:"Sanitation & Cleanliness",preference:6},{name:"womenEmpowerment",displayName:"Women Empowerment",preference:5}],homeOwnershipList=[{label:"RENTED",value:"Rented"},{label:"OWNED",value:"Owned"}],clinicOwnershipList=[{label:"RENTED",value:"Rented"},{label:"OWNED",value:"Owned"},{label:"SAME AS HOME",value:"Same as home"}],familyMemberList=[{relation:"SELF",status:!0,age:35,minAgeApplicable:18,maxAgeApplicable:99,relationship:"S",visible:!0,iconFlag:!1},{relation:"SPOUSE",status:!1,age:33,minAgeApplicable:18,maxAgeApplicable:99,relationship:"SP",visible:!0,iconFlag:!1},{relation:"SON",status:!1,age:5,minAgeApplicable:1,maxAgeApplicable:24,relationship:"CH",visible:!0,iconFlag:!0,gender:"male"},{relation:"DAUGHTER",status:!1,age:5,minAgeApplicable:1,maxAgeApplicable:24,relationship:"CH",visible:!0,iconFlag:!0,gender:"female"},{relation:"FATHER",status:!1,age:60,minAgeApplicable:18,maxAgeApplicable:99,relationship:"A",visible:!1,iconFlag:!1,gender:"male"},{relation:"MOTHER",status:!1,age:58,minAgeApplicable:18,maxAgeApplicable:99,relationship:"A",visible:!1,iconFlag:!1,gender:"female"},{relation:"GRAND FATHER",status:!1,age:78,minAgeApplicable:54,maxAgeApplicable:100,relationship:"A",visible:!1,iconFlag:!1,gender:"male"},{relation:"GRAND MOTHER",status:!1,age:72,minAgeApplicable:54,maxAgeApplicable:100,relationship:"A",visible:!1,iconFlag:!1,gender:"female"}],healthFamilyListGeneric=[{id:1,relation:"SELF",member:"Self",val:!0,age:35,gender:"M",relationship:"S",occupationClass:2,visible:!0,other:!1,mandatory:!1,minAge:18,maxAge:100,iconFlag:!1},{id:2,member:"Spouse",relation:"SPOUSE",val:!1,age:33,gender:"F",relationship:"SP",occupationClass:2,visible:!0,other:!1,mandatory:!1,minAge:18,maxAge:100,iconFlag:!1},{id:3,member:"Son",relation:"SON",val:!1,age:5,gender:"M",relationship:"CH",occupationClass:2,visible:!0,other:!1,mandatory:!1,minAge:1,maxAge:25,iconFlag:!0,count:0},{id:4,member:"Daughter",relation:"DAUGHTER",val:!1,age:5,gender:"F",relationship:"CH",occupationClass:2,visible:!0,other:!1,mandatory:!1,minAge:1,maxAge:25,iconFlag:!0,count:0},{id:5,member:"Father",relation:"FATHER",val:!1,age:60,gender:"M",relationship:"A",occupationClass:2,visible:!1,other:!1,mandatory:!1,minAge:36,maxAge:100,iconFlag:!1},{id:6,member:"Mother",relation:"MOTHER",val:!1,age:58,gender:"F",relationship:"A",occupationClass:2,visible:!1,other:!1,mandatory:!1,minAge:36,maxAge:100,iconFlag:!1},{id:7,member:"Grand Father",relation:"GRAND FATHER",val:!1,age:78,gender:"M",relationship:"A",occupationClass:2,visible:!1,other:!0,mandatory:!1,minAge:54,maxAge:100,iconFlag:!1},{id:8,member:"Grand Mother",relation:"GRAND MOTHER",val:!1,age:72,gender:"F",relationship:"A",occupationClass:2,visible:!1,other:!0,mandatory:!1,minAge:54,maxAge:100,iconFlag:!1},{id:9,member:"Father-in-Law",relation:"FATHER IN LAW",val:!1,age:60,gender:"M",relationship:"A",occupationClass:2,visible:!1,other:!0,mandatory:!1,minAge:36,maxAge:100,iconFlag:!1},{id:10,member:"Mother-in-Law",relation:"MOTHER IN LAW",val:!1,age:58,gender:"F",relationship:"A",occupationClass:2,visible:!1,other:!0,mandatory:!1,minAge:36,maxAge:100,iconFlag:!1}],drProfessionSpecializationList=[{label:"General Physician",value:"General Physician"},{label:"Cardiologist",value:"Cardiologist"},{label:"Opthalmologist",value:"Opthalmologist"},{label:"Dentist",value:"Dentist"},{label:"Gynecologist",value:"Gynecologist"},{label:"Radiologist",value:"Radiologist",skipTo:"ngo",skippedFrom:"specialisation",skippedParams:["professionalLiability","clinicStatus"]},{label:"Pathologist",value:"Pathologist",skipTo:"ngo",skippedFrom:"specialisation",skippedParams:["professionalLiability","clinicStatus"]},{label:"Orthopedic",value:"Orthopedic"},{label:"Hospital Staff",value:"Hospital Staff",skipTo:"ngo",skippedFrom:"specialisation",skippedParams:["professionalLiability","clinicStatus"]},{label:"Other",value:"Other",skipTo:"ngo",skippedFrom:"specialisation",skippedParams:["professionalLiability","clinicStatus"]}],drProfessionalLiabilityList=[{label:"RUN A CLINIC",value:"Run a clinic"},{label:"HOSPITAL",value:"Hospital",skipTo:"ngo",skippedFrom:"personalLibility",skippedParams:["clinicStatus"]},{label:"BOTH",value:"Both"}],IDVOptionsGen=[{value:1,label:"BEST DEAL"},{value:2,label:"YOUR IDV"},{value:3,label:"MIN IDV"}],planBenefitsGeneric=[{name:"Critical Illness",featureId:57,description:"Additional lump sum or higher coverage with additional premium in case of diagnosis of Critical Illnesses such as Stroke,Cancer,etc depending on the plan.",riders:{riderId:16,riderName:"Critical Illness"}},{name:"Maternity Cover",featureId:22,description:"This includes medical expenses during childbirth due to Normal or Caesarian delivery or lawful medical termination of pregnancy.",riders:{riderId:39,riderName:"Reduction in Maternity Waiting"},category:"Maternity Benefits Waiting period"},{name:"Restore Benefits",featureId:52,description:"Some plan provide restore or reinstatement in the form of additional Sum Assured if the Original Sum Assured is utilized fully during a policy year.",riders:{riderId:33,riderName:"Restore Benefits",description:"Restore Benifits/Unlimited Automatic Recharge",type:"R"},category:"Benefits of No Claim"},{name:"No Co-Pay",featureId:36,description:"Insurance companies deduct certain specified % of amount called Co-pay before settling the final claim amount and it is generally applicable beyond certain age.",riders:{riderId:38,riderName:"No Copay"},category:"Copay"}],roomRentBenefitList=[{name:"Private Room",id:1,featureId:1,description:"It is the Cap applied by the Insurance companies in the form of room charges or room category for the hospital room that you can opt for.",riders:{riderId:43,riderName:"Room Rent",value:"Private Room"},category:"Room rent Limits",subCategory:"Private Non-AC"},{name:"Shared Room",id:2,featureId:2,description:"It is the Cap applied by the Insurance companies in the form of room charges or room category for the hospital room that you can opt for.",riders:{riderId:43,riderName:"Room Rent",value:"Shared Room"},category:"Room rent Limits",subCategory:"Shared"},{name:"No Limit",id:3,featureId:3,description:"It is the Cap applied by the Insurance companies in the form of room charges or room category for the hospital room that you can opt for.",riders:{riderId:43,riderName:"Room Rent",value:"No Limit(Any Room)"},category:"Room rent Limits",subCategory:"No Limit"}],preExistingCoveragesGeneric=[{value:24,display:"Covered after 2 years",name:"Pre-Existing Coverage",featureId:60,category:"Pre-existing cover",subCategory:"2 years and less"},{value:36,display:"Covered after 3 years",name:"Pre-Existing Coverage",featureId:60,category:"Pre-existing cover",subCategory:"2-3 years"},{value:48,display:"Covered after 4 years",name:"Pre-Existing Coverage",featureId:60,category:"Pre-existing cover",subCategory:"4 years and more"}],itProfessionSpecializationList=[{label:"Design & Creatives",value:"Design & Creatives"},{label:"Consulting",value:"Consulting"},{label:"Data & Analytics",value:"Data & Analytics"},{label:"Software Development",value:"Software Development"},{label:"Product",value:"Product"},{label:"Business Process Management",value:"Business Process Management"},{label:"Infrastructure Management",value:"Infrastructure Management"},{label:"Project Management",value:"Project Management"},{label:"Testing",value:"Testing"},{label:"Tech Startup",value:"Tech Startup"},{label:"Other",value:"Other",skipTo:"ngo",skippedFrom:"specialisation",skippedParams:["professionalLiability","clinicStatus"]}],itProfessionalLiabilityList=[{label:"OWN CONSULTING",value:"Own Consulting"},{label:"WORK FOR A COMPANY",value:"Work for a Company",skipTo:"ngo",skippedFrom:"personalLibility",skippedParams:["clinicStatus"]},{label:"BOTH",value:"Both"}],caProfessionSpecializationList=[{label:"Chartered Accountant",value:"Chartered Accountant"},{label:"CFO",value:"CFO"},{label:"Equity and Mutual Funds",value:"Equity and Mutual Funds"},{label:"Insurance",value:"Insurance"},{label:"Investment Banking",value:"Investment Banking"},{label:"Retail Banking",value:"Retail Banking"},{label:"Treasury",value:"Treasury"},{label:"Taxation",value:"Taxation"},{label:"Other",value:"Other"}],caProfessionalLiabilityList=[{label:"OWN PRACTICE",value:"Own Practice"},{label:"WORK FOR A COMPANY",value:"Work for a Company",skipTo:"ngo",skippedFrom:"personalLibility",skippedParams:["clinicStatus"]},{label:"BOTH",value:"Both"}],retailProfessionSpecializationList=[{label:"Courier Service",value:"Courier Service"},{label:"Dealership",value:"Dealership"},{label:"Small retail business",value:"Small retail business"},{label:"Large retail chain",value:"Large retail chain"},{label:"Others",value:"Others"}],retailProfessionLiabilityList=[{label:"Own business",value:"Own business"},{label:"Work for a Company",value:"Work for a Company",skipTo:"ngo",skippedFrom:"personalLibility",skippedParams:["clinicStatus"]}],freelancerProfessionSpecializationList=[{label:"Art & Music",value:"Art & Music"},{label:"Consulting",value:"Consulting"},{label:"Beauty & Personal Care",value:"Beauty & Personal Care"},{label:"Dance & Choreography",value:"Dance & Choreography"},{label:"Fitness & Sports",value:"Fitness & Sports"},{label:"Marketing & Contents",value:"Marketing & Contents"},{label:"NGO & Public Service",value:"NGO & Public Service"},{label:"Party Planning",value:"Party Planning"},{label:"Small Business",value:"Small Business"},{label:"Other",value:"Other"}],freelancerProfessionLiabilityList=[{label:"Own business",value:"Own business"},{label:"Work for a Company",value:"Work for a Company"}],educatorProfessionSpecializationList=[{label:"Day Care",value:"Day Care"},{label:"Primary School",value:"Primary School"},{label:"High School",value:"High School"},{label:"Degree College",value:"Degree College"},{label:"Engineering College",value:"Engineering College"},{label:"Medical College",value:"Medical College"},{label:"Other",value:"Other"}],educatorProfessionLiabilityList=[{label:"Own Tuition",value:"Own Tuition"},{label:"Work for an Institution",value:"Work for an Institution",skipTo:"ngo",skippedFrom:"personalLibility",skippedParams:["clinicStatus"]}],govtProfessionSpecializationist=[{label:"Central Government",value:"Central Government"},{label:"Public Sector Banking",value:"Public Sector Banking"},{label:"Public Sector Non Banking",value:"Public Sector Non Banking"},{label:"State Government",value:"State Government"},{label:"Other",value:"Other"}],hospitalityProfessionSpecializationList=[{label:"Restaurant & Food",value:"Restaurant & Food"},{label:"Event Management",value:"Event Management"},{label:"Motion Pictures",value:"Motion Pictures"},{label:"Music",value:"Music"},{label:"Broadcasting",value:"Broadcasting"},{label:"Other",value:"Other"}],hospitalityProfessionLiabilityList=[{label:"Own business",value:"Own business"},{label:"Work for a Company",value:"Work for a Company",skipTo:"ngo",skippedFrom:"personalLibility",skippedParams:["clinicStatus"]}],legalProfessionSpecializationList=[{label:"Company Law",value:"Company Law"},{label:"Criminal Law",value:"Criminal Law"},{label:"Family Law",value:"Family Law"},{label:"Civil Law",value:"Civil Law"},{label:"Patent and IP",value:"Patent and IP"},{label:"Real Estate Law",value:"Real Estate Law"},{label:"Other",value:"Other"}],legalProfessionLiabilityList=[{label:"Own Practice",value:"Own Practice"},{label:"Work for a Company",value:"Work for a Company",skipTo:"ngo",skippedFrom:"personalLibility",skippedParams:["clinicStatus"]},{label:"Both",value:"Both"}],manufacturingProfessionSpecializationList=[{label:"Micro",value:"Micro"},{label:"Small",value:"Small"},{label:"Medium",value:"Medium"},{label:"Large",value:"Large"},{label:"Other",value:"Other"}],realEstateProfessionSpecializationList=[{label:"Architect",value:"Architect"},{label:"Broker",value:"Broker"},{label:"Builder",value:"Builder"},{label:"Commercial Renting",value:"Commercial Renting"},{label:"Civil Engineer",value:"Civil Engineer"},{label:"Civil Contractor",value:"Civil Contractor"},{label:"Interior Designer",value:"Interior Designer"},{label:"Other",value:"Other"}],realEstateProfessionLiabilityList=[{label:"Own Practice",value:"Own Practice"},{label:"Work for a Company",value:"Work for a Company",skipTo:"ngo",skippedFrom:"personalLibility",skippedParams:["clinicStatus"]},{label:"Both",value:"Both"}],armedForcesProfessionSpecializationList=[{label:"Army",value:"Army"},{label:"Navy",value:"Navy"},{label:"Air-force",value:"Air-force"},{label:"Defence Colleges",value:"Defence Colleges"},{label:"Coast Guard",value:"Coast Guard"}],angular.module("professionalJourneyResult",["CoreComponentApp","LocalStorageModule","ngMessages","nzTour"]).controller("professionalJourneyResultController",["nzTour","RestAPI","$scope","$rootScope","$location","$http","localStorageService","$timeout","$sce","$controller","$filter",function(nzTour,RestAPI,$scope,$rootScope,$location,$http,localStorageService,$timeout,$sce,$controller,$filter){$scope.openMenu=function($mdMenu,ev){$mdMenu.open(ev)},$scope.declaration=function(){$scope.p365Labels=commonResultLabels,$scope.authenticate={},$scope.carVehicleInfo={},$scope.bikeVehicleInfo={},$scope.addressDetails={},$scope.isChartReady=!1,$scope.showDesc=!1,$rootScope.isFromProfessionalJourney=!1,$rootScope.loading=!1,$scope.riskDescSection=wp_path+"buy/common/html/RiskDescription.html",$scope.carPremiumTemplate=wp_path+"buy/common/html/garageModal.html",$scope.bikePremiumTemplate=wp_path+"buy/common/html/bikePremiumTemplate.html",$scope.healthPremiumTemplate=wp_path+"buy/common/html/healthPremiumTemplate.html",$scope.lifePremiumTemplate=wp_path+"buy/common/html/lifePremiumTemplate.html",$scope.healthFeaturesTemplate=wp_path+"buy/common/html/featureBenefitsHealth.html",$scope.lifeFeaturesTemplate=wp_path+"buy/common/html/featureBenefitsLife.html",$rootScope.headerNavigation=wp_path+"buy/common/html/headerNavigationPHP.html",$scope.insuranceAssessmentHTML=wp_path+"buy/common/html/insuranceAssessment.html"},localStorageService.get("quoteUserInfo")&&($scope.quoteUserInfo=localStorageService.get("quoteUserInfo")),$scope.addToCart=function(){$location.path("/PBCarResult")};function getAllProductFeatures(selectedProduct,productFetchStatus){var variableReplaceArray=[],productFeatureJSON={};$rootScope.consolidatedBenefitsList=[],$rootScope.consolidatedSavingsList=[],$rootScope.consolidatedFlexibilityList=[],productFeatureJSON.documentType=$scope.p365Labels.documentType.lifeProduct,productFeatureJSON.carrierId=selectedProduct.carrierId,productFeatureJSON.productId=selectedProduct.productId,productFeatureJSON.businessLineId=1;var selectedCarrierId=selectedProduct.carrierId,selectedProductId=selectedProduct.productId;variableReplaceArray.push({id:"{{sumInsured}}",value:Math.round(selectedProduct.sumInsured)}),variableReplaceArray.push({id:"{{monthlyPayout}}",value:selectedProduct.monthlyPayout}),variableReplaceArray.push({id:"{{policyTerm}}",value:selectedProduct.policyTerm}),productFetchStatus&&RestAPI.invoke($scope.p365Labels.transactionName.getProductFeatures,productFeatureJSON).then(function(callback){var scopeVariableName="productFeaturesList_"+selectedCarrierId+"_"+selectedProductId,productFeatureJSONName="productFeaturesJSON_"+selectedCarrierId+"_"+selectedProductId;$rootScope[productFeatureJSONName]={},$scope[scopeVariableName]=callback.data[0].Features;for(var i=0;i<variableReplaceArray.length;i++)p365Includes($scope[scopeVariableName][1].details,variableReplaceArray[i].id)&&($scope[scopeVariableName][1].details=$scope[scopeVariableName][1].details.replace(variableReplaceArray[i].id,variableReplaceArray[i].value));for(i=0;i<$scope[scopeVariableName].length;i++)$rootScope[productFeatureJSONName][callback.data[0].Features[i].titleForCompareView]=callback.data[0].Features[i].detailsForCompareView;selectedProduct.features=$rootScope[productFeatureJSONName];for(i=0;i<$scope[scopeVariableName].length;i++)"Benefits"==$scope[scopeVariableName][i].featureCategory&&"Y"==$scope[scopeVariableName][i].compareView&&-1===$rootScope.consolidatedBenefitsList.indexOf($scope[scopeVariableName][i].titleForCompareView)&&$rootScope.consolidatedBenefitsList.push($scope[scopeVariableName][i].titleForCompareView),"Savings"==$scope[scopeVariableName][i].featureCategory&&"Y"==$scope[scopeVariableName][i].compareView&&-1===$rootScope.consolidatedSavingsList.indexOf($scope[scopeVariableName][i].titleForCompareView)&&$rootScope.consolidatedSavingsList.push($scope[scopeVariableName][i].titleForCompareView),"Flexibility"==$scope[scopeVariableName][i].featureCategory&&"Y"==$scope[scopeVariableName][i].compareView&&-1===$rootScope.consolidatedFlexibilityList.indexOf($scope[scopeVariableName][i].titleForCompareView)&&$rootScope.consolidatedFlexibilityList.push($scope[scopeVariableName][i].titleForCompareView)})}$scope.minimumFlag=!0,$scope.toggleMinimum=function(){$scope.minimumFlag=!$scope.minimumFlag},$scope.recommendedFlag=!0,$scope.toggleRecommended=function(){$scope.recommendedFlag=!$scope.recommendedFlag},$scope.comprehensiveFlag=!0,$scope.toggleComprehensive=function(){$scope.comprehensiveFlag=!$scope.comprehensiveFlag},$scope.plotChart=function(_chartType,_chartTitle,_xAxisTitles,_yAxisTitle,_data){"bar"==_chartType.toLowerCase()?($scope.chartTitle=_chartTitle,$scope.xaxis=_xAxisTitles,$scope.yAxisTitle=_yAxisTitle,$scope.chartType=_chartType,$scope.items=_data,$scope.isChartReady=!0):"pie"==_chartType.toLowerCase()&&($scope.chartTitle=_chartTitle,$scope.dataItems=_data,$scope.isChartReady=!0)},$scope.hideRiskChartModal=function(){$scope.riskChartModal=!1},$scope.hideInsuranceAssessChartModal=function(){$scope.insuranceAssessChartModal=!1},$scope.showRiskChartModal=function(){$scope.riskChartModal=!0,$scope.isChartReady=!1,$scope.plotChart("pie","",$scope.risk_xAxisTitles,$scope.risk_legends,$scope.risk_series)},$scope.showInsuranceAssessChartModal=function(){$scope.insuranceAssessChartModal=!0},$scope.makeInsuranceAssessmentBlocksReady=function(_insuranceAssessmentResponse){if(null!=_insuranceAssessmentResponse&&void 0!=_insuranceAssessmentResponse&&""!=_insuranceAssessmentResponse){for(let index=0;index<_insuranceAssessmentResponse.length;index++)"Health"==_insuranceAssessmentResponse[index].insuranceLabel?_insuranceAssessmentResponse[index].displayOrder=1:"Life"==_insuranceAssessmentResponse[index].insuranceLabel?_insuranceAssessmentResponse[index].displayOrder=2:"Car"==_insuranceAssessmentResponse[index].insuranceLabel?_insuranceAssessmentResponse[index].displayOrder=3:"Bike"==_insuranceAssessmentResponse[index].insuranceLabel?_insuranceAssessmentResponse[index].displayOrder=4:"Retirement"==_insuranceAssessmentResponse[index].insuranceLabel?_insuranceAssessmentResponse[index].displayOrder=5:"Critical Illness"==_insuranceAssessmentResponse[index].insuranceLabel?_insuranceAssessmentResponse[index].displayOrder=6:_insuranceAssessmentResponse[index].displayOrder=7,"veryLow"==_insuranceAssessmentResponse[index].insCatAsPerRisk?_insuranceAssessmentResponse[index].insCatAsPerRiskDisplayLabel="Very Low":"veryHigh"==_insuranceAssessmentResponse[index].insCatAsPerRisk?_insuranceAssessmentResponse[index].insCatAsPerRiskDisplayLabel="Very High":"medium"==_insuranceAssessmentResponse[index].insCatAsPerRisk?_insuranceAssessmentResponse[index].insCatAsPerRiskDisplayLabel="Medium":"high"==_insuranceAssessmentResponse[index].insCatAsPerRisk?_insuranceAssessmentResponse[index].insCatAsPerRiskDisplayLabel="High":"low"==_insuranceAssessmentResponse[index].insCatAsPerRisk&&(_insuranceAssessmentResponse[index].insCatAsPerRiskDisplayLabel="Low");$scope.insuranceAssessmentRes=_insuranceAssessmentResponse}else null==_insuranceAssessmentResponse?console.error("Unable to make insurance assessment chart ready caused by _insuranceAssessmentResponse is null"):""==_insuranceAssessmentResponse?console.error("Unable to make insurance assessment chart ready caused by _insuranceAssessmentResponse is empty"):void 0==_insuranceAssessmentResponse&&console.error("Unable to make insurance assessment chart ready caused by _insuranceAssessmentResponse is undefined")},$scope.makeRiskProfileChartReady=function(_riskProfileResponse){if(null!=_riskProfileResponse&&void 0!=_riskProfileResponse&&""!=_riskProfileResponse){var _length_one=_riskProfileResponse.length,legends=new Array(_length_one),_series=new Array(_length_one),_collectedData=[];for(let index=0;index<_length_one;index++){const element=_riskProfileResponse[index];legends[index]=element.name;var _length_tow=element.applicableRisk.length,_xAxisTitles=new Array(_length_tow);new Array(_length_tow);for(let j=0;j<_length_tow;j++){const element_two=element.applicableRisk[j];var _dataElement={};_xAxisTitles[j]=element_two.riskLabel,_dataElement.name=element_two.riskLabel,_dataElement.y=element_two.riskValue,"veryLow"==element_two.riskCat?_dataElement.riskPriority="Very Low":"veryHigh"==element_two.riskCat?_dataElement.riskPriority="Very High":"high"==element_two.riskCat?_dataElement.riskPriority="High":"low"==element_two.riskCat?_dataElement.riskPriority="Low":"medium"==element_two.riskCat&&(_dataElement.riskPriority="Medium"),_collectedData.push(_dataElement)}}_series=_collectedData,$scope.risk_xAxisTitles=_xAxisTitles,$scope.risk_series=_series,$scope.risk_legends=legends,$scope.plotChart("pie","",_xAxisTitles,"",_series)}else null==_riskProfileResponse?console.error("Unable to make risk profile chart ready caused by _riskProfileResponse is null"):""==_riskProfileResponse?console.error("Unable to make risk profile chart ready caused by _riskProfileResponse is empty"):void 0==_riskProfileResponse&&console.error("Unable to make risk profile chart ready caused by _riskProfileResponse is undefined")},$scope.findRecommendedRiders=function(_ridersList){if(_ridersList){let len=_ridersList.length;for(let index=0;index<len;index++){const element=_ridersList[index];if("CAR"==element.lob.toUpperCase()){$scope.recommendedCarRiders=[];for(var i=0;i<element.riders.length;i++)"Recommended"==element.riders[i].riderCategory&&$scope.recommendedCarRiders.push(element.riders[i])}else if("BIKE"==element.lob.toUpperCase()){$scope.recommendedBikeRiders=[];for(i=0;i<element.riders.length;i++)"Recommended"==element.riders[i].riderCategory&&$scope.recommendedBikeRiders.push(element.riders[i])}else if("LIFE"==element.lob.toUpperCase()){$scope.recommendedLifeRiders=[];for(i=0;i<element.riders.length;i++)"Recommended"==element.riders[i].riderCategory&&$scope.recommendedLifeRiders.push(element.riders[i])}else if("HEALTH"==element.lob.toUpperCase()){$scope.recommendedHealthRiders=[];for(i=0;i<element.riders.length;i++)"Recommended"==element.riders[i].riderCategory&&$scope.recommendedHealthRiders.push(element.riders[i]);localStorageService.set("healthRecommendedRiders",$scope.recommendedHealthRiders)}}}},$scope.customFilterCar=function(fromJourney){console.log("**** inside customFilterCar function  step 1 ***"),$scope.netPremiumTotalCar=0,$scope.netPremiumAverageCar=0,$scope.netPremiumMaxCar=0,$scope.proffesionalRatingCar=0;for(var i=0;i<$rootScope.carQuoteResult.length;i++)$scope.netPremiumTotalCar+=$rootScope.carQuoteResult[i].premiumRatio,$scope.netPremiumAverageCar=Number(($scope.netPremiumTotalCar/$rootScope.carQuoteResult.length).toFixed(5));for(i=0;i<$scope.carQuoteResult.length;i++)$rootScope.carQuoteResult[i].netPremiumMax=Number(($scope.netPremiumAverageCar/$rootScope.carQuoteResult[i].premiumRatio).toFixed(5)),$rootScope.carQuoteResult[i].netPremiumMax>$scope.netPremiumMaxCar&&($scope.netPremiumMaxCar=$rootScope.carQuoteResult[i].netPremiumMax);for(i=0;i<$rootScope.carQuoteResult.length;i++)$rootScope.carQuoteResult[i].netPremiumMean=Number(($rootScope.carQuoteResult[i].netPremiumMax/$scope.netPremiumMaxCar*5).toFixed(1)),$rootScope.carQuoteResult[i].netPremiumMean||($rootScope.carQuoteResult[i].netPremiumMean=3.5),$rootScope.carQuoteResult[i].proffesionalRating=.3*$rootScope.carQuoteResult[i].netPremiumMean+.2*$rootScope.carQuoteResult[i].garageIndex+.2*$rootScope.carQuoteResult[i].claimIndex+.3*$rootScope.carQuoteResult[i].insurerIndex,$rootScope.carQuoteResult[i].proffesionalRating=$rootScope.carQuoteResult[i].proffesionalRating,console.log("$rootScope.carQuoteResult[i].proffesionalRating ",$rootScope.carQuoteResult[i].proffesionalRating),1==fromJourney&&($rootScope.carQuoteResult[i].proffesionalRating>$scope.proffesionalRatingCar?($scope.proffesionalRatingCar=$rootScope.carQuoteResult[i].proffesionalRating,$scope.professionalResultCar=$rootScope.carQuoteResult[i],localStorageService.set("carProductToBeAddedInCart",$scope.professionalResultCar)):($rootScope.carQuoteResult[i].proffesionalRating?$scope.proffesionalRatingCar=$rootScope.carQuoteResult[i].proffesionalRating:$scope.proffesionalRatingCar="3.5",$scope.professionalResultCar=$rootScope.carQuoteResult[0],localStorageService.set("carProductToBeAddedInCart",$scope.professionalResultCar)))},$scope.customFilterBike=function(fromJourney){$scope.netPremiumTotalBike=0,$scope.netPremiumAverageBike=0,$scope.netPremiumMaxBike=0,$scope.proffesionalRatingBike=0;for(var i=0;i<$rootScope.bikeQuoteResult.length;i++)$scope.netPremiumTotalBike+=$rootScope.bikeQuoteResult[i].premiumRatio,$scope.netPremiumAverageBike=Number(($scope.netPremiumTotalBike/$rootScope.bikeQuoteResult.length).toFixed(5));for(i=0;i<$scope.bikeQuoteResult.length;i++)$rootScope.bikeQuoteResult[i].netPremiumMax=Number(($scope.netPremiumAverageBike/$rootScope.bikeQuoteResult[i].premiumRatio).toFixed(5)),$rootScope.bikeQuoteResult[i].netPremiumMax>$scope.netPremiumMaxBike&&($scope.netPremiumMaxBike=$rootScope.bikeQuoteResult[i].netPremiumMax);for(i=0;i<$rootScope.bikeQuoteResult.length;i++)$rootScope.bikeQuoteResult[i].netPremiumMean=Number(($rootScope.bikeQuoteResult[i].netPremiumMax/$scope.netPremiumMaxBike*5).toFixed(1)),$rootScope.bikeQuoteResult[i].netPremiumMean||($rootScope.bikeQuoteResult[i].netPremiumMean=3.5),$rootScope.bikeQuoteResult[i].proffesionalRating=.5*$rootScope.bikeQuoteResult[i].netPremiumMean+.2*$rootScope.bikeQuoteResult[i].claimIndex+.3*$rootScope.bikeQuoteResult[i].insurerIndex,$rootScope.bikeQuoteResult[i].proffesionalRating=$rootScope.bikeQuoteResult[i].proffesionalRating,1==fromJourney&&$rootScope.bikeQuoteResult[i].proffesionalRating>$scope.proffesionalRatingBike&&($scope.proffesionalRatingBike=$rootScope.bikeQuoteResult[i].proffesionalRating,$scope.professionalResultBike=$rootScope.bikeQuoteResult[i],localStorageService.set("bikeProductToBeAddedInCart",$scope.professionalResultBike))},$scope.customFilterLife=function(fromJourney){$scope.netPremiumTotalLife=0,$scope.netPremiumAverageLife=0,$scope.netPremiumMaxLife=0,$scope.proffesionalRatingLife=0;for(var i=0;i<$rootScope.lifeQuoteResult.length;i++)$scope.netPremiumTotalLife+=$rootScope.lifeQuoteResult[i].premiumRatio,$scope.netPremiumAverageLife=Number(($scope.netPremiumTotalLife/$rootScope.lifeQuoteResult.length).toFixed(5));for(i=0;i<$rootScope.lifeQuoteResult.length;i++)$rootScope.lifeQuoteResult[i].netPremiumMax=Number(($scope.netPremiumAverageLife/$rootScope.lifeQuoteResult[i].premiumRatio).toFixed(5)),$rootScope.lifeQuoteResult[i].netPremiumMax>$scope.netPremiumMaxLife&&($scope.netPremiumMaxLife=$rootScope.lifeQuoteResult[i].netPremiumMax);for(i=0;i<$rootScope.lifeQuoteResult.length;i++)$rootScope.lifeQuoteResult[i].netPremiumMean=Number(($rootScope.lifeQuoteResult[i].netPremiumMax/$scope.netPremiumMaxLife*5).toFixed(1)),$rootScope.lifeQuoteResult[i].proffesionalRating=.4*$rootScope.lifeQuoteResult[i].netPremiumMean+.2*$rootScope.lifeQuoteResult[i].claimIndex+.2*$rootScope.lifeQuoteResult[i].benefitIndex+.2*$rootScope.lifeQuoteResult[i].insurerIndex,1==fromJourney&&$rootScope.lifeQuoteResult[i].proffesionalRating>$scope.proffesionalRatingLife&&($scope.proffesionalRatingLife=$rootScope.lifeQuoteResult[i].proffesionalRating,$scope.professionalResultLife=$rootScope.lifeQuoteResult[i],localStorageService.set("lifeProductToBeAddedInCart",$scope.professionalResultLife))},$scope.customFilterCriticalIllness=function(){$scope.netPremiumTotalCI=0,$scope.netPremiumAverageCI=0,$scope.netPremiumMaxCI=0,$scope.proffesionalRatingCI=0;for(var i=0;i<$rootScope.ciQuoteResult.length;i++)$scope.netPremiumTotalCI+=$rootScope.ciQuoteResult[i].premiumRatio,$scope.netPremiumAverageCI=Number(($scope.netPremiumTotalCI/$rootScope.ciQuoteResult.length).toFixed(5));for(i=0;i<$rootScope.ciQuoteResult.length;i++)$rootScope.ciQuoteResult[i].netPremiumMax=Number(($scope.netPremiumAverageCI/$rootScope.ciQuoteResult[i].premiumRatio).toFixed(5)),$rootScope.ciQuoteResult[i].netPremiumMax>$scope.netPremiumMaxCI&&($scope.netPremiumMaxCI=$rootScope.ciQuoteResult[i].netPremiumMax);for(i=0;i<$rootScope.ciQuoteResult.length;i++)$rootScope.ciQuoteResult[i].netPremiumMean=Number(($rootScope.ciQuoteResult[i].netPremiumMax/$scope.netPremiumMaxCI*5).toFixed(1)),$rootScope.ciQuoteResult[i].proffesionalRating=.4*$rootScope.ciQuoteResult[i].netPremiumMean+.3*$rootScope.ciQuoteResult[i].claimIndex+.3*$rootScope.ciQuoteResult[i].insurerIndex;return $rootScope.ciQuoteResult=$filter("orderBy")($rootScope.ciQuoteResult,"proffesionalRating"),$rootScope.ciQuoteResult=$rootScope.ciQuoteResult,$scope.sortReverse=!0,!0},$scope.customFilterHealth=function(fromJourney){$scope.netPremiumTotalHealth=0,$scope.netPremiumAverageHealth=0,$scope.netPremiumMaxHealth=0,$scope.proffesionalRatingHealth=0;for(var i=0;i<$scope.healthQuoteResult.length;i++)$scope.netPremiumTotalHealth+=$scope.healthQuoteResult[i].premiumRatio,$scope.netPremiumAverageHealth=Number(($scope.netPremiumTotalHealth/$scope.healthQuoteResult.length).toFixed(5));for(i=0;i<$scope.healthQuoteResult.length;i++)$scope.healthQuoteResult[i].netPremiumMax=Number(($scope.netPremiumAverageHealth/$scope.healthQuoteResult[i].premiumRatio).toFixed(5)),$scope.healthQuoteResult[i].netPremiumMax>$scope.netPremiumMaxHealth&&($scope.netPremiumMaxHealth=$scope.healthQuoteResult[i].netPremiumMax);for(i=0;i<$scope.healthQuoteResult.length;i++)$scope.healthQuoteResult[i].netPremiumMean=Number(($scope.healthQuoteResult[i].netPremiumMax/$scope.netPremiumMaxHealth*5).toFixed(1)),$scope.healthQuoteResult[i].proffesionalRating=.3*$scope.healthQuoteResult[i].netPremiumMean+.2*$scope.healthQuoteResult[i].hospitalIndex+.3*$scope.healthQuoteResult[i].benefitIndex+.2*$scope.healthQuoteResult[i].insurerIndex,1==fromJourney&&$rootScope.healthQuoteResult[i].proffesionalRating>$scope.proffesionalRatingHealth&&($scope.proffesionalRatingHealth=$rootScope.healthQuoteResult[i].proffesionalRating,$scope.professionalResultHealth=$rootScope.healthQuoteResult[i],localStorageService.set("healthProductToBeAddedInCart",$scope.professionalResultHealth))},$scope.requestForQuote=function(){$scope.quoteRequest=localStorageService.get("professionalQuoteParams"),$scope.quoteRequest.commonInfo.age>=35?$rootScope.insuredUptoAge=65:$rootScope.insuredUptoAge=$scope.quoteRequest.commonInfo.age+30,RestAPI.invoke("profappmasterservice",$scope.quoteRequest).then(function(callback){if($rootScope.levelTwoQuoteRequests=[],1e3==callback.responseCode){$rootScope.levelTwoQuoteRequests=callback.data[0];var riskProfile=callback.data[1],insuranceAssessment=callback.data[2],recommendedRiders=callback.data[3];$scope.makeInsuranceAssessmentBlocksReady(insuranceAssessment),$scope.makeRiskProfileChartReady(riskProfile),$scope.findRecommendedRiders(recommendedRiders),$scope.riskAndInsuranceProfilePopup=!0,"undefined"!=String($rootScope.levelTwoQuoteResults)&&$rootScope.levelTwoQuoteResults.length>0&&($rootScope.levelTwoQuoteResults.length=0),$rootScope.levelTwoQuoteResults=[],$scope.isGotCarQuotes=!1,$scope.isGotBikeQuotes=!1,$scope.isGotHealthQuotes=!1,$scope.isGotLifeQuotes=!1,$scope.isGotCriticalIllnessQuotes=!1,localStorageService.set("PROF_QUOTE_ID",$rootScope.levelTwoQuoteRequests[0].PROF_QUOTE_ID),localStorageService.set("PROF_QUOTE_ID_ENCRYPTED",$rootScope.levelTwoQuoteRequests[0].encryptedProfQuoteId),localStorageService.set("PROF_QUOTE_ID_ENCRYPTED",$rootScope.levelTwoQuoteRequests[0].encryptedProfQuoteId),1==imauticAutomation&&imatProfessionalLeadQuoteInfo(localStorageService,$scope,"LeadSubmitted"),angular.forEach($rootScope.levelTwoQuoteRequests,function(obj,i){var request={},header={};header.messageId=messageIDVar,header.campaignID=campaignIDVar,header.source=sourceOrigin,header.transactionName="profappgetresult",header.deviceId=deviceIdOrigin,request.header=header,request.body=obj,$scope.healthRequestStatus=0,$scope.lifeRequestStatus=0,$scope.bikeRequestStatus=0,$scope.carRequestStatus=0,$scope.criticalIllnessRequestStatus=0,"car"==obj.lob.toLowerCase()?$scope.carRequestStatus=0:($scope.carRequestStatus=2,$rootScope.carErrorMessage=$sce.trustAsHtml($scope.p365Labels.validationMessages.generalisedMotorErrMsg)),"bike"==obj.lob.toLowerCase()?$scope.bikeRequestStatus=0:($scope.bikeRequestStatus=2,$rootScope.bikeErrorMessage=$sce.trustAsHtml($scope.p365Labels.validationMessages.generalisedMotorErrMsg)),$http({method:"POST",url:getQuoteCalcLink,data:request}).success(function(callback2,status){if("life"==obj.lob.toLowerCase())1e3==callback2.responseCode&&1==callback2.businessLineId?(callback2.lifeQuoteRequest&&($scope.quote={},$scope.quoteParam={},$scope.personalDetails={},$scope.quoteParam=callback2.lifeQuoteRequest.quoteParam,$scope.personalDetails=callback2.lifeQuoteRequest.personalDetails,$scope.quote.quoteParam=$scope.quoteParam,$scope.quote.personalDetails=$scope.personalDetails,localStorageService.set("lifeQuoteInputParamaters",$scope.quote),localStorageService.set("lifePersonalDetails",$scope.personalDetails)),localStorageService.set("selectedBusinessLineId",1),$scope.calculateLifeQuote(callback2,!0),$rootScope.lifeErrorMessage=""):callback2.responseCode==$scope.p365Labels.responseCode.error&&callback2.data?($rootScope.lifeErrorMessage=callback2.data.msg,$scope.lifeRequestStatus=2):($rootScope.lifeErrorMessage=$sce.trustAsHtml($scope.p365Labels.validationMessages.generalisedLifeErrMsg),$scope.lifeRequestStatus=2);else if("health"==obj.lob.toLowerCase())1e3==callback2.responseCode&&4==callback2.businessLineId?(callback2.healthQuoteRequest&&($scope.quote={},$scope.quoteParam={},$scope.personalInfo={},$scope.quote.quoteParam=callback2.healthQuoteRequest.quoteParam,$scope.quote.personalInfo=callback2.healthQuoteRequest.personalInfo,$scope.quote.ratingParam=callback2.healthQuoteRequest.ratingParam,localStorageService.set("healthQuoteInputParamaters",$scope.quote),localStorageService.set("healthQuoteInputParamatersReset",$scope.quote),localStorageService.set("ridersHealthStatus",!1)),localStorageService.set("selectedBusinessLineId",4),$scope.calculateHealthQuote(callback2,!0),$rootScope.healthErrorMessage=""):callback2.responseCode==$scope.p365Labels.responseCode.error&&callback2.data?($rootScope.healthErrorMessage=callback2.data.msg,$scope.healthRequestStatus=2):($rootScope.healthErrorMessage=$sce.trustAsHtml($scope.p365Labels.validationMessages.generalisedMedicalErrMsg),$scope.healthRequestStatus=2);else if("car"==obj.lob.toLowerCase())if("P365RES100"==callback2.responseCode&&3==callback2.businessLineId){if(callback2.carQuoteRequest){if($scope.quote={},$scope.quote.quoteParam={},$scope.vehicleInfo={},$scope.quote.quoteParam.ncb=callback2.carQuoteRequest.quoteParam.ncb,callback2.carQuoteRequest.quoteParam.ownedBy&&($scope.quote.quoteParam.ownedBy=callback2.carQuoteRequest.quoteParam.ownedBy),callback2.carQuoteRequest.quoteParam.policyType&&($scope.quote.quoteParam.policyType=callback2.carQuoteRequest.quoteParam.policyType),callback2.carQuoteRequest.quoteParam.riders&&($scope.quote.quoteParam.riders=callback2.carQuoteRequest.quoteParam.riders),$scope.quoteParam=$scope.quote.quoteParam,$scope.CAR_UNIQUE_QUOTE_ID=callback2.carQuoteRequestQUOTE_ID,$scope.UNIQUE_QUOTE_ID_ENCRYPTED=callback2.carQuoteRequest.encryptedQuoteId,callback2.carQuoteRequest.vehicleInfo.IDV&&($scope.vehicleInfo.IDV=callback2.carQuoteRequest.vehicleInfo.IDV),callback2.carQuoteRequest.vehicleInfo.PreviousPolicyExpiryDate&&($scope.vehicleInfo.PreviousPolicyExpiryDate=callback2.carQuoteRequest.vehicleInfo.PreviousPolicyExpiryDate),callback2.carQuoteRequest.vehicleInfo.RTOCode&&($scope.vehicleInfo.RTOCode=callback2.carQuoteRequest.vehicleInfo.RTOCode),callback2.carQuoteRequest.vehicleInfo.city&&($scope.vehicleInfo.city=callback2.carQuoteRequest.vehicleInfo.city),callback2.carQuoteRequest.vehicleInfo.dateOfRegistration){$scope.vehicleInfo.dateOfRegistration=callback2.carQuoteRequest.vehicleInfo.dateOfRegistration;var carRegistrationYearList=$scope.vehicleInfo.dateOfRegistration.split("/");console.log("carRegistrationYearList in professional journey result is: ",carRegistrationYearList),localStorageService.get("selectedCarDetails")&&($scope.carDetails=localStorageService.get("selectedCarDetails"),$scope.carDetails.regYear=carRegistrationYearList[2],localStorageService.set("selectedCarDetails",$scope.carDetails))}callback2.carQuoteRequest.vehicleInfo.idvOption&&($scope.vehicleInfo.idvOption=callback2.carQuoteRequest.vehicleInfo.idvOption),callback2.carQuoteRequest.vehicleInfo.best_quote_id&&($scope.vehicleInfo.best_quote_id=callback2.carQuoteRequest.vehicleInfo.best_quote_id),callback2.carQuoteRequest.vehicleInfo.previousClaim&&($scope.vehicleInfo.previousClaim=callback2.carQuoteRequest.vehicleInfo.previousClaim),callback2.carQuoteRequest.vehicleInfo.registrationNumber&&($scope.vehicleInfo.registrationNumber=callback2.carQuoteRequest.vehicleInfo.registrationNumber),callback2.carQuoteRequest.vehicleInfo.registrationPlace&&($scope.vehicleInfo.registrationPlace=callback2.carQuoteRequest.vehicleInfo.registrationPlace),callback2.carQuoteRequest.vehicleInfo.state&&($scope.vehicleInfo.state=callback2.carQuoteRequest.vehicleInfo.state),callback2.carQuoteRequest.vehicleInfo.make&&($scope.vehicleInfo.make=callback2.carQuoteRequest.vehicleInfo.make),callback2.carQuoteRequest.vehicleInfo.model&&($scope.vehicleInfo.model=callback2.carQuoteRequest.vehicleInfo.model),callback2.carQuoteRequest.vehicleInfo.variant&&($scope.vehicleInfo.variant=callback2.carQuoteRequest.vehicleInfo.variant.toString()),callback2.carQuoteRequest.vehicleInfo.fuel&&($scope.vehicleInfo.fuel=callback2.carQuoteRequest.vehicleInfo.fuel),callback2.carQuoteRequest.vehicleInfo.cubicCapacity&&($scope.vehicleInfo.cubicCapacity=callback2.carQuoteRequest.vehicleInfo.cubicCapacity),localStorageService.set("carQuoteInputParamaters",$scope.quote)}localStorageService.set("selectedBusinessLineId",3),$scope.calculateCarQuote(callback2,!0),$rootScope.carErrorMessage=""}else callback2.responseCode==$scope.p365Labels.responseCode.error&&callback2.data?($rootScope.carErrorMessage=callback2.data.msg,$scope.carRequestStatus=2):($rootScope.carErrorMessage=$sce.trustAsHtml($scope.p365Labels.validationMessages.generalisedMotorErrMsg),$scope.carRequestStatus=2);else if("bike"==obj.lob.toLowerCase())if("P365RES100"==callback2.responseCode&&2==callback2.businessLineId){if(callback2.bikeQuoteRequest){if($scope.quote={},$scope.quote.vehicleInfo={},$scope.quote.quoteParam={},$scope.quote.vehicleInfo.IDV=callback2.bikeQuoteRequest.vehicleInfo.IDV,$scope.quote.vehicleInfo.PreviousPolicyExpiryDate=callback2.bikeQuoteRequest.vehicleInfo.PreviousPolicyExpiryDate,$scope.quote.vehicleInfo.RTOCode=callback2.bikeQuoteRequest.vehicleInfo.RTOCode,$scope.quote.vehicleInfo.city=callback2.bikeQuoteRequest.vehicleInfo.city,callback2.bikeQuoteRequest.vehicleInfo.dateOfRegistration){$scope.quote.vehicleInfo.dateOfRegistration=callback2.bikeQuoteRequest.vehicleInfo.dateOfRegistration;var bikeRegistrationYearList=$scope.quote.vehicleInfo.dateOfRegistration.split("/");console.log("bikeRegistrationYearList in professional journey result is: ",bikeRegistrationYearList),localStorageService.get("selectedBikeDetails")&&($scope.bikeDetails=localStorageService.get("selectedBikeDetails"),$scope.bikeDetails.regYear=bikeRegistrationYearList[2],localStorageService.set("selectedBikeDetails",$scope.bikeDetails))}$scope.quote.vehicleInfo.idvOption=callback2.bikeQuoteRequest.vehicleInfo.idvOption,$scope.quote.vehicleInfo.best_quote_id=callback2.bikeQuoteRequest.vehicleInfo.best_quote_id,$scope.quote.vehicleInfo.previousClaim=callback2.bikeQuoteRequest.vehicleInfo.previousClaim,$scope.quote.vehicleInfo.registrationNumber=callback2.bikeQuoteRequest.vehicleInfo.registrationNumber,$scope.quote.vehicleInfo.registrationPlace=callback2.bikeQuoteRequest.vehicleInfo.registrationPlace,$scope.quote.vehicleInfo.state=callback2.bikeQuoteRequest.vehicleInfo.state,$scope.quote.vehicleInfo.make=callback2.bikeQuoteRequest.vehicleInfo.make,$scope.quote.vehicleInfo.model=callback2.bikeQuoteRequest.vehicleInfo.model,$scope.quote.vehicleInfo.variant=callback2.bikeQuoteRequest.vehicleInfo.variant.toString(),$scope.quote.quoteParam.ncb=callback2.bikeQuoteRequest.quoteParam.ncb,$scope.quote.quoteParam.ownedBy=callback2.bikeQuoteRequest.quoteParam.ownedBy,$scope.quote.quoteParam.policyType=callback2.bikeQuoteRequest.quoteParam.policyType,callback2.bikeQuoteRequest.quoteParam.riders&&($scope.quote.quoteParam.riders=callback2.bikeQuoteRequest.quoteParam.riders),localStorageService.set("bikeQuoteInputParamaters",$scope.quote)}localStorageService.set("selectedBusinessLineId",2),$scope.calculateBikeQuote(callback2,!0),$rootScope.bikeErrorMessage=""}else callback2.responseCode==$scope.p365Labels.responseCode.error&&callback2.data?($rootScope.bikeErrorMessage=callback2.data.msg,$scope.bikeRequestStatus=2):($rootScope.bikeErrorMessage=$sce.trustAsHtml($scope.p365Labels.validationMessages.generalisedMotorErrMsg),$scope.bikeRequestStatus=2);else"criticalillness"==obj.lob.toLowerCase()&&(1e3==callback2.responseCode&&6==callback2.businessLineId?(callback2.criticalIllnessQuoteRequest&&($scope.quote={},$scope.quoteParam={},$scope.personalDetails={},$scope.quoteParam=callback2.criticalIllnessQuoteRequest.quoteParam,$scope.personalDetails=callback2.criticalIllnessQuoteRequest.personalDetails,$scope.quote.quoteParam=$scope.quoteParam,$scope.quote.personalDetails=$scope.personalDetails,localStorageService.set("criticalIllnessQuoteInputParamaters",$scope.quote),localStorageService.set("criticalIllnessPersonalDetails",$scope.personalDetails)),localStorageService.set("selectedBusinessLineId",6),console.log("requestForQuote() :",callback2),$scope.calculateCriticalIllnessQuote(callback2,!0),$rootScope.criticalIllnessErrorMessage=""):callback2.responseCode==$scope.p365Labels.responseCode.error&&callback2.data?($rootScope.criticalIllnessErrorMessage=callback2.data.msg,$scope.criticalIllnessRequestStatus=2):($rootScope.criticalIllnessErrorMessage=$sce.trustAsHtml($scope.p365Labels.validationMessages.generalisedCIErrMsg),$scope.criticalIllnessRequestStatus=2))})})}else console.error("failure callback : ",callback)}),$scope.updateCarAnnualPremiumRange=function(minPremiumValue,maxPremiumValue){minPremiumValue>maxPremiumValue?($rootScope.minAnnualPremium=maxPremiumValue,$rootScope.maxAnnualPremium=minPremiumValue):($rootScope.minAnnualPremium=minPremiumValue,$rootScope.maxAnnualPremium=maxPremiumValue)},$scope.carErrorMessage=function(errorMsg){!$scope.errorRespCounter||"undefined"!=String($rootScope.carQuoteResult)&&0!=$rootScope.carQuoteResult.length?$rootScope.carQuoteResult.length>0&&($rootScope.instantQuoteSummaryStatus=!0,$rootScope.viewOptionDisabled=!1,$rootScope.tabSelectionStatus=!0,$scope.instantQuoteCarForm=!1,$rootScope.disableCarRegPopup=!1):($scope.errorRespCounter=!1,$scope.updateCarAnnualPremiumRange(1e3,5e3),$rootScope.instantQuoteSummaryStatus=!1,$rootScope.instantQuoteSummaryError=errorMsg,$rootScope.viewOptionDisabled=!0,$rootScope.tabSelectionStatus=!0,$scope.instantQuoteCarForm=!1,$rootScope.disableCarRegPopup=!1),$rootScope.loading=!1},$scope.carTooltipPrepare=function(carResult){var i,resultCarrierId=[],testCarrierId=[];for(i=0;i<carResult.length;i++)if(Number(carResult[i].netPremium)>0){var carrierInfo={};carrierInfo.id=carResult[i].carrierId,carrierInfo.name=carResult[i].insuranceCompany,carrierInfo.annualPremium=carResult[i].netPremium,carrierInfo.claimsRating=carResult[i].insurerIndex,$rootScope.wordPressEnabled&&(carrierInfo.insuredDeclareValue=carResult[i].insuredDeclareValue,carrierInfo.businessLineId="2"),0==p365Includes(testCarrierId,carResult[i].carrierId)&&(resultCarrierId.push(carrierInfo),testCarrierId.push(carResult[i].carrierId))}$rootScope.resultedCarriers=resultCarrierId,$rootScope.resultCarrierId=resultCarrierId,$rootScope.calculatedQuotesLength=2==String(carResult.length).length?String(carResult.length):"0"+String(carResult.length),$rootScope.calculatedRidersLength=2==String(0).length?String(0):"0"+String(0)},$scope.processCarResult=function(){$rootScope.viewOptionDisabled=!1,$rootScope.tabSelectionStatus=!0,$rootScope.modalShown=!1,$rootScope.carQuoteResultCopy=$rootScope.carQuoteResult;for(var minAnnualPremiumValue=$rootScope.carQuoteResult[0].grossPremium,annualPremiumSliderArray=[],j=0;j<$rootScope.carQuoteResult.length;j++){var calculatedDiscAmt=0,discountAmtList=$rootScope.carQuoteResult[j].discountDetails;if("undefined"!=String(discountAmtList)){for(var i=0;i<discountAmtList.length;i++)calculatedDiscAmt+=discountAmtList[i]["com.sutrr.quote.carquotecalc.DiscountDetails"].discountAmount;calculatedDiscAmt+=$rootScope.carQuoteResult[j].grossPremium,annualPremiumSliderArray.push(calculatedDiscAmt)}else annualPremiumSliderArray.push($rootScope.carQuoteResult[j].grossPremium)}annualPremiumSliderArray=$filter("orderBy")(annualPremiumSliderArray),$scope.updateCarAnnualPremiumRange(minAnnualPremiumValue,annualPremiumSliderArray[annualPremiumSliderArray.length-1]),$scope.isGotCarQuotes=!0,localStorageService.get("updateProdcutInCartFlag")&&$scope.customFilterCar(!0),localStorageService.get("carProductToBeAddedInCart")&&($scope.carProductToBeAddedInCart=localStorageService.get("carProductToBeAddedInCart"),localStorageService.get("carDetailsToBeAddedInCart")&&($scope.carDetails=localStorageService.get("carDetailsToBeAddedInCart"),localStorageService.set("selectedCarDetails",$scope.carDetails))),3==localStorageService.get("selectedBusinessLineId")&&$scope.carTooltipPrepare($rootScope.carQuoteResult)},$scope.calculateCarQuote=function(carQuoteResult,quoteIdStatus){$rootScope.carQuoteRequest=[],$rootScope.carQuoteResult=[],$rootScope.carQuoteResultCopy=[],$scope.dataLoaded=!1,carQuoteResult.responseCode==$scope.p365Labels.responseCode.success1?($rootScope.carQuoteResult=[],$scope.dataLoaded=!0,$scope.carResponseCodeList=[],$rootScope.carQuoteRequest=carQuoteResult.data,$scope.carRequestId=carQuoteResult.QUOTE_ID,quoteIdStatus&&localStorageService.set("CAR_UNIQUE_QUOTE_ID",$scope.carRequestId),"undefined"!=String($rootScope.carQuoteResult)&&$rootScope.carQuoteResult.length>0&&($rootScope.carQuoteResult.length=0),angular.forEach($rootScope.carQuoteRequest,function(obj,i){var request={},header={};header.messageId=messageIDVar,header.campaignID=campaignIDVar,header.source=sourceOrigin,header.transactionName=getCarQuoteResult,header.deviceId=deviceIdOrigin,request.header=header,request.body=obj,$http({method:"POST",url:getQuoteCalcLink,data:request}).success(function(callback,status){var carQuoteResponse=JSON.parse(callback);if(carQuoteResponse.QUOTE_ID==$scope.carRequestId&&$scope.carResponseCodeList.push(carQuoteResponse.responseCode),carQuoteResponse.responseCode==$scope.p365Labels.responseCode.success1){for(var i=0;i<$rootScope.carQuoteRequest.length;i++)$rootScope.carQuoteRequest[i].messageId==carQuoteResponse.messageId&&($rootScope.carQuoteResult.push(carQuoteResponse.data.quotes[0]),$rootScope.carQuoteRequest[i].status=1);$scope.processCarResult()}else if(1011==carQuoteResponse.responseCode){$scope.carResponseCodeList.push(carQuoteResponse.responseCode);for(i=0;i<$rootScope.carQuoteRequest.length;i++)$rootScope.carQuoteRequest[i].messageId==carQuoteResponse.messageId&&($rootScope.carQuoteRequest[i].status=2,carQuoteResponse.invalidRiderMessage?($scope.invalidPlanOption=carQuoteResponse.invalidRiderMessage,$rootScope.carQuoteRequest[i].message=$sce.trustAsHtml("<div>We did not get quote from the Insurer. It may be because</b></div><br/><ul class=errorUL><li class=errorPlacementLeft>{{invalidPlanOption}}</li></div>")):$rootScope.carQuoteRequest[i].message=$sce.trustAsHtml($scope.p365Labels.validationMessages.generalisedMotorErrMsg));$scope.processCarResult()}else for(i=0;i<$rootScope.carQuoteRequest.length;i++)$rootScope.carQuoteRequest[i].messageId==carQuoteResponse.messageId&&($rootScope.carQuoteRequest[i].status=2,$rootScope.carQuoteRequest[i].message=$sce.trustAsHtml($scope.p365Labels.validationMessages.generalisedMotorErrMsg))}).error(function(data,status){$scope.carResponseCodeList.push($scope.p365Labels.responseCode.systemError)})}),$scope.carRequestStatus=0,$scope.$watch("carResponseCodeList",function(newValue,oldValue,scope){$scope.carResponseCodeList.length==$rootScope.carQuoteRequest.length&&(p365Includes($scope.carResponseCodeList,$scope.p365Labels.responseCode.success)?($rootScope.loading=!1,$scope.carRequestStatus=1):(p365Includes($scope.carResponseCodeList,$scope.p365Labels.responseCode.quoteNotAvailable),$rootScope.loading=!1,$scope.carRequestStatus=2,$rootScope.carErrorMessage=$sce.trustAsHtml($scope.p365Labels.validationMessages.generalisedMotorErrMsg)))},!0)):($scope.carResponseCodeList=[],"undefined"!=String($rootScope.carQuoteResult)&&$rootScope.carQuoteResult.length>0&&($rootScope.carQuoteResult.length=0),$rootScope.carQuoteResult=[])},$scope.calculateHealthQuote=function(healthQuoteResult,quoteIdStatus){$rootScope.healthQuoteRequest=[],$rootScope.healthQuoteResult=[],$scope.dataLoaded=!1,healthQuoteResult.responseCode==$scope.p365Labels.responseCode.success?($scope.healthResponseCodeList=[],$scope.dataLoaded=!0,$scope.requestId=healthQuoteResult.QUOTE_ID,quoteIdStatus&&localStorageService.set("HEALTH_UNIQUE_QUOTE_ID",$scope.requestId),$rootScope.healthQuoteRequest=healthQuoteResult.data,"undefined"!=String($rootScope.healthQuoteResult)&&$rootScope.healthQuoteResult.length>0&&($rootScope.healthQuoteResult.length=0),angular.forEach($rootScope.healthQuoteRequest,function(obj,i){var request={},header={};header.messageId=messageIDVar,header.campaignID=campaignIDVar,header.source=sourceOrigin,header.transactionName=$scope.p365Labels.transactionName.healthQuoteResult,header.deviceId=deviceIdOrigin,request.header=header,request.body=obj,$http({method:"POST",url:getQuoteCalcLink,data:request}).success(function(callback,status){var healthQuoteResponse=JSON.parse(callback);if(healthQuoteResponse.QUOTE_ID==$scope.requestId)if($scope.healthResponseCodeList.push(healthQuoteResponse.responseCode),healthQuoteResponse.responseCode==$scope.p365Labels.responseCode.success)for(var i=0;i<$rootScope.healthQuoteRequest.length;i++)$rootScope.healthQuoteRequest[i].messageId==healthQuoteResponse.messageId&&(Number(healthQuoteResponse.data.quotes[0].annualPremium>0)&&($rootScope.healthQuoteResult.push(healthQuoteResponse.data.quotes[0]),$scope.processHealthResult()),$rootScope.healthQuoteRequest[i].status=1);else for(i=0;i<$rootScope.healthQuoteRequest.length;i++)$rootScope.healthQuoteRequest[i].messageId==healthQuoteResponse.messageId&&($rootScope.healthQuoteRequest[i].status=2,$rootScope.healthQuoteRequest[i].message=$sce.trustAsHtml($scope.p365Labels.validationMessages.generalisedMedicalErrMsg))}).error(function(data,status){$scope.healthResponseCodeList.push($scope.p365Labels.responseCode.systemError)})}),$scope.healthRequestStatus=0,$scope.$watch("healthResponseCodeList",function(newValue,oldValue,scope){$scope.healthResponseCodeList.length==$rootScope.healthQuoteRequest.length&&(p365Includes($scope.healthResponseCodeList,$scope.p365Labels.responseCode.success)?($rootScope.loading=!1,$scope.healthRequestStatus=1):(p365Includes($scope.healthResponseCodeList,$scope.p365Labels.responseCode.quoteNotAvailable),$rootScope.loading=!1,$scope.healthRequestStatus=2,$rootScope.healthErrorMessage=$sce.trustAsHtml($scope.p365Labels.validationMessages.generalisedMedicalErrMsg)))},!0)):($scope.healthResponseCodeList=[],"undefined"!=String($rootScope.healthQuoteResult)&&$rootScope.healthQuoteResult.length>0&&($rootScope.healthQuoteResult.length=0),$rootScope.healthQuoteResult=[])},$scope.processHealthResult=function(){$rootScope.viewOptionDisabled=!1,$rootScope.tabSelectionStatus=!0,$rootScope.modalShown=!1,$rootScope.loading=!1,$scope.isGotHealthQuotes=!0,localStorageService.get("updateProdcutInCartFlag")&&$scope.customFilterHealth(!0),localStorageService.get("healthProductToBeAddedInCart")&&($scope.healthProductToBeAddedInCart=localStorageService.get("healthProductToBeAddedInCart")),localStorageService.set("healthQuoteCalculationResult",$rootScope.healthQuoteResult)},$scope.tooltipBikePrepare=function(bikeResult){if(null!=bikeResult&&"undefined"!=bikeResult&&bikeResult.length>0){for(var resultCarrierId=[],testCarrierId=[],i=0;i<bikeResult.length;i++){var carrierInfo={};carrierInfo.id=bikeResult[i].carrierId,carrierInfo.name=bikeResult[i].insuranceCompany,0==p365Includes(testCarrierId,bikeResult[i].carrierId)&&(resultCarrierId.push(carrierInfo),testCarrierId.push(bikeResult[i].carrierId))}$rootScope.resultedCarriers=resultCarrierId}},$scope.processBikeResult=function(){$rootScope.viewOptionDisabled=!1,$rootScope.tabSelectionStatus=!0,$rootScope.modalShown=!1,$rootScope.bikeQuoteResultCopy=$rootScope.bikeQuoteResult,$scope.isGotBikeQuotes=!0,localStorageService.get("updateProdcutInCartFlag")&&$scope.customFilterBike(!0),localStorageService.get("bikeProductToBeAddedInCart")&&($scope.bikeProductToBeAddedInCart=localStorageService.get("bikeProductToBeAddedInCart"),localStorageService.get("bikeDetailsToBeAddedInCart")&&($scope.bikeDetails=localStorageService.get("bikeDetailsToBeAddedInCart"),localStorageService.set("selectedBikeDetails",$scope.bikeDetails)))},$scope.calculateBikeQuote=function(bikeQuoteResult,quoteIdStatus){$rootScope.bikeQuoteRequest=[],$rootScope.bikeQuoteResult=[],$rootScope.bikeQuoteResultCopy=[],$scope.dataLoaded=!1,bikeQuoteResult.responseCode==$scope.p365Labels.responseCode.success1?($rootScope.loading=!1,$scope.bikeResponseCodeList=[],$scope.bikeRequestId=bikeQuoteResult.QUOTE_ID,quoteIdStatus&&localStorageService.set("BIKE_UNIQUE_QUOTE_ID",$scope.bikeRequestId),$rootScope.bikeQuoteRequest=bikeQuoteResult.data,"undefined"!=String($rootScope.bikeQuoteResult)&&$rootScope.bikeQuoteResult.length>0&&($rootScope.bikeQuoteResult.length=0),angular.forEach($rootScope.bikeQuoteRequest,function(obj,i){$scope.dataLoaded=!0;var request={},header={};header.messageId=messageIDVar,header.campaignID=campaignIDVar,header.source=sourceOrigin,header.transactionName=$scope.p365Labels.transactionName.bikeQuoteResult,header.deviceId=deviceIdOrigin,request.header=header,request.body=obj,$http({method:"POST",url:getQuoteCalcLink,data:request}).success(function(callback,status){var i,bikeQuoteResponse=JSON.parse(callback);if(bikeQuoteResponse.QUOTE_ID==$scope.bikeRequestId&&$scope.bikeResponseCodeList.push(bikeQuoteResponse.responseCode),bikeQuoteResponse.responseCode==$scope.p365Labels.responseCode.success1){for(i=0;i<$rootScope.bikeQuoteRequest.length;i++)$rootScope.bikeQuoteRequest[i].messageId==bikeQuoteResponse.messageId&&($rootScope.bikeQuoteResult.push(bikeQuoteResponse.data.quotes[0]),$rootScope.bikeQuoteRequest[i].status=1);$scope.processBikeResult()}else for(i=0;i<$rootScope.bikeQuoteRequest.length;i++)$rootScope.bikeQuoteRequest[i].messageId==bikeQuoteResponse.messageId&&($rootScope.bikeQuoteRequest[i].status=2,$rootScope.bikeQuoteRequest[i].message=$sce.trustAsHtml($scope.p365Labels.validationMessages.generalisedMotorErrMsg))}).error(function(data,status){$scope.bikeResponseCodeList.push($scope.p365Labels.responseCode.systemError)})}),$scope.bikeRequestStatus=0,$scope.$watch("bikeResponseCodeList",function(newValue,oldValue,scope){$scope.bikeResponseCodeList.length==$rootScope.bikeQuoteRequest.length&&(p365Includes($scope.bikeResponseCodeList,$scope.p365Labels.responseCode.success)?($rootScope.loading=!1,$scope.bikeRequestStatus=1):(p365Includes($scope.bikeResponseCodeList,$scope.p365Labels.responseCode.quoteNotAvailable),$rootScope.loading=!1,$scope.bikeRequestStatus=2,$rootScope.bikeErrorMessage=$sce.trustAsHtml($scope.p365Labels.validationMessages.generalisedMotorErrMsg)))},!0)):($scope.bikeResponseCodeList=[],"undefined"!=String($rootScope.bikeQuoteResult)&&$rootScope.bikeQuoteResult.length>0&&($rootScope.bikeQuoteResult.length=0))}},$scope.validatePremium=function(data){return Number(data.basicPremium)>0},$scope.processLifeResult=function(){$rootScope.progressBarStatus=!1,$rootScope.viewOptionDisabled=!1,$rootScope.tabSelectionStatus=!0,$rootScope.loading=!1,$scope.isGotLifeQuotes=!0,localStorageService.get("updateProdcutInCartFlag")&&$scope.customFilterLife(!0),localStorageService.get("lifeProductToBeAddedInCart")&&($scope.lifeProductToBeAddedInCart=localStorageService.get("lifeProductToBeAddedInCart"))},$scope.calculateLifeQuote=function(lifeQuoteResult,quoteIdStatus){$rootScope.lifeQuoteRequest=[],lifeQuoteResult.responseCode==$scope.p365Labels.responseCode.success?($rootScope.loading=!1,$scope.dataLoaded=!0,$scope.lifeResponseCodeList=[],$scope.lifeRequestId=lifeQuoteResult.QUOTE_ID,quoteIdStatus&&localStorageService.set("LIFE_UNIQUE_QUOTE_ID",$scope.lifeRequestId),$rootScope.lifeQuoteRequest=lifeQuoteResult.data,"undefined"!=String($rootScope.lifeQuoteResult)&&$rootScope.lifeQuoteResult.length>0&&($rootScope.lifeQuoteResult.length=0),angular.forEach($rootScope.lifeQuoteRequest,function(obj,i){var request={},header={};header.messageId=messageIDVar,header.campaignID=campaignIDVar,header.source=sourceOrigin,header.deviceId=deviceIdOrigin,header.transactionName=$scope.p365Labels.transactionName.lifeQuoteResult,request.header=header,request.body=obj,$http({method:"POST",url:getQuoteCalcLink,data:request}).success(function(callback,status){var lifeQuoteResponse=JSON.parse(callback);if(lifeQuoteResponse.QUOTE_ID==$scope.lifeRequestId)if($scope.lifeResponseCodeList.push(lifeQuoteResponse.responseCode),lifeQuoteResponse.responseCode==$scope.p365Labels.responseCode.success){lifeQuoteResponse.data.quotes[0].dailyPremium=Math.round(lifeQuoteResponse.data.quotes[0].annualPremium/365),lifeQuoteResponse.data.quotes[0].insuranceCompany=JSON.parse(lifeQuoteResponse.data.quotes[0].insuranceCompany);for(var i=0;i<$rootScope.lifeQuoteRequest.length;i++)$rootScope.lifeQuoteRequest[i].messageId==lifeQuoteResponse.messageId&&(Number(lifeQuoteResponse.data.quotes[0].monthlyBasePremium)>0&&($rootScope.lifeQuoteResult.push(lifeQuoteResponse.data.quotes[0]),$scope.processLifeResult()),getAllProductFeatures(lifeQuoteResponse.data.quotes[0],!0),$rootScope.lifeQuoteRequest[i].status=1)}else for(i=0;i<$rootScope.lifeQuoteRequest.length;i++)$rootScope.lifeQuoteRequest[i].messageId==lifeQuoteResponse.messageId&&($rootScope.lifeQuoteRequest[i].status=2,$rootScope.lifeQuoteRequest[i].message=$sce.trustAsHtml($scope.p365Labels.validationMessages.generalisedLifeErrMsg))}).error(function(data,status){$scope.lifeResponseCodeList.push($scope.p365Labels.responseCode.systemError)})}),$scope.lifeRequestStatus=0,$scope.$watch("lifeResponseCodeList",function(newValue,oldValue,scope){$scope.lifeResponseCodeList.length==$rootScope.lifeQuoteRequest.length&&(p365Includes($scope.lifeResponseCodeList,$scope.p365Labels.responseCode.success)?($rootScope.loading=!1,$scope.lifeRequestStatus=1):(p365Includes($scope.lifeResponseCodeList,$scope.p365Labels.responseCode.quoteNotAvailable),$rootScope.loading=!1,$scope.lifeRequestStatus=2,$rootScope.lifeErrorMessage=$sce.trustAsHtml($scope.p365Labels.validationMessages.generalisedLifeErrMsg)))},!0)):($scope.lifeResponseCodeList=[],"undefined"!=String($rootScope.lifeQuoteResult)&&$rootScope.lifeQuoteResult.length>0&&($rootScope.lifeQuoteResult.length=0),$rootScope.lifeQuoteResult=[],$scope.errorMessage($sce.trustAsHtml($scope.p365Labels.validationMessages.generalisedLifeErrMsg)))},$scope.processCriticalIllnessResult=function(){if(console.log("processCriticalIllnessResult() "),$rootScope.progressBarStatus=!1,$rootScope.viewOptionDisabled=!1,$rootScope.tabSelectionStatus=!0,$rootScope.loading=!1,$scope.isGotCriticalIllnessQuotes=!0,localStorageService.get("updateProdcutInCartFlag")&&$scope.customFilterCriticalIllness(!0),localStorageService.get("criticalIllnessProductToBeAddedInCart"))$scope.criticalIllnessProductToBeAddedInCart=localStorageService.get("criticalIllnessProductToBeAddedInCart");else for(var i=0;i<$rootScope.ciQuoteResult.length;i++)$rootScope.ciQuoteResult[i].basicPremium>0&&($scope.criticalIllnessProductToBeAddedInCart=$rootScope.ciQuoteResult[i])},$scope.calculateCriticalIllnessQuote=function(criticalIllnessQuoteResult,quoteIdStatus){console.log("calculateCriticalIllnessQuote() "),$rootScope.ciQuoteRequest=[],criticalIllnessQuoteResult.responseCode==$scope.p365Labels.responseCode.success?($scope.criticalIllnessResponseCodeList=[],$scope.requestId=criticalIllnessQuoteResult.QUOTE_ID,localStorageService.set("CRITICAL_ILLNESS_UNIQUE_QUOTE_ID",$scope.requestId),$rootScope.ciQuoteRequest=criticalIllnessQuoteResult.data,"undefined"!=String($rootScope.ciQuoteResult)&&$rootScope.ciQuoteResult.length>0&&($rootScope.ciQuoteResult.length=0),$rootScope.ciQuoteResult=[],angular.forEach($rootScope.ciQuoteRequest,function(obj,i){var request={},header={};header.messageId=messageIDVar,header.campaignID=campaignIDVar,header.source=sourceOrigin,header.deviceId=deviceIdOrigin,header.browser=browser.name+" V - "+browser.version,header.transactionName=$scope.p365Labels.transactionName.criticalIllnessQuoteResult,request.header=header,request.body=obj,$http({method:"POST",url:getQuoteCalcLink,data:request}).success(function(callback,status){var ciQuoteResponse=JSON.parse(callback);if(ciQuoteResponse.QUOTE_ID==$scope.requestId&&($scope.criticalIllnessResponseCodeList.push(ciQuoteResponse.responseCode),ciQuoteResponse.responseCode==$scope.p365Labels.responseCode.success)){for(var i=0;i<$rootScope.ciQuoteRequest.length;i++)$rootScope.ciQuoteRequest[i].messageId==ciQuoteResponse.messageId&&(ciQuoteResponse.data.quotes[0].dailyPremium=Math.round(ciQuoteResponse.data.quotes[0].annualPremium/365),ciQuoteResponse.data.quotes[0].insuranceCompany=ciQuoteResponse.data.quotes[0].insuranceCompany,$rootScope.ciQuoteResult.push(ciQuoteResponse.data.quotes[0]),$rootScope.ciQuoteRequest[i].status=1);$scope.processCriticalIllnessResult()}}).error(function(data,status){$scope.criticalIllnessResponseCodeList.push($scope.p365Labels.responseCode.systemError)})}),$scope.$watch("criticalIllnessResponseCodeList",function(newValue,oldValue,scope){$scope.criticalIllnessResponseCodeList.length==$rootScope.ciQuoteRequest.length&&(p365Includes($scope.criticalIllnessResponseCodeList,$scope.p365Labels.responseCode.success)?($rootScope.loading=!1,$scope.criticalIllnessRequestStatus=1):(p365Includes($scope.criticalIllnessResponseCodeList,$scope.p365Labels.responseCode.quoteNotAvailable),$rootScope.loading=!1,$scope.criticalIllnessRequestStatus=2,$rootScope.criticalIllnessErrorMessage=$sce.trustAsHtml($scope.p365Labels.validationMessages.generalisedCIErrMsg)))},!0)):($scope.criticalIllnessResponseCodeList=[],"undefined"!=String($rootScope.ciQuoteResult)&&$rootScope.ciQuoteResult.length>0&&($rootScope.ciQuoteResult.length=0),$rootScope.ciQuoteResult=[],$scope.errorMessage(callback.message))},$scope.initialisation=function(){if($rootScope.bikeQuoteResult=$rootScope.carQuoteResult=[],$rootScope.healthQuoteResult=$rootScope.lifeQuoteResult=[],localStorageService.get("commAddressDetails")&&($scope.addressDetails=localStorageService.get("commAddressDetails")),$rootScope.displayResult||($scope.professionalQuoteParams=localStorageService.get("professionalQuoteParams")),$rootScope.bikeQuoteResult){$scope.selectedBike={},localStorageService.get("selectedBikeDetails")&&($scope.bikeDetails=localStorageService.get("selectedBikeDetails")),localStorageService.get("bikeRegAddress")&&($scope.bikeVehicleInfo.registrationPlace=localStorageService.get("bikeRegAddress").rtoName),$scope.bikeDetails&&($scope.selectedBike.displayVehicle=$scope.bikeDetails.displayVehicle);var current_Year=(new Date).getFullYear();localStorageService.get("professionalQuoteParams")&&($scope.bikeVehicleInfo.regYear=localStorageService.get("professionalQuoteParams").bikeInfo.registrationYear,current_Year==$scope.bikeVehicleInfo.regYear?$scope.bikeVehicleInfo.dateOfRegistration="01/01/"+$scope.bikeVehicleInfo.regYear:$scope.bikeVehicleInfo.dateOfRegistration="01/07/"+$scope.bikeVehicleInfo.regYear)}if($rootScope.carQuoteResult){$scope.selectedCar={},$scope.carDetails=localStorageService.get("selectedCarDetails"),localStorageService.get("carRegistrationPlaceUsingIP")&&($scope.carVehicleInfo.registrationPlace=localStorageService.get("carRegistrationPlaceUsingIP").rtoName),$scope.carDetails&&($scope.selectedCar.displayVehicle=$scope.carDetails.displayVehicle);current_Year=(new Date).getFullYear();localStorageService.get("professionalQuoteParams")&&($scope.carVehicleInfo.regYear=localStorageService.get("professionalQuoteParams").carInfo.registrationYear,current_Year==$scope.carVehicleInfo.regYear?$scope.carVehicleInfo.dateOfRegistration="01/01/"+$scope.carVehicleInfo.regYear:$scope.carVehicleInfo.dateOfRegistration="01/07/"+$scope.carVehicleInfo.regYear)}$scope.quoteRequest=localStorageService.get("professionalQuoteParams"),$scope.commonInfo=$scope.quoteRequest.commonInfo,localStorageService.get("selectedBikeDetails")&&($scope.bikeDetails=localStorageService.get("selectedBikeDetails"),$rootScope.showBikeRegAreaStatus=$scope.bikeDetails.showBikeRegAreaStatus),localStorageService.get("selectedCarDetails")&&($scope.carDetails=localStorageService.get("selectedCarDetails"),$rootScope.showCarRegAreaStatus=$scope.carDetails.showCarRegAreaStatus),$rootScope.showCarRegAreaStatus&&$scope.carVehicleInfo.registrationPlace?($scope.quoteRequest.carInfo.registrationNumber&&delete $scope.quoteRequest.carInfo.registrationNumber,$scope.quoteRequest.carInfo.registrationPlace=$scope.carVehicleInfo.registrationPlace):!$rootScope.showCarRegAreaStatus&&$scope.carDetails&&($scope.quoteRequest.carInfo.registrationPlace=$scope.carVehicleInfo.registrationPlace,$scope.carDetails.registrationNumber&&($scope.quoteRequest.carInfo.registrationNumber=$scope.carDetails.registrationNumber.toUpperCase())),$rootScope.showBikeRegAreaStatus&&$scope.bikeVehicleInfo.registrationPlace?($scope.quoteRequest.bikeInfo.registrationNumber&&delete $scope.quoteRequest.bikeInfo.registrationNumber,$scope.quoteRequest.bikeInfo.registrationPlace=$scope.bikeVehicleInfo.registrationPlace):!$rootScope.showBikeRegAreaStatus&&$scope.bikeDetails&&($scope.quoteRequest.bikeInfo.registrationPlace=$scope.bikeVehicleInfo.registrationPlace,$scope.bikeDetails.registrationNumber&&($scope.quoteRequest.bikeInfo.registrationNumber=$scope.bikeDetails.registrationNumber.toUpperCase())),console.log("setting professionalQuoteParams inside initialisation function",$scope.quoteRequest),localStorageService.set("professionalQuoteParams",$scope.quoteRequest),$scope.bikeInfo=$scope.quoteRequest.bikeInfo,$scope.carInfo=$scope.quoteRequest.carInfo,$scope.healthInfo=$scope.quoteRequest.healthInfo},$scope.readProfessionalQuoteID=function(PROF_QUOTE_ID){if(PROF_QUOTE_ID){var _request={};_request.docId=PROF_QUOTE_ID,_request.lob=0,RestAPI.invoke("quoteDataReader",_request).then(function(_professionalQuoteCallback){if(1e3==_professionalQuoteCallback.responseCode){var _professionalQuoteData=_professionalQuoteCallback.data;if(_professionalQuoteData){if($scope.quoteRequest={},$scope.quoteRequest.professionId=_professionalQuoteData.professionId,$scope.quoteRequest.profession=_professionalQuoteData.professionName,$scope.quoteRequest.professionCode=_professionalQuoteData.professionCode,$scope.quoteRequest.currentQuestionCode=_professionalQuoteData.currentQuestionCode,$scope.quoteRequest.bikeInfo=_professionalQuoteData.bikeInfo,$scope.quoteRequest.carInfo=_professionalQuoteData.carInfo,$scope.quoteRequest.healthInfo=_professionalQuoteData.healthInfo,$scope.quoteRequest.commonInfo=_professionalQuoteData.commonInfo,_professionalQuoteData.riskDetails&&_professionalQuoteData.riskDetails.algResponse){var riskProfile=_professionalQuoteData.riskDetails.algResponse.riskAnalysis,insuranceAssessment=_professionalQuoteData.riskDetails.algResponse.insuranceAnalysis,recommendedRiders=_professionalQuoteData.riskDetails.algResponse.productAnalysis;$scope.makeInsuranceAssessmentBlocksReady(insuranceAssessment),$scope.makeRiskProfileChartReady(riskProfile),$scope.findRecommendedRiders(recommendedRiders),null!=$rootScope.sharedProfileString&&void 0!=$rootScope.sharedProfileString&&$rootScope.sharedProfileString.length>0&&("riskProfile"==$rootScope.sharedProfileString?($rootScope.authenticated=!0,$rootScope.alreadyShared=!0,$scope.showRiskChartModal()):"insuranceAssessment"==$rootScope.sharedProfileString&&($rootScope.authenticated=!0,$rootScope.alreadyShared=!0,$scope.showInsuranceAssessChartModal()))}if(localStorageService.set("professionalQuoteParams",$scope.quoteRequest),_professionalQuoteData.lobQuoteId){$scope.healthRequestStatus=0,$scope.lifeRequestStatus=0,$scope.bikeRequestStatus=0,$scope.carRequestStatus=0,$scope.tempLobArray=new Array(_professionalQuoteData.lobQuoteId.length);for(var i=0;i<_professionalQuoteData.lobQuoteId.length;i++)$scope.tempLobArray[i]=_professionalQuoteData.lobQuoteId[i].businessLineId;angular.forEach(_professionalQuoteData.lobQuoteId,function(object,index){var req={};req.docId=object.QUOTE_ID,req.lob=object.businessLineId;var request={},header={};header.messageId=messageIDVar,header.source=sourceOrigin,header.transactionName="quoteDataReader",header.deviceId=deviceIdOrigin,request.header=header,request.body=req,p365Includes($scope.tempLobArray,1)||($scope.lifeRequestStatus=2,$rootScope.lifeErrorMessage=$sce.trustAsHtml($scope.p365Labels.validationMessages.generalisedLifeErrMsg)),p365Includes($scope.tempLobArray,2)||($scope.bikeRequestStatus=2,$rootScope.bikeErrorMessage=$sce.trustAsHtml($scope.p365Labels.validationMessages.generalisedMotorErrMsg)),p365Includes($scope.tempLobArray,3)||($scope.carRequestStatus=2,$rootScope.carErrorMessage=$sce.trustAsHtml($scope.p365Labels.validationMessages.generalisedMotorErrMsg)),p365Includes($scope.tempLobArray,4)||($scope.healthRequestStatus=2,$rootScope.healthErrorMessage=$sce.trustAsHtml($scope.p365Labels.validationMessages.generalisedMedicalErrMsg)),p365Includes($scope.tempLobArray,6)||($scope.criticalIllnessRequestStatus=2,$rootScope.criticalIllnessErrorMessage=$sce.trustAsHtml($scope.p365Labels.validationMessages.generalisedCIErrMsg)),$http({method:"POST",url:getQuoteCalcLink,data:request}).success(function(callback,status){if((callback=JSON.parse(callback)).data)if(3==callback.data.businessLineId)localStorageService.set("CAR_UNIQUE_QUOTE_ID",req.docId),$rootScope.carQuoteResult=callback.data.carQuoteResponse,$rootScope.carQuoteResult?($scope.isGotCarQuotes=!0,$rootScope.selectedCarrierIdForCar&&$rootScope.selectedProductIdForCar?angular.forEach($rootScope.carQuoteResult,function(result,index){$rootScope.selectedCarrierIdForCar==result.carrierId&&$rootScope.selectedProductIdForCar==result.productId&&(localStorageService.set("carProductToBeAddedInCart",result),$scope.carProductToBeAddedInCart=result,localStorageService.get("carDetailsToBeAddedInCart")&&($scope.carDetails=localStorageService.get("carDetailsToBeAddedInCart"),localStorageService.set("selectedCarDetails",$scope.carDetails))),$scope.customFilterCar(!1)}):($scope.customFilterCar(!0),localStorageService.get("carProductToBeAddedInCart")&&($scope.carProductToBeAddedInCart=localStorageService.get("carProductToBeAddedInCart"),localStorageService.get("carDetailsToBeAddedInCart")&&($scope.carDetails=localStorageService.get("carDetailsToBeAddedInCart"),localStorageService.set("selectedCarDetails",$scope.carDetails))))):($scope.carRequestStatus=2,$rootScope.carErrorMessage=$sce.trustAsHtml($scope.p365Labels.validationMessages.generalisedMotorErrMsg));else if(2==callback.data.businessLineId)localStorageService.set("BIKE_UNIQUE_QUOTE_ID",req.docId),$rootScope.bikeQuoteResult=callback.data.bikeQuoteResponse,$rootScope.bikeQuoteResult?($scope.isGotBikeQuotes=!0,$rootScope.selectedCarrierIdForBike&&$rootScope.selectedProductIdForBike?angular.forEach($rootScope.bikeQuoteResult,function(result,index){$rootScope.selectedCarrierIdForBike==result.carrierId&&$rootScope.selectedProductIdForBike==result.productId&&(localStorageService.set("bikeProductToBeAddedInCart",result),$scope.bikeProductToBeAddedInCart=result,localStorageService.get("bikeDetailsToBeAddedInCart")&&($scope.bikeDetails=localStorageService.get("bikeDetailsToBeAddedInCart"),localStorageService.set("selectedBikeDetails",$scope.bikeDetails))),$scope.customFilterBike(!1)}):($scope.customFilterBike(!0),localStorageService.get("bikeProductToBeAddedInCart")&&($scope.bikeProductToBeAddedInCart=localStorageService.get("bikeProductToBeAddedInCart"),localStorageService.get("bikeDetailsToBeAddedInCart")&&($scope.bikeDetails=localStorageService.get("bikeDetailsToBeAddedInCart"),localStorageService.set("selectedBikeDetails",$scope.bikeDetails))))):($scope.bikeRequestStatus=2,$rootScope.bikeErrorMessage=$sce.trustAsHtml($scope.p365Labels.validationMessages.generalisedMotorErrMsg));else if(4==callback.data.businessLineId){if(localStorageService.set("HEALTH_UNIQUE_QUOTE_ID",req.docId),$rootScope.healthQuoteResult=callback.data.quoteResponse,localStorageService.get("healthQuoteInputParamaters")){if($scope.quote=localStorageService.get("healthQuoteInputParamaters"),localStorageService.get("professionalQuoteParams")&&($scope.quoteRequest=localStorageService.get("professionalQuoteParams"),$scope.healthInfo=$scope.quoteRequest.healthInfo),localStorageService.get("healthQuoteInputParamaters").personalInfo&&($scope.personalInfo=localStorageService.get("healthQuoteInputParamaters").personalInfo,$scope.personalInfo.selectedFamilyMembers)){$scope.healthInfo.selectedFamilyMembers=[];for(var i=0;i<$scope.personalInfo.selectedFamilyMembers.length;i++)$scope.healthInfo.selectedFamilyMembers.push({dieaseDetails:[],gender:$scope.personalInfo.selectedFamilyMembers[i].gender,dob:$scope.personalInfo.selectedFamilyMembers[i].dob,display:$scope.personalInfo.selectedFamilyMembers[i].display,existSince:$scope.personalInfo.selectedFamilyMembers[i].existSince,id:$scope.personalInfo.selectedFamilyMembers[i].id,salutation:$scope.personalInfo.selectedFamilyMembers[i].salutation,relationship:$scope.personalInfo.selectedFamilyMembers[i].relationship,age:$scope.personalInfo.selectedFamilyMembers[i].age,existSinceError:$scope.personalInfo.selectedFamilyMembers[i].existSinceError,status:$scope.personalInfo.selectedFamilyMembers[i].status,relation:$scope.personalInfo.selectedFamilyMembers[i].relation})}$scope.quote&&($scope.commonInfo=$scope.quoteRequest.commonInfo,"M"==$scope.quote.quoteParam.selfGender&&"Male"==$scope.quote.quoteParam.selfGender?$scope.commonInfo.gender="Male":$scope.commonInfo.gender="Female",$scope.quoteRequest.commonInfo=$scope.commonInfo,$scope.quoteRequest.healthInfo=$scope.healthInfo,localStorageService.set("professionalQuoteParams",$scope.quoteRequest))}$rootScope.healthQuoteResult?($scope.isGotHealthQuotes=!0,$rootScope.selectedCarrierIdForHealth&&$rootScope.selectedProductIdForHealth&&$rootScope.selectedChildPlanIdForHealth?angular.forEach($rootScope.healthQuoteResult,function(result,index){$rootScope.selectedCarrierIdForHealth==result.carrierId&&$rootScope.selectedProductIdForHealth==result.planId&&$rootScope.selectedChildPlanIdForHealth==result.childPlanId&&(localStorageService.set("healthProductToBeAddedInCart",result),$scope.healthProductToBeAddedInCart=result),$scope.customFilterHealth(!1)}):$rootScope.selectedCarrierIdForHealth&&$rootScope.selectedProductIdForHealth?angular.forEach($rootScope.healthQuoteResult,function(result,index){$rootScope.selectedCarrierIdForHealth==result.carrierId&&$rootScope.selectedProductIdForHealth==result.planId&&(localStorageService.set("healthProductToBeAddedInCart",result),$scope.healthProductToBeAddedInCart=result),$scope.customFilterHealth(!1)}):($scope.customFilterHealth(!0),localStorageService.get("healthProductToBeAddedInCart")&&($scope.healthProductToBeAddedInCart=localStorageService.get("healthProductToBeAddedInCart")))):($scope.healthRequestStatus=2,$rootScope.healthErrorMessage=$sce.trustAsHtml($scope.p365Labels.validationMessages.generalisedMedicalErrMsg))}else 1==callback.data.businessLineId?(localStorageService.set("LIFE_UNIQUE_QUOTE_ID",req.docId),$rootScope.lifeQuoteResult=callback.data.lifeQuoteResponse,$scope.personalDetails=localStorageService.get("lifePersonalDetails"),$scope.personalDetails&&$scope.personalDetails.maturityAge&&($rootScope.insuredUptoAge=$scope.personalDetails.maturityAge),localStorageService.get("lifeQuoteInputParamaters")&&($scope.quote=localStorageService.get("lifeQuoteInputParamaters"),localStorageService.get("professionalQuoteParams")&&($scope.quoteRequest=localStorageService.get("professionalQuoteParams"),$scope.quote&&($scope.commonInfo=$scope.quoteRequest.commonInfo,"M"==$scope.quote.quoteParam.gender?$scope.commonInfo.gender="Male":$scope.commonInfo.gender="Female","Y"==$scope.quote.quoteParam.tobacoAdicted?$scope.commonInfo.smoking=!0:$scope.commonInfo.smoking=!1,$scope.commonInfo.age=$scope.quote.quoteParam.age,$scope.quoteRequest.commonInfo=$scope.commonInfo,localStorageService.set("professionalQuoteParams",$scope.quoteRequest)))),$rootScope.lifeQuoteResult?($scope.isGotLifeQuotes=!0,$rootScope.selectedCarrierIdForLife&&$rootScope.selectedProductIdForLife?angular.forEach($rootScope.lifeQuoteResult,function(result,index){$rootScope.selectedCarrierIdForLife==result.carrierId&&$rootScope.selectedProductIdForLife==result.productId&&(localStorageService.set("lifeProductToBeAddedInCart",result),$scope.lifeProductToBeAddedInCart=result),$scope.customFilterLife(!1)}):($scope.customFilterLife(!0),localStorageService.get("lifeProductToBeAddedInCart")&&($scope.lifeProductToBeAddedInCart=localStorageService.get("lifeProductToBeAddedInCart")))):($scope.lifeRequestStatus=2,$rootScope.lifeErrorMessage=$sce.trustAsHtml($scope.p365Labels.validationMessages.generalisedLifeErrMsg))):6==callback.data.businessLineId&&(localStorageService.set("CRITICAL_ILLNESS_UNIQUE_QUOTE_ID",req.docId),$rootScope.ciQuoteResult=callback.data.criticalIllnessQuoteResponse,$scope.personalDetails=localStorageService.get("criticalIllnessPersonalDetails"),$scope.personalDetails&&$scope.personalDetails.maturityAge&&($rootScope.insuredUptoAge=$scope.personalDetails.maturityAge),localStorageService.get("criticalIllnessQuoteInputParamaters")&&($scope.quote=localStorageService.get("criticalIllnessQuoteInputParamaters"),localStorageService.get("professionalQuoteParams")&&($scope.quoteRequest=localStorageService.get("professionalQuoteParams"),$scope.quote&&($scope.commonInfo=$scope.quoteRequest.commonInfo,"M"==$scope.quote.quoteParam.gender?$scope.commonInfo.gender="Male":$scope.commonInfo.gender="Female","Y"==$scope.quote.quoteParam.tobacoAdicted?$scope.commonInfo.smoking=!0:$scope.commonInfo.smoking=!1,$scope.commonInfo.age=$scope.quote.quoteParam.age,$scope.quoteRequest.commonInfo=$scope.commonInfo,localStorageService.set("professionalQuoteParams",$scope.quoteRequest)))),$rootScope.ciQuoteResult?($scope.isGotCriticalIllnessQuotes=!0,$rootScope.selectedCarrierIdForCriticalIllness&&$rootScope.selectedProductIdForCriticalIllness?angular.forEach($rootScope.ciQuoteResult,function(result,index){$rootScope.selectedCarrierIdForCriticalIllness==result.carrierId&&$rootScope.selectedProductIdForCriticalIllness==result.productId&&(localStorageService.set("criticalIllnessProductToBeAddedInCart",result),$scope.criticalIllnessProductToBeAddedInCart=result),console.log("step-1"),$scope.customFilterCriticalIllness(!1)}):(console.log("step-2"),$scope.customFilterCriticalIllness(!0),localStorageService.get("criticalIllnessProductToBeAddedInCart")&&($scope.criticalIllnessProductToBeAddedInCart=localStorageService.get("criticalIllnessProductToBeAddedInCart")))):($scope.criticalIllnessRequestStatus=2,$rootScope.criticalIllnessErrorMessage=$sce.trustAsHtml($scope.p365Labels.validationMessages.generalisedCIErrMsg)))})})}}else console.error("Somthing went wrong with professional quotes.")}else console.error("Somthing went wrong with professional quotes.")})}else console.error("Not able to process request with unknown argument.")},$scope.init=function(){$http.get(wp_path+"ApplicationLabels.json").then(function(response){localStorageService.set("applicationLabels",response.data),$scope.selectedBusinessLineId=localStorageService.get("selectedBusinessLineId"),$scope.globalLabel=response.data.globalLabels,$scope.p365Labels=commonResultLabels,$scope.declaration(),$scope.initialisation(),$rootScope.isFromLeadForm?($rootScope.isFromLeadForm=!1,$scope.requestForQuote()):localStorageService.get("PROF_QUOTE_ID")?$scope.readProfessionalQuoteID(localStorageService.get("PROF_QUOTE_ID")):$scope.requestForQuote()})},$scope.init(),$scope.editJourneyDetailsWithSlideKey=function(_slideKey){"confirmation"==_slideKey&&($rootScope.editProfile=!0),"carRTO"==_slideKey&&($rootScope.editCarDetails=!0),"bikeRTO"==_slideKey&&($rootScope.editBikeDetails=!0),"familyDetails"==_slideKey&&($rootScope.editFamilyDetails=!0),$location.path("/professionalJourney")},$scope.addProductToCart=function(_product,_lob){if($rootScope.loading=!0,"CAR"==_lob.toUpperCase()){localStorageService.set("carProductToBeAddedInCart",_product);var carDetailsCopy=angular.copy($scope.carDetails),carVehicleInfoCopy=angular.copy($scope.carVehicleInfo),carInfoCopy=angular.copy($scope.carInfo);localStorageService.set("carDetailsCopy",carDetailsCopy),localStorageService.set("carVehicleInfoCopy",carVehicleInfoCopy),localStorageService.set("carInfoCopy",carInfoCopy)}else if("BIKE"==_lob.toUpperCase()){localStorageService.set("bikeProductToBeAddedInCart",_product);var bikeDetailsCopy=angular.copy($scope.bikeDetails),bikeVehicleInfoCopy=angular.copy($scope.bikeVehicleInfo),bikeInfoCopy=angular.copy($scope.bikeInfo);localStorageService.set("bikeDetailsCopy",bikeDetailsCopy),localStorageService.set("bikeVehicleInfoCopy",bikeVehicleInfoCopy),localStorageService.set("bikeInfoCopy",bikeInfoCopy)}else"HEALTH"==_lob.toUpperCase()?localStorageService.set("healthProductToBeAddedInCart",_product):"LIFE"==_lob.toUpperCase()&&localStorageService.set("lifeProductToBeAddedInCart",_product);$scope.editInputs(_lob,!0)},$scope.editInputs=function(lob,_addToCartStatus){_addToCartStatus=_addToCartStatus||!1,$rootScope.isFromProfessionalJourney=!0,$rootScope.isProfessionalJourneySelected=!0,$rootScope.showRecommendedRider=!0,$rootScope.loading=!0;var request={};if("BIKE"==lob.toUpperCase()||"CAR"==lob.toUpperCase()){var todayDate=new Date,formatedTodaysDate=("0"+(todayDate.getMonth()+1).toString()).substr(-2)+"/"+("0"+todayDate.getDate().toString()).substr(-2)+"/"+todayDate.getFullYear().toString();getPolicyStatusList(formatedTodaysDate),$scope.ncbList=ncbListGeneric,$scope.policyStatusList=policyStatusListGeneric,"BIKE"==lob.toUpperCase()?($scope.bikeInsuranceTypes=bikeInsuranceTypeGeneric,request.docId=localStorageService.get("BIKE_UNIQUE_QUOTE_ID")):($scope.carInsuranceTypes=carInsuranceTypeGeneric,request.docId=localStorageService.get("CAR_UNIQUE_QUOTE_ID"))}else"HEALTH"==lob.toUpperCase()?request.docId=localStorageService.get("HEALTH_UNIQUE_QUOTE_ID"):"LIFE"==lob.toUpperCase()?request.docId=localStorageService.get("LIFE_UNIQUE_QUOTE_ID"):"CRITCALILLNESS"==lob.toUpperCase()&&(request.docId=localStorageService.get("CRITICAL_ILLNESS_UNIQUE_QUOTE_ID"));request.LOB=localStorageService.get("selectedBusinessLineId"),RestAPI.invoke("quoteDataReader",request).then(function(callback){if(1e3==callback.responseCode)if($scope.selectedBusinessLineId=callback.data.businessLineId,2==$scope.selectedBusinessLineId){if($scope.quote={},$scope.bikeResponse=callback.data,$scope.quoteParam=$scope.bikeResponse.bikeQuoteRequest.quoteParam,$scope.quote=$scope.bikeResponse.bikeQuoteRequest,$scope.quote.quoteParam=$scope.bikeResponse.bikeQuoteRequest.quoteParam,$scope.BIKE_UNIQUE_QUOTE_ID=$scope.bikeResponse.QUOTE_ID,$scope.vehicleInfo=$scope.bikeResponse.bikeQuoteRequest.vehicleInfo,$scope.quote.vehicleInfo=$scope.vehicleInfo,$scope.selectedBusinessLineId=$scope.bikeResponse.businessLineId,$rootScope.selectedBusinessLineId=$scope.selectedBusinessLineId,$rootScope.bikeQuoteResult=$scope.bikeResponse.bikeQuoteResponse,$scope.bikeDetails.policyStatus=$scope.policyStatusList[2],$scope.vehicleInfo.dateOfRegistration){var bikeRegistrationYearList=$scope.vehicleInfo.dateOfRegistration.split("/");localStorageService.get("selectedBikeDetails")&&($scope.bikeDetails=localStorageService.get("selectedBikeDetails"),$scope.bikeDetails.regYear=bikeRegistrationYearList[2],localStorageService.set("selectedBikeDetails",$scope.bikeDetails))}for(i=0;i<$scope.bikeInsuranceTypes.length;i++)if($scope.quoteParam.policyType==$scope.bikeInsuranceTypes[i].value){$scope.bikeDetails.insuranceType=$scope.bikeInsuranceTypes[i];break}for(i=0;i<$scope.ncbList.length;i++)if($scope.quoteParam.ncb==$scope.ncbList[i].value){$scope.bikeDetails.ncb=$scope.ncbList[i];break}setTimeout(function(){getRiderList(RestAPI,$scope.p365Labels.documentType.riderList,$scope.p365Labels.documentType.bike,$scope.p365Labels.request.findAppConfig,function(addOnCoverForBike){if(localStorageService.set("ridersCarStatus",!0),localStorageService.set("BikePACoverDetails",$scope.BikePACoverDetails),localStorageService.set("BIKE_UNIQUE_QUOTE_ID",$scope.BIKE_UNIQUE_QUOTE_ID),1==$scope.bikeDetails.idvOption&&localStorageService.set("BIKE_IDV_QUOTE_ID",$scope.BIKE_UNIQUE_QUOTE_ID),localStorageService.set("bikeQuoteInputParamaters",$scope.quote),$scope.recommendedBikeRiders)for(let i=0;i<addOnCoverForBike.length;i++)for(let j=0;j<$scope.recommendedBikeRiders.length;j++)addOnCoverForBike[i].riderId==$scope.recommendedBikeRiders[j].riderId&&(addOnCoverForBike[i].isRecommended=!0);localStorageService.set("addOnCoverListForBike",addOnCoverForBike),localStorageService.set("selectedBikeDetails",$scope.bikeDetails),localStorageService.set("selectedBusinessLineId",$scope.selectedBusinessLineId),_addToCartStatus?$location.path("/PBBikeResult"):$location.path("/bikeResult")})},100)}else if(4==$scope.selectedBusinessLineId){$scope.quote={},$scope.selectedFamilyArray=[],$scope.selectedDisease={},$scope.diseaseList={},$scope.selectedDisease.diseaseList=[],$scope.selectedFeatures=[],$rootScope.healthQuoteResult=[];var item={};$scope.hospitalisationLimit={},$scope.isDiseased=!1,$scope.healthResponse=callback.data,$scope.quote=$scope.healthResponse.quoteRequest,$scope.quote.quoteParam=$scope.healthResponse.quoteRequest.quoteParam,$scope.quote.personalInfo=$scope.healthResponse.quoteRequest.personalInfo,$scope.selectedArea=$scope.healthResponse.quoteRequest.personalInfo.displayArea,$scope.selectedBusinessLineId=$scope.healthResponse.businessLineId,$scope.selectedFamilyArray=$scope.quote.personalInfo.selectedFamilyMembers;for(var i=0;i<$scope.healthResponse.quoteResponse.length;i++)Number($scope.healthResponse.quoteResponse[i].basicPremium>0)&&$rootScope.healthQuoteResult.push($scope.healthResponse.quoteResponse[i]);$rootScope.selectedBusinessLineId=$scope.selectedBusinessLineId,$scope.quote.personalInfo.pincode&&(item.pincode=$scope.quote.personalInfo.pincode),$scope.quote.personalInfo.city&&(item.district=$scope.quote.personalInfo.city),item.displayArea=$scope.quote.personalInfo.displayArea,item.state=$scope.quote.personalInfo.state,"Yes"==$scope.quote.personalInfo.preDiseaseStatus&&($scope.isDiseased=!0),$scope.hospitalisationLimit.minHosLimit=$scope.quote.personalInfo.minHospitalisationLimit,$scope.hospitalisationLimit.maxHosLimit=$scope.quote.personalInfo.maxHospitalisationLimit,localStorageService.get("selectedDisease")&&($scope.selectedDisease=localStorageService.get("selectedDisease")),localStorageService.set("healthQuoteInputParamaters",$scope.quote),localStorageService.set("selectedArea",$scope.selectedArea),localStorageService.set("selectedBusinessLineId",$scope.selectedBusinessLineId),localStorageService.set("selectedFamilyArray",$scope.selectedFamilyArray),localStorageService.set("isDiseasedForHealth",$scope.isDiseased),localStorageService.set("userGeoDetails",item),localStorageService.set("selectedDisease",$scope.selectedDisease),localStorageService.set("healthQuoteInputParamatersReset",$scope.quote),localStorageService.set("selectedAreaReset",$scope.selectedArea),localStorageService.set("selectedFamilyArrayReset",$scope.selectedFamilyArray),localStorageService.set("isDiseasedForHealth",$scope.isDiseased),localStorageService.set("selectedDiseaseReset",$scope.selectedDisease),getListFromDB(RestAPI,"","Disease",$scope.p365Labels.request.findAppConfig,function(callback){if(callback.responseCode==$scope.p365Labels.responseCode.success){$scope.diseaseList=[],$scope.diseaseList=callback.data;for(var i=0;i<$scope.diseaseList.length;i++)$scope.diseaseList[i].familyList=[];for(i=0;i<$scope.selectedFamilyArray.length;i++)if($scope.dieaseDetails=[],$scope.selectedFamilyArray[i].dieaseDetails)for(var j=0;j<$scope.selectedFamilyArray[i].dieaseDetails.length;j++)for(var k=0;k<$scope.diseaseList.length;k++)$scope.selectedFamilyArray[i].dieaseDetails[j].dieaseCode==$scope.diseaseList[k].diseaseId&&($scope.selectedFamilyArray[i].label=$scope.selectedFamilyArray[i].relation,$scope.selectedFamilyArray[i].display=$scope.selectedFamilyArray[i].relation,$scope.diseaseList[k].familyList.push($scope.selectedFamilyArray[i]));localStorageService.set("diseaseList",$scope.diseaseList),localStorageService.set("diseaseListReset",$scope.diseaseList),getListFromDB(RestAPI,"",$scope.p365Labels.documentType.hospitalizationLimit,$scope.p365Labels.request.findAppConfig,function(hospitalizationLimitList){if(hospitalizationLimitList.responseCode==$scope.p365Labels.responseCode.success){localStorageService.set("hospitalizationLimitList",hospitalizationLimitList.data),localStorageService.set("hospitalizationLimitListReset",hospitalizationLimitList.data);for(var i=0;i<hospitalizationLimitList.data.length;i++)if(hospitalizationLimitList.data[i].minHosLimit<=$scope.quote.personalInfo.hospitalisationLimit&&hospitalizationLimitList.data[i].maxHosLimit>$scope.quote.personalInfo.hospitalisationLimit){$scope.hospitalisationLimit=hospitalizationLimitList.data[i];break}localStorageService.set("hospitalisationLimitVal",$scope.hospitalisationLimit),localStorageService.set("hospitalisationLimitValReset",$scope.hospitalisationLimit)}$scope.p365Labels.documentType.instantQuoteScreen,localStorageService.get("selectedBusinessLineId");var documentId=$scope.p365Labels.documentType.hospitalDetails+"-"+$scope.quote.personalInfo.pincode;getDocUsingId(RestAPI,documentId,function(hospitalList){null!=hospitalList&&"undefined"!=String(hospitalList)?(localStorageService.set("hospitalList",hospitalList.hospitalDetails),$scope.hospitalList=hospitalList.hospitalDetails):(localStorageService.set("hospitalList",void 0),$scope.hospitalList=""),_addToCartStatus?$location.path("/PBHealthResult"):$location.path("/healthResult")})})}else $rootScope.P365Alert("Policies365",$scope.p365Labels.validationMessages.generalisedErrMsg,"Ok")})}else if(3==$scope.selectedBusinessLineId){if($scope.carResponse=callback.data,$scope.CAR_UNIQUE_QUOTE_ID=callback.data.carQuoteRequest.QUOTE_ID,$scope.quoteParam=callback.data.carQuoteRequest.quoteParam,$scope.quote=callback.data.carQuoteRequest,$scope.quote.quoteParam=callback.data.carQuoteRequest.quoteParam,$scope.vehicleInfo=callback.data.carQuoteRequest.vehicleInfo,$scope.quote.vehicleInfo=$scope.vehicleInfo,$rootScope.selectedBusinessLineId=$scope.selectedBusinessLineId,$scope.carDetails.policyStatus=$scope.policyStatusList[2],$scope.vehicleInfo.dateOfRegistration){var carRegistrationYearList=$scope.vehicleInfo.dateOfRegistration.split("/");localStorageService.get("selectedCarDetails")&&($scope.carDetails=localStorageService.get("selectedCarDetails"),$scope.carDetails.regYear=carRegistrationYearList[2],localStorageService.set("selectedCarDetails",$scope.carDetails))}for(i=0;i<$scope.carInsuranceTypes.length;i++)if($scope.quoteParam.policyType==$scope.carInsuranceTypes[i].value){$scope.carDetails.insuranceType=$scope.carInsuranceTypes[i];break}for(i=0;i<$scope.ncbList.length;i++)if($scope.quoteParam.ncb==$scope.ncbList[i].value){$scope.carDetails.ncb=$scope.ncbList[i];break}setTimeout(function(){getRiderList(RestAPI,$scope.p365Labels.documentType.riderList,$scope.p365Labels.documentType.car,$scope.p365Labels.request.findAppConfig,function(addOnCoverForCar){if($scope.recommendedCarRiders)for(let i=0;i<addOnCoverForCar.length;i++)for(let j=0;j<$scope.recommendedCarRiders.length;j++)addOnCoverForCar[i].riderId==$scope.recommendedCarRiders[j].riderId&&(addOnCoverForCar[i].isRecommended=!0);localStorageService.set("addOnCoverListForCar",addOnCoverForCar),localStorageService.set("ridersCarStatus",!0),localStorageService.set("CAR_UNIQUE_QUOTE_ID",$scope.CAR_UNIQUE_QUOTE_ID),1==$scope.carDetails.idvOption&&localStorageService.set("car_best_quote_id",$scope.CAR_UNIQUE_QUOTE_ID),localStorageService.set("carQuoteInputParamaters",$scope.quote),localStorageService.set("selectedCarDetails",$scope.carDetails),localStorageService.set("selectedBusinessLineId",$scope.selectedBusinessLineId),_addToCartStatus?$location.path("/PBCarResult"):$location.path("/carResult")})},100)}else 1==$scope.selectedBusinessLineId?($scope.quote={},$scope.personalDetails={},$scope.lifeResponse=callback.data,$scope.quote=$scope.lifeResponse.lifeQuoteRequest,$scope.quote.quoteParam=$scope.lifeResponse.lifeQuoteRequest.quoteParam,$scope.quote.personalDetails=$scope.lifeResponse.lifeQuoteRequest.personalDetails,$scope.personalDetails=$scope.quote.personalDetails,$scope.LIFE_UNIQUE_QUOTE_ID=$scope.lifeResponse.QUOTE_ID,$rootScope.lifeQuoteResult=$scope.lifeResponse.lifeQuoteResponse,$rootScope.selectedBusinessLineId=$scope.lifeResponse.businessLineId,setTimeout(function(){getRiderList(RestAPI,$scope.p365Labels.documentType.riderList,$scope.p365Labels.documentType.life,$scope.p365Labels.request.findAppConfig,function(addOnCoverForLife){localStorageService.set("addOnCoverForLife",addOnCoverForLife),getDocUsingId(RestAPI,$scope.p365Labels.common.ridersDocInDB,function(carrierDetails){$rootScope.carrierDetails=carrierDetails;var carrierRiderList=angular.copy($rootScope.carrierDetails);if($scope.recommendedLifeRiders)for(let i=0;i<addOnCoverForLife.length;i++)for(let j=0;j<$scope.recommendedLifeRiders.length;j++)addOnCoverForLife[i].riderId==$scope.recommendedLifeRiders[j].riderId&&(addOnCoverForLife[i].isRecommended=!0);$rootScope.carrierDetails=angular.copy(carrierRiderList);for(var j=0;j<$rootScope.carrierDetails.riderList.length;j++)for(var i=0;i<$rootScope.lifeQuoteResult.length;i++)$rootScope.carrierDetails.riderList[j].carrierId==$rootScope.lifeQuoteResult[i].carrierId&&$rootScope.carrierDetails.riderList[j].productId==$rootScope.lifeQuoteResult[i].productId&&($rootScope.lifeQuoteResult[i].riders=$rootScope.carrierDetails.riderList[j].riders);for(i=0;i<$rootScope.lifeQuoteResult.length;i++)for(var k=0;k<$rootScope.lifeQuoteResult[i].riderList.length;k++)for(var l=0;l<$rootScope.lifeQuoteResult[i].riders.length;l++)if($rootScope.lifeQuoteResult[i].riderList[k].riderId==$rootScope.lifeQuoteResult[i].riders[l].riderId){$rootScope.lifeQuoteResult[i].riders[l]=$rootScope.lifeQuoteResult[i].riderList[k];break}for(i=0;i<$rootScope.lifeQuoteResult.length;i++)for(var m=0;m<$rootScope.lifeQuoteResult[i].riders.length;m++)"At Additional Cost"==$rootScope.lifeQuoteResult[i].riders[m].riderType?($rootScope.lifeQuoteResult[i].riders[m].riderImgPath="additionalCost",$rootScope.lifeQuoteResult[i].riders[m].riderTooltipName="Additional Cost"):"Not Available"==$rootScope.lifeQuoteResult[i].riders[m].riderType?($rootScope.lifeQuoteResult[i].riders[m].riderImgPath="notAvailable",$rootScope.lifeQuoteResult[i].riders[m].riderTooltipName="Not Available"):"Included"==$rootScope.lifeQuoteResult[i].riders[m].riderType&&($rootScope.lifeQuoteResult[i].riders[m].riderImgPath="included",$rootScope.lifeQuoteResult[i].riders[m].riderTooltipName="Included");localStorageService.set("addOnCoverForLife",addOnCoverForLife),localStorageService.set("lifeQuoteInputParamaters",$scope.quote),localStorageService.set("lifePersonalDetails",$scope.personalDetails),localStorageService.set("selectedBusinessLineId",$scope.lifeResponse.businessLineId),localStorageService.set("LIFE_UNIQUE_QUOTE_ID",$scope.LIFE_UNIQUE_QUOTE_ID),_addToCartStatus?$location.path("/PBLifeResult"):$location.path("/lifeResult")})})},100)):6==$scope.selectedBusinessLineId&&($scope.quote={},$scope.personalDetails={},$scope.criticalIllnessResponse=callback.data,$scope.quote=$scope.criticalIllnessResponse.criticalIllnessQuoteRequest,$scope.quote.quoteParam=$scope.criticalIllnessResponse.criticalIllnessQuoteRequest.quoteParam,$scope.quote.personalDetails=$scope.criticalIllnessResponse.criticalIllnessQuoteRequest.personalDetails,$scope.personalDetails=$scope.quote.personalDetails,$scope.CRITICAL_ILLNESS_UNIQUE_QUOTE_ID=$scope.criticalIllnessResponse.QUOTE_ID,$rootScope.ciQuoteResult=$scope.criticalIllnessResponse.criticalIllnessQuoteResponse,$rootScope.selectedBusinessLineId=$scope.criticalIllnessResponse.businessLineId,localStorageService.set("criticalIllnessQuoteInputParamaters",$scope.quote),localStorageService.set("criticalIllnessPersonalDetails",$scope.personalDetails),localStorageService.set("selectedBusinessLineId",$scope.criticalIllnessResponse.businessLineId),localStorageService.set("CRITICAL_ILLNESS_UNIQUE_QUOTE_ID",$scope.CRITICAL_ILLNESS_UNIQUE_QUOTE_ID),_addToCartStatus?$location.path("/PBLifeResult"):$location.path("/criticalIllnessResult"))})},$scope.openHealthPopup=function(selectedTab){$scope.healthParam=localStorageService.get("healthQuoteInputParamaters"),$rootScope.selectedTabHealth=selectedTab,setTimeout(function(){$scope.filterPincode=$scope.healthParam.personalInfo.pincode,$scope.filterCity=$scope.healthParam.personalInfo.city;for(var splitStr=$scope.healthParam.personalInfo.city.toLowerCase().split(" "),i=0;i<splitStr.length;i++)splitStr[i]=splitStr[i].charAt(0).toUpperCase()+splitStr[i].substring(1);var cityFormatted=splitStr.join(" ");getListFromDB(RestAPI,cityFormatted,"cashlessHospital",$scope.p365Labels.request.findAppConfig,function(hospitalList){hospitalList.responseCode==$scope.p365Labels.responseCode.success&&($scope.hospitalList=hospitalList.data,localStorageService.set("hospitalList",hospitalList.data))}),$scope.premiumModalHealth=!$scope.premiumModalHealth},100)},$scope.hidePremiumModalHealth=function(){$scope.premiumModalHealth=!1},$scope.openLifePopup=function(selectedTab){$rootScope.selectedTabLife=selectedTab,$scope.premiumModalLife=!$scope.premiumModalLife},$scope.hidePremiumModalLife=function(){$scope.premiumModalLife=!1},$scope.openBikePopup=function(selectedTab){$rootScope.selectedTabBike=selectedTab,$scope.premiumModalBike=!$scope.premiumModalBike},$scope.hidePremiumModalBike=function(){$scope.premiumModalBike=!1},$scope.openCarPopup=function(selectedTab){$scope.garageList={},localStorageService.get("carQuoteInputParamaters")&&($scope.garageList.city=localStorageService.get("carQuoteInputParamaters").vehicleInfo.city,$scope.garageList.variantId=localStorageService.get("carQuoteInputParamaters").vehicleInfo.variantId,$scope.garageList.regisCode=localStorageService.get("carQuoteInputParamaters").vehicleInfo.RTOCode),RestAPI.invoke($scope.p365Labels.transactionName.getGarageDetails,$scope.garageList).then(function(callback){if(callback.responseCode==$scope.p365Labels.responseCode.success){var garageResponse=callback;null!=garageResponse&&"undefined"!=String(garageResponse)?(localStorageService.set("garageDetails",garageResponse.data),$scope.garageDetails=garageResponse.data,$rootScope.selectedTabCar=selectedTab,$scope.premiumModalCar=!$scope.premiumModalCar):localStorageService.set("garageDetails",void 0)}else localStorageService.set("garageDetails",void 0)})},$scope.garageDataCheck=function(selCarrierID){var returnGarageDataCheck=!1;if($scope.garageDetails)for(var i=0;i<$scope.garageDetails.length;i++)$scope.garageDetails[i].carrierId==selCarrierID&&(returnGarageDataCheck=!0);return returnGarageDataCheck},$scope.getProductFeatures=function(selectedProduct,productFetchStatus){var variableReplaceArray=[],productFeatureJSON={};1==lob?productFeatureJSON.documentType="LifeProduct":6==lob&&(productFeatureJSON.documentType="CriticalIllnessProduct"),productFeatureJSON.carrierId=selectedProduct.carrierId,productFeatureJSON.productId=selectedProduct.productId,productFeatureJSON.businessLineId=1,variableReplaceArray.push({id:"{{sumInsured}}",value:Math.round(selectedProduct.sumInsured)}),variableReplaceArray.push({id:"{{monthlyPayout}}",value:selectedProduct.monthlyPayout}),variableReplaceArray.push({id:"{{policyTerm}}",value:selectedProduct.policyTerm}),productFetchStatus&&RestAPI.invoke("getProductFeatures",productFeatureJSON).then(function(callback){getDocUsingId(RestAPI,$scope.p365Labels.common.ridersDocInDB,function(carrierDetails){$rootScope.carrierDetails=carrierDetails;for(var i=0;i<$rootScope.carrierDetails.brochureList.length;i++)selectedProduct.carrierId==$rootScope.carrierDetails.brochureList[i].carrierId&&($scope.brochureUrl=wp_path+$rootScope.carrierDetails.brochureList[i].brochureUrl)}),$scope.productFeaturesList=callback.data[0].Features;for(var j=0;j<$scope.productFeaturesList.length;j++)for(var i=0;i<variableReplaceArray.length;i++)p365Includes($scope.productFeaturesList[j].details.toString(),variableReplaceArray[i].id)&&($scope.productFeaturesList[j].details=$scope.productFeaturesList[j].details.replace(variableReplaceArray[i].id,variableReplaceArray[i].value))}),$scope.modelBeneFeatureLife=!0},$scope.modelBeneFeatureLife=!1,$scope.closeBeneFeatureLife=function(){$scope.modelBeneFeatureLife=!1},$scope.healthmodalBeneFeature=!1,$scope.viewBeneFeature=function(selectedData){$scope.healthmodalBeneFeature=!0,$scope.beneFeatures=selectedData},$scope.closeBeneFeatureHealth=function(){$scope.healthmodalBeneFeature=!1};var googleMapURL="https://www.google.co.in/maps/search/";$scope.openMap=function(garage){$scope.searchKey=googleMapURL+""+garage.repairerName+","+garage.pincode,window.open($scope.searchKey,"_blank")},$scope.openMapHospital=function(hos){$scope.searchKeyHospital=googleMapURL+""+hos.hospitalName+","+hos.pincode,window.open($scope.searchKeyHospital,"_blank")},$scope.hidePremiumModalCar=function(){$scope.premiumModalCar=!1},$scope.hideEmailModal=function(){$scope.emailSuccessPopup=!1},$scope.shareProfile=function(profileToBeShared,funcType){if(localStorageService.get("quoteUserInfo")&&($scope.quoteUserInfo=localStorageService.get("quoteUserInfo")),1==imauticAutomation)"SHARERISKPROFILE"===funcType&&imatProfessionalLeadQuoteInfo(localStorageService,$scope,"ShareRiskProfile"),"SHAREINSURANCEPROFILE"===funcType&&imatProfessionalLeadQuoteInfo(localStorageService,$scope,"ShareInsuranceProfile");else{var request={};localStorageService.get("PROF_QUOTE_ID"),$scope.quoteUserInfo.emailId;localStorageService.get("PROF_QUOTE_ID_ENCRYPTED")&&($scope.encryptedProfessionalQuote_Id=localStorageService.get("PROF_QUOTE_ID_ENCRYPTED")),$scope.encryptedLOB=0,$scope.encryptedEmail=$scope.quoteUserInfo.emailId,request.funcType=funcType,request.isBCCRequired="Y",request.username=$scope.quoteUserInfo.emailId,$scope.quoteUserInfo.mobileNumber&&(request.mobileNumber=$scope.quoteUserInfo.mobileNumber),request.paramMap={},request.paramMap.docId=String($scope.encryptedProfessionalQuote_Id),request.paramMap.LOB=String($scope.encryptedLOB),request.paramMap.userId=String($scope.encryptedEmail),request.paramMap.firstName=$scope.quoteUserInfo.firstName,request.paramMap.helplineNumber="(022) 68284343";var body={};null!=profileToBeShared&&void 0!=profileToBeShared&&profileToBeShared.length>0?body.longURL="riskProfile"==profileToBeShared||"insuranceAssessment"==profileToBeShared?shareProfessionalQuoteLink+request.paramMap.docId+"&LOB="+request.paramMap.LOB+"&userId="+request.paramMap.userId+"&sharedProfile="+profileToBeShared:shareProfessionalQuoteLink+request.paramMap.docId+"&LOB="+request.paramMap.LOB+"&userId="+request.paramMap.userId:body.longURL=shareProfessionalQuoteLink+request.paramMap.docId+"&LOB="+request.paramMap.LOB+"&userId="+request.paramMap.userId,$http({method:"POST",url:getShortURLLink,data:body}).success(function(shortURLResponse){var transactionName="";transactionName="WELCOMEEMAIL"==funcType?"sendWelcomeEmail":sendEmail;var shareQuoteRequest={},header={};header.messageId=messageIDVar,header.campaignID=campaignIDVar,header.source=sourceOrigin,header.transactionName=transactionName,header.deviceId=deviceIdOrigin,shareQuoteRequest.header=header,shareQuoteRequest.body=request,shortURLResponse.responseCode==$scope.p365Labels.responseCode.success?(shortURLResponse.data?(request.paramMap.url=shortURLResponse.data.shortURL,shareQuoteRequest.body=request):(request.paramMap.url=body.longURL,shareQuoteRequest.body=request),$http({method:"POST",url:getQuoteCalcLink,data:shareQuoteRequest}).success(function(callback){callback&&(JSON.parse(JSON.stringify(callback)).responseCode==$scope.p365Labels.responseCode.success?($scope.riskChartModal=!1,$scope.emailSuccessPopup=!0,$scope.shareProfileError="",$scope.insuranceAssessChartModal=!1):$scope.shareProfileError=$scope.p365Labels.errorMessage.shareProfileError)})):(request.paramMap.url=body.longURL,shareQuoteRequest.body=request,$http({method:"POST",url:getQuoteCalcLink,data:shareQuoteRequest}).success(function(callback){JSON.parse(callback).responseCode==$scope.p365Labels.responseCode.success?($scope.riskChartModal=!1,$scope.emailSuccessPopup=!0,$scope.insuranceAssessChartModal=!1,$scope.shareProfileError=""):$scope.shareProfileError=$scope.p365Labels.errorMessage.shareProfileError}))})}$scope.riskChartModal=!1,$scope.emailSuccessPopup=!0,$scope.shareProfileError="",$scope.insuranceAssessChartModal=!1},$scope.sendOTP=function(){if($scope.quoteUserInfo.mobileNumber){var validateAuthParam={paramMap:{}};validateAuthParam.mobileNumber=$scope.quoteUserInfo.mobileNumber,validateAuthParam.funcType=$scope.p365Labels.functionType.otpAuth,validateAuthParam.paramMap.OTP=$scope.p365Labels.functionType.otpGenerate,getDocUsingParam(RestAPI,$scope.p365Labels.transactionName.sendSMS,validateAuthParam,function(createOTP){createOTP.responseCode==$scope.p365Labels.responseCode.success?($scope.createOTPError="",$scope.modalOTPError=!1):createOTP.responseCode==$scope.p365Labels.responseCode.userNotExist?($scope.createOTPError=createOTP.message,$scope.modalOTPError=!0):createOTP.responseCode==$scope.p365Labels.responseCode.blockedMobile?($scope.createOTPError=createOTP.message,$scope.modalOTPError=!0):createOTP.responseCode==$scope.p365Labels.responseCode.mobileInvalidCode?($scope.createOTPError=createOTP.message,$scope.modalOTPError=!0):($scope.createOTPError=$scope.p365Labels.errorMessage.createOTP,$scope.modalOTPError=!0)})}},$scope.resendOTP=function(){if($scope.quoteUserInfo.mobileNumber){var validateAuthParam={paramMap:{}};validateAuthParam.mobileNumber=$scope.quoteUserInfo.mobileNumber,validateAuthParam.funcType=$scope.p365Labels.functionType.otpAuth,validateAuthParam.paramMap.OTP=$scope.p365Labels.functionType.otpGenerate,getDocUsingParam(RestAPI,$scope.p365Labels.transactionName.sendSMS,validateAuthParam,function(createOTP){createOTP.responseCode==$scope.p365Labels.responseCode.success?($scope.createOTPError="",$scope.modalOTPError=!1):createOTP.responseCode==$scope.p365Labels.responseCode.userNotExist?($scope.createOTPError=createOTP.message,$scope.modalOTPError=!0):createOTP.responseCode==$scope.p365Labels.responseCode.blockedMobile?($scope.createOTPError=createOTP.message,$scope.modalOTPError=!0):createOTP.responseCode==$scope.p365Labels.responseCode.mobileInvalidCode?($scope.createOTPError=createOTP.message,$scope.modalOTPError=!0):($scope.createOTPError=$scope.p365Labels.errorMessage.createOTP,$scope.modalOTPError=!0)})}},$scope.hideRiskAndInsuranceProfilePopup=function(){$scope.riskAndInsuranceProfilePopup=!1}}]),angular.module("motor",["CoreComponentApp","LocalStorageModule","ngMessages"]).controller("motorController",["RestAPI","$scope","$rootScope","$location","$http","localStorageService","$timeout","$filter","$anchorScroll","$sce","$window",function(RestAPI,$scope,$rootScope,$location,$http,localStorageService,$timeout,$filter,$anchorScroll,$sce,$window){$scope.declaration=function(){$scope.carVehicleInfo={},$scope.bikeVehicleInfo={},$scope.bikeDetails={},$scope.carDetails={},$scope.bikeInfo={},$scope.carInfo={},$scope.selectedCar={},$scope.selectedBike={},$scope.isCarFound=!0,$scope.isBikeFound=!0,$scope.ncbList=[],$scope.policyStatusList=[]},$scope.initialisation=function(){var todayDate=new Date,formatedTodaysDate=("0"+(todayDate.getMonth()+1).toString()).substr(-2)+"/"+("0"+todayDate.getDate().toString()).substr(-2)+"/"+todayDate.getFullYear().toString();getPolicyStatusList(formatedTodaysDate),$scope.policyStatusList=policyStatusListGeneric;var professionalQuoteCookie=localStorageService.get("professionalQuoteParams"),carDetailsCookie=localStorageService.get("selectedCarDetails");if($scope.carDisplayNames=localStorageService.get("carMakeListDisplay"),carDetailsCookie)$scope.carDetails=carDetailsCookie,$rootScope.showCarRegAreaStatus=carDetailsCookie.showCarRegAreaStatus,$scope.selectedCar.displayVehicle=$scope.carDetails.displayVehicle;else{$scope.carDetails={insuranceType:{type:"Renew Existing Policy",value:"renew"},expiry:20,policyStatusKey:3,maxVehicleAge:15,maxDepreciationRate:.5,showCarRegAreaStatus:!1,idvOption:1,minCompulsoryDeductible:1e3,maxCompulsoryDeductible:2e3};for(var i=0;i<$scope.policyStatusList.length;i++)if($scope.carDetails.policyStatusKey==$scope.policyStatusList[i].key){$scope.carDetails.policyStatus=$scope.policyStatusList[i];break}}if(localStorageService.get("carRegistrationDetails")){var vehicleDetailsCookie=localStorageService.get("carRegistrationDetails");"undefined"!=String(vehicleDetailsCookie.registrationNumber)&&null!=vehicleDetailsCookie.registrationNumber&&($scope.carDetails.registrationNumber=vehicleDetailsCookie.registrationNumber,localStorageService.set("selectedCarDetails",$scope.carDetails))}localStorageService.get("bikeQuoteInputParamaters");var bikeDetailsCookie=localStorageService.get("selectedBikeDetails");if($scope.bikeDisplayNames=localStorageService.get("bikeMakeListDisplay"),bikeDetailsCookie)$scope.bikeDetails=bikeDetailsCookie,$rootScope.showBikeRegAreaStatus=bikeDetailsCookie.showBikeRegAreaStatus,$scope.selectedBike.displayVehicle=$scope.bikeDetails.displayVehicle;else{$scope.bikeDetails={insuranceType:{type:"Renew Existing Policy",value:"renew"},expiry:20,policyStatusKey:3,maxVehicleAge:15,maxDepreciationRate:.5,showBikeRegAreaStatus:!1,idvOption:1,zeroDepreciation:"N"};for(i=0;i<$scope.policyStatusList.length;i++)if($scope.bikeDetails.policyStatusKey==$scope.policyStatusList[i].key){$scope.bikeDetails.policyStatus=$scope.policyStatusList[i];break}}if(localStorageService.get("bikeRegistrationDetails")){vehicleDetailsCookie=localStorageService.get("bikeRegistrationDetails");"undefined"!=String(vehicleDetailsCookie.registrationNumber)&&null!=vehicleDetailsCookie.registrationNumber&&($scope.bikeDetails.registrationNumber=vehicleDetailsCookie.registrationNumber,localStorageService.set("selectedBikeDetails",$scope.bikeDetails))}professionalQuoteCookie?($scope.carInfo=professionalQuoteCookie.carInfo?professionalQuoteCookie.carInfo:{},$scope.bikeInfo=professionalQuoteCookie.bikeInfo?professionalQuoteCookie.bikeInfo:{}):($scope.carInfo={},$scope.bikeInfo={}),$scope.ncbList=ncbListGeneric,$scope.carInsuranceTypes=carInsuranceTypeGeneric,$scope.bikeInsuranceTypes=bikeInsuranceTypeGeneric;for(i=0;i<$scope.ncbList.length;i++)if(25==$scope.ncbList[i].value){$scope.carDetails.ncb=$scope.ncbList[i],$scope.bikeDetails.ncb=$scope.ncbList[i];break}$scope.carDetails.insuranceType={type:"Renew Existing Policy",value:"renew"},$scope.carDetails.maxVehicleAge=15,$scope.carYearList=listRegistrationYear($scope.carDetails.insuranceType.value,$scope.carDetails.maxVehicleAge),$scope.bikeDetails.insuranceType={type:"Renew Existing Policy",value:"renew"},$scope.bikeDetails.maxVehicleAge=15,$scope.bikeYearList=listRegistrationYear($scope.bikeDetails.insuranceType.value,$scope.bikeDetails.maxVehicleAge),localStorageService.get("carRegistrationPlaceUsingIP")?($rootScope.showCarRegAreaStatus=!0,$scope.carVehicleInfo.registrationPlace=localStorageService.get("carRegistrationPlaceUsingIP").rtoName,$scope.showCarDetails=!0):($rootScope.showCarRegAreaStatus=!1,localStorageService.get("carRegistrationDetails")&&($scope.carDetails.registrationNumber=localStorageService.get("carRegistrationDetails").registrationNumber,$scope.showCarDetails=!0)),localStorageService.get("bikeRegistrationPlaceUsingIP")?($rootScope.showBikeRegAreaStatus=!0,$scope.showBikeDetails=!0,$scope.bikeVehicleInfo.registrationPlace=localStorageService.get("bikeRegistrationPlaceUsingIP").rtoName):($rootScope.showBikeRegAreaStatus=!1,localStorageService.get("bikeRegistrationDetails")&&($scope.bikeDetails.registrationNumber=localStorageService.get("bikeRegistrationDetails").registrationNumber,$scope.showBikeDetails=!0))},$scope.init=function(){$scope.declaration(),$scope.initialisation()},$scope.init(),$scope.galleryPopup=function(){setTimeout(function(){$(".clickMetro").css("height","50px"),$(".showMetro").hide(),$scope.$apply()},100),$(".clickMetro").click(function(){$(".showMetro").hide(),$(this).find(".showMetro").show(),$(".thumbnail").removeClass("RToButtonActive"),$(".thumbnail").addClass("RToButton"),$(this).find(".thumbnail").addClass("RToButtonActive");var getHeight=$(this).find(".showMetro").height();$(".clickMetro").css("height","50px"),$(this).css("height",getHeight+50)})},$scope.selectedMetroRTO=function(metrosRTOList){$scope.metros=metrosRTOList,$scope.oldMetroSelected==metrosRTOList?($scope.hideStatus=!0,$scope.oldMetroSelected=makeObjectEmpty($scope.oldMetroSelected,"array"),setTimeout(function(){$(".clickMetro").css("height","50px"),$(".showMetro").hide(),$(".thumbnail").addClass("RToButton")},100)):($scope.hideStatus=!1,$scope.oldMetroSelected=metrosRTOList),$scope.metros.RTODetails.length%3==2?$scope.dummyLength=1:$scope.metros.RTODetails.length%3==1?$scope.dummyLength=2:$scope.dummyLength=0},$scope.toggleCarRegistrationPopup=function(regAreaStatus){$scope.modalCarRegistration=regAreaStatus,$rootScope.showCarRegAreaStatus=regAreaStatus,$scope.carDetails.showCarRegAreaStatus=regAreaStatus,$scope.galleryPopup(),$scope.hideCarModal=function(){$scope.modalCarRegistration=!1}},$scope.toggleBikeRegistrationPopup=function(regAreaStatus){$scope.modalBikeRegistration=regAreaStatus,$rootScope.showBikeRegAreaStatus=regAreaStatus,$scope.bikeDetails.showBikeRegAreaStatus=regAreaStatus,$scope.galleryPopup(),$scope.hideBikeModal=function(){$scope.modalBikeRegistration=!1}},$scope.selectedDisplayCar=function(selectedVariant){if(selectedVariant){typeof selectedVariant==typeof{}?(selectedVariant.variantId&&($scope.carInfo.variantId=selectedVariant.variantId,$scope.carDetails.variantId=selectedVariant.variantId),$scope.carInfo.make=selectedVariant.make,$scope.carInfo.model=selectedVariant.model,$scope.carInfo.variant=selectedVariant.variant,selectedVariant.fuelType&&($scope.carInfo.fuel=selectedVariant.fuelType),selectedVariant.cubicCapacity&&($scope.carInfo.cubicCapacity=selectedVariant.cubicCapacity),$scope.carDetails.displayVehicle=selectedVariant.displayVehicle,$scope.carDetails.variantId=selectedVariant.variantId):($scope.carDetails.displayVehicle=selectedVariant,$scope.carDetails.variantId=selectedVariant.variantId),$scope.isCarFound=!0,localStorageService.set("selectedCarDetails",$scope.carDetails)}},$scope.changeCarRegYear=function(){},$scope.changePolStatusCar=function(){if($scope.carDetails.insuranceType.type==$scope.carInsuranceTypes[1].type?($scope.renewal=!0,$scope.carDetails.policyStatus&&($scope.carInfo.PreviousPolicyExpiryDate=$scope.carDetails.policyStatus.expiryDate)):($scope.renewal=!1,$scope.carInfo.PreviousPolicyExpiryDate=makeObjectEmpty($scope.carInfo.PreviousPolicyExpiryDate,"text")),$scope.carDetails.policyStatus&&(3==$scope.carDetails.policyStatus.key?$scope.carInfo.previousPolicyExpired="N":$scope.carInfo.previousPolicyExpired="Y"),1==$scope.toggleCounter)$location.path()},$scope.changePolStatusBike=function(){if($scope.bikeDetails.insuranceType.type==$scope.bikeInsuranceTypes[1].type?($scope.renewal=!0,$scope.bikeDetails.policyStatus&&($scope.bikeInfo.PreviousPolicyExpiryDate=$scope.bikeDetails.policyStatus.expiryDate)):($scope.renewal=!1,$scope.bikeInfo.PreviousPolicyExpiryDate=makeObjectEmpty($scope.bikeInfo.PreviousPolicyExpiryDate,"text")),$scope.bikeDetails.policyStatus&&(3==$scope.bikeDetails.policyStatus.key?$scope.bikeInfo.previousPolicyExpired="N":$scope.bikeInfo.previousPolicyExpired="Y"),1==$scope.toggleCounter)$location.path()},$scope.changePolStatusCar(),$scope.changePolStatusBike(),$scope.selectedDisplayBike=function(selectedVariant){if(selectedVariant){typeof selectedVariant==typeof{}?(selectedVariant.variantId&&($scope.bikeInfo.variantId=selectedVariant.variantId,$scope.bikeDetails.variantId=selectedVariant.variantId),selectedVariant.make&&selectedVariant.model&&selectedVariant.variant&&($scope.bikeInfo.make=selectedVariant.make,$scope.bikeInfo.model=selectedVariant.model,$scope.bikeInfo.variant=selectedVariant.variant),$scope.bikeDetails.displayVehicle=selectedVariant.displayVehicle):($scope.bikeDetails.displayVehicle=selectedVariant,$scope.bikeDetails.variantId=selectedVariant.variantId),$scope.isBikeFound=!0,localStorageService.set("selectedBikeDetails",$scope.bikeDetails)}},$scope.changeBikeRegYear=function(){},$scope.carStates=$scope.carDisplayNames,$scope.bikeStates=$scope.bikeDisplayNames,$scope.searchCar=null,$scope.searchBike=null,$scope.vehicleSearch=function(query,lob){var filteredVehicle=[];return lob&&(3==lob?angular.forEach($scope.carDisplayNames,function(value){filteredVehicle.length<=20&&value.displayVehicle.toLowerCase().includes(query.toLowerCase())&&filteredVehicle.push(value)}):2==lob&&angular.forEach($scope.bikeDisplayNames,function(value){filteredVehicle.length<=20&&value.displayVehicle.toLowerCase().includes(query.toLowerCase())&&filteredVehicle.push(value)})),filteredVehicle},$scope.getCarRegNumber=function(registrationNumber){if("undefined"!=String(registrationNumber)){var registrationDetails={};if(registrationNumber=registrationNumber.replace(/[^a-zA-Z0-9]/gi,""),$scope.carDetails.registrationNumber=registrationNumber,$rootScope.isregNumber=!1,$scope.isCarFound=!0,$scope.carDetails.engineNumber="",$scope.carDetails.chassisNumber="",$scope.carDetails.displayVehicle="",$scope.carDetails.isregNumberDisabled=!0,localStorageService.set("selectedCarDetails",$scope.carDetails),registrationNumber.trim().match(/^[a-zA-Z]{2}[0-9]{1,2}[a-zA-Z]{0,3}[0-9]{1,4}$/)&&registrationNumber.trim().length<=11&&registrationNumber.trim().length>4){$rootScope.regNumStatus=!1,$scope.fetchingCar=!0,registrationDetails.registrationNumber=registrationNumber,localStorageService.set("carRegistrationDetails",registrationDetails);var request={};request.registrationNumber=registrationNumber.toUpperCase(),request.lob="car",request.requestType="VEHICLERTOREQCONFIG",RestAPI.invoke($scope.globalLabel.transactionName.getVehicleRTODetails,request).then(function(callback){if(callback.responseCode==$scope.globalLabel.responseCode.success)if(callback.data){var vehiclertoDetails=callback.data;if($scope.isCarFound=!0,$scope.showCarDetails=!0,vehiclertoDetails.registrationYear){var selectedRegYear=vehiclertoDetails.registrationYear;$scope.carInfo.registrationYear=selectedRegYear.trim()}else $scope.carInfo.registrationYear="",$scope.isCarFound=!1;vehiclertoDetails.variantId&&($scope.carInfo.variantId=vehiclertoDetails.variantId,$scope.carDetails.variantId=vehiclertoDetails.variantId),vehiclertoDetails.displayVehicle?$scope.selectedCar.displayVehicle=vehiclertoDetails.displayVehicle:($scope.isCarFound=!1,$scope.selectedCar.displayVehicle=""),vehiclertoDetails.vechileIdentificationNumber&&($scope.carDetails.chassisNumber=vehiclertoDetails.vechileIdentificationNumber),vehiclertoDetails.engineNumber&&($scope.carDetails.engineNumber=vehiclertoDetails.engineNumber),$scope.fetchingCar=!1;var regNumber=registrationNumber.trim().slice(0,2)+""+registrationNumber.trim().slice(2,4);$scope.getCarRegPlaceListRTO(regNumber,registrationNumber)}else{$scope.fetchingCar=!1,$scope.isCarFound=!1,$scope.showCarDetails=!0,$scope.selectedCar.displayVehicle="",$scope.carInfo.registrationYear="";regNumber=registrationNumber.trim().slice(0,2)+""+registrationNumber.trim().slice(2,4);$scope.getCarRegPlaceListRTO(regNumber,registrationNumber)}else{$scope.fetchingCar=!1,$scope.isCarFound=!1,$scope.showCarDetails=!0,$scope.selectedCar.displayVehicle="",$scope.carInfo.registrationYear="";regNumber=registrationNumber.trim().slice(0,2)+""+registrationNumber.trim().slice(2,4);$scope.getCarRegPlaceListRTO(regNumber,registrationNumber)}})}else $rootScope.regNumStatus=!0}else $rootScope.regNumStatus=!0},$scope.getRegPlaceList=function(city){return city.indexOf("-")>0&&(city=city.replace("-","")),$http.get(getServiceLink+$scope.globalLabel.documentType.RTODetails+"&q="+city).then(function(response){return JSON.parse(response.data).data})},$scope.onSelectCar=function(item){$scope.modalCarRegistration=!1,$rootScope.showCarRegAreaStatus=!0,$scope.carVehicleInfo.selectedRegistrationObject=item,$scope.showCarDetails=!0,$rootScope.isregNumber=!1,$scope.carDetails.engineNumber="",$scope.carDetails.chassisNumber="",$scope.carDetails.isregNumberDisabled=!1,$scope.carVehicleInfo.registrationNumber="",localStorageService.set("selectedCarDetails",$scope.carDetails);var rtoDetail={};rtoDetail.rtoName=item.display,rtoDetail.rtoCity=item.city,rtoDetail.rtoState=item.state,rtoDetail.rtoStatus=!0,rtoDetail.registrationPlace=item.display,$scope.carInfo.city=item.city,$scope.carInfo.state=item.state,getPincodeFromCity($http,rtoDetail,function(resultedRTOInfo){var getCity;resultedRTOInfo.responseCode==$scope.globalLabel.responseCode.success?(rtoDetail.rtoPincode=resultedRTOInfo.data[0].pincode,localStorageService.get("carRegAddress")?(localStorageService.get("carRegAddress").pincode=rtoDetail.pincode,localStorageService.get("carRegAddress").city=$scope.carVehicleInfo.selectedRegistrationObject.city,localStorageService.get("carRegAddress").state=$scope.carVehicleInfo.selectedRegistrationObject.state):((getCity={}).pincode=rtoDetail.pincode,getCity.city=$scope.carVehicleInfo.selectedRegistrationObject.city,getCity.state=$scope.carVehicleInfo.selectedRegistrationObject.state,localStorageService.set("carRegAddress",getCity))):(rtoDetail.rtoPincode="",localStorageService.get("carRegAddress")?(localStorageService.get("carRegAddress").pincode=rtoDetail.pincode,localStorageService.get("carRegAddress").city=$scope.carVehicleInfo.selectedRegistrationObject.city,localStorageService.get("carRegAddress").state=$scope.carVehicleInfo.selectedRegistrationObject.state):((getCity={}).pincode=rtoDetail.pincode,getCity.city=$scope.carVehicleInfo.selectedRegistrationObject.city,getCity.state=$scope.carVehicleInfo.selectedRegistrationObject.state,localStorageService.set("carRegAddress",getCity)));localStorageService.set("carRegistrationPlaceUsingIP",rtoDetail),$scope.carVehicleInfo.registrationPlace=item.display,$scope.carDetails.registrationNumber=""})},$scope.onSelectBike=function(item){$scope.modalBikeRegistration=!1,$rootScope.showBikeRegAreaStatus=!0,$scope.bikeVehicleInfo.selectedRegistrationObject=item,$scope.showBikeDetails=!0,$rootScope.isregNumber=!1,$scope.bikeDetails.engineNumber="",$scope.bikeDetails.chassisNumber="",$scope.bikeDetails.isregNumberDisabled=!1,$scope.bikeVehicleInfo.registrationNumber="",localStorageService.set("selectedBikeDetails",$scope.bikeDetails);var rtoDetail={};rtoDetail.rtoName=item.display,rtoDetail.rtoCity=item.city,rtoDetail.rtoState=item.state,rtoDetail.rtoStatus=!0,rtoDetail.registrationPlace=item.display,$scope.bikeInfo.city=item.city,$scope.bikeInfo.state=item.state,getPincodeFromCity($http,rtoDetail,function(resultedRTOInfo){var getCity;resultedRTOInfo.responseCode==$scope.globalLabel.responseCode.success?(rtoDetail.rtoPincode=resultedRTOInfo.data[0].pincode,localStorageService.get("bikeRegAddress")?(localStorageService.get("bikeRegAddress").pincode=rtoDetail.pincode,localStorageService.get("bikeRegAddress").city=$scope.bikeVehicleInfo.selectedRegistrationObject.city,localStorageService.get("bikeRegAddress").state=$scope.bikeVehicleInfo.selectedRegistrationObject.state):((getCity={}).pincode=rtoDetail.pincode,getCity.city=$scope.bikeVehicleInfo.selectedRegistrationObject.city,getCity.state=$scope.bikeVehicleInfo.selectedRegistrationObject.state,localStorageService.set("bikeRegAddress",getCity))):(rtoDetail.rtoPincode="",localStorageService.get("bikeRegAddress")?(localStorageService.get("bikeRegAddress").pincode=rtoDetail.pincode,localStorageService.get("bikeRegAddress").city=$scope.bikeVehicleInfo.selectedRegistrationObject.city,localStorageService.get("bikeRegAddress").state=$scope.bikeVehicleInfo.selectedRegistrationObject.state):((getCity={}).pincode=rtoDetail.pincode,getCity.city=$scope.bikeVehicleInfo.selectedRegistrationObject.city,getCity.state=$scope.bikeVehicleInfo.selectedRegistrationObject.state,localStorageService.set("bikeRegAddress",getCity)));localStorageService.set("bikeRegistrationPlaceUsingIP",rtoDetail),$scope.bikeVehicleInfo.registrationPlace=item.display,$scope.bikeDetails.registrationNumber=""})},$scope.getCarRegPlaceListRTO=function(regNumber,registrationNumber){return regNumber.indexOf("-")>0&&(regNumber=regNumber.replace("-","")),$http.get(getServiceLink+$scope.globalLabel.documentType.RTODetails+"&q="+regNumber).then(function(callback){if((callback=JSON.parse(callback.data)).responseCode==$scope.globalLabel.responseCode.success){$scope.carVehicleInfo.selectedRegistrationObject=callback.data[0],$scope.carDetails.registrationNumber=registrationNumber.trim(),localStorageService.set("carRegistrationNumber",registrationNumber.trim());var rtoDetail={};rtoDetail.rtoName=$scope.carVehicleInfo.selectedRegistrationObject.display,rtoDetail.rtoCity=$scope.carVehicleInfo.selectedRegistrationObject.city,rtoDetail.rtoState=$scope.carVehicleInfo.selectedRegistrationObject.state,rtoDetail.rtoObject=callback.data[0],rtoDetail.cityStatus=!0,rtoDetail.rtoStatus=!0,$scope.carInfo.city=$scope.carVehicleInfo.selectedRegistrationObject.city,$scope.carInfo.state=$scope.carVehicleInfo.selectedRegistrationObject.state,getPincodeFromCity($http,rtoDetail,function(resultedRTOInfo){var getCity;resultedRTOInfo.responseCode==$scope.globalLabel.responseCode.success?(rtoDetail.pincode=resultedRTOInfo.data[0].pincode,localStorageService.get("carRegAddress")?(localStorageService.get("carRegAddress").pincode=rtoDetail.pincode,localStorageService.get("carRegAddress").city=$scope.carVehicleInfo.selectedRegistrationObject.city,localStorageService.get("carRegAddress").state=$scope.carVehicleInfo.selectedRegistrationObject.state):((getCity={}).pincode=rtoDetail.pincode,getCity.city=$scope.carVehicleInfo.selectedRegistrationObject.city,getCity.state=$scope.carVehicleInfo.selectedRegistrationObject.state,localStorageService.set("carRegAddress",getCity))):($scope.pincode="",rtoDetail.pincode="",localStorageService.get("carRegAddress")?(localStorageService.get("carRegAddress").pincode=rtoDetail.pincode,localStorageService.get("carRegAddress").city=$scope.carVehicleInfo.selectedRegistrationObject.city,localStorageService.get("carRegAddress").state=$scope.carVehicleInfo.selectedRegistrationObject.state):((getCity={}).pincode=rtoDetail.pincode,getCity.city=$scope.carVehicleInfo.selectedRegistrationObject.city,getCity.state=$scope.carVehicleInfo.selectedRegistrationObject.state,localStorageService.set("carRegAddress",getCity)));localStorageService.set("carRegistrationPlaceUsingIP",rtoDetail),$scope.carVehicleInfo.registrationPlace=rtoDetail.rtoName,localStorageService.set("carDisplayVehicle",$scope.carDetails.displayVehicle)})}else $rootScope.regNumStatus=!0})},$scope.getBikeRegPlaceListRTO=function(regNumber,registrationNumber){return regNumber.indexOf("-")>0&&(regNumber=regNumber.replace("-","")),$http.get(getServiceLink+$scope.globalLabel.documentType.RTODetails+"&q="+regNumber).then(function(callback){if((callback=JSON.parse(callback.data)).responseCode==$scope.globalLabel.responseCode.success){$scope.bikeVehicleInfo.selectedRegistrationObject=callback.data[0],$scope.bikeDetails.registrationNumber=registrationNumber.trim(),localStorageService.set("bikeRegistrationNumber",registrationNumber.trim());var rtoDetail={};rtoDetail.rtoName=$scope.bikeVehicleInfo.selectedRegistrationObject.display,rtoDetail.rtoCity=$scope.bikeVehicleInfo.selectedRegistrationObject.city,rtoDetail.rtoState=$scope.bikeVehicleInfo.selectedRegistrationObject.state,rtoDetail.rtoObject=callback.data[0],rtoDetail.cityStatus=!0,rtoDetail.rtoStatus=!0,$scope.bikeInfo.city=$scope.bikeVehicleInfo.selectedRegistrationObject.city,$scope.bikeInfo.state=$scope.bikeVehicleInfo.selectedRegistrationObject.state,getPincodeFromCity($http,rtoDetail,function(resultedRTOInfo){var getCity;resultedRTOInfo.responseCode==$scope.globalLabel.responseCode.success?(rtoDetail.pincode=resultedRTOInfo.data[0].pincode,localStorageService.get("bikeRegAddress")?(localStorageService.get("bikeRegAddress").pincode=rtoDetail.pincode,localStorageService.get("bikeRegAddress").city=$scope.bikeVehicleInfo.selectedRegistrationObject.city,localStorageService.get("bikeRegAddress").state=$scope.bikeVehicleInfo.selectedRegistrationObject.state):((getCity={}).pincode=rtoDetail.pincode,getCity.city=$scope.bikeVehicleInfo.selectedRegistrationObject.city,getCity.state=$scope.bikeVehicleInfo.selectedRegistrationObject.state,localStorageService.set("bikeRegAddress",getCity))):($scope.pincode="",rtoDetail.pincode="",localStorageService.get("bikeRegAddress")?(localStorageService.get("bikeRegAddress").pincode=rtoDetail.pincode,localStorageService.get("bikeRegAddress").city=$scope.bikeVehicleInfo.selectedRegistrationObject.city,localStorageService.get("bikeRegAddress").state=$scope.bikeVehicleInfo.selectedRegistrationObject.state):((getCity={}).pincode=rtoDetail.pincode,getCity.city=$scope.bikeVehicleInfo.selectedRegistrationObject.city,getCity.state=$scope.bikeVehicleInfo.selectedRegistrationObject.state,localStorageService.set("bikeRegAddress",getCity)));localStorageService.set("bikeRegistrationPlaceUsingIP",rtoDetail),$scope.bikeVehicleInfo.registrationPlace=rtoDetail.rtoName,localStorageService.set("bikeDisplayVehicle",$scope.bikeDetails.displayVehicle)})}else $rootScope.regNumStatus=!0})},$scope.getBikeRegNumber=function(registrationNumber){if("undefined"!=String(registrationNumber)){$scope.fetchingBike=!0;var registrationDetails={};if(registrationNumber=registrationNumber.replace(/[^a-zA-Z0-9]/gi,""),$scope.bikeDetails.registrationNumber=registrationNumber,$rootScope.isregNumber=!1,$scope.isBikeFound=!1,$scope.bikeDetails.engineNumber="",$scope.bikeDetails.chassisNumber="",$scope.bikeDetails.displayVehicle="",$scope.bikeDetails.isregNumberDisabled=!0,localStorageService.set("selectedBikeDetails",$scope.carDetails),registrationNumber.trim().match(/^[a-zA-Z]{2}[0-9]{1,2}[a-zA-Z]{0,3}[0-9]{1,4}$/)&&registrationNumber.trim().length<=11&&registrationNumber.trim().length>4){$rootScope.regNumStatus=!1,$scope.fetchingBike=!0,$scope.isBikeFound=!0,registrationDetails.registrationNumber=registrationNumber,localStorageService.set("bikeRegistrationDetails",registrationDetails),$scope.bikeDetails.registrationNumber=registrationNumber;var request={};request.registrationNumber=registrationNumber.toUpperCase(),request.lob="bike",request.requestType="VEHICLERTOREQCONFIG",RestAPI.invoke($scope.globalLabel.transactionName.getVehicleRTODetails,request).then(function(callback){if(callback.responseCode==$scope.globalLabel.responseCode.success)if(callback.data){var vehiclertoDetails=callback.data;if($scope.isBikeFound=!0,$scope.showBikeDetails=!0,vehiclertoDetails.registrationYear){var selectedRegYear=vehiclertoDetails.registrationYear;$scope.bikeInfo.registrationYear=selectedRegYear.trim()}else $scope.bikeInfo.registrationYear="",$scope.isBikeFound=!1;vehiclertoDetails.variantId&&($scope.bikeInfo.variantId=vehiclertoDetails.variantId,$scope.bikeDetails.variantId=vehiclertoDetails.variantId),vehiclertoDetails.displayVehicle&&($scope.selectedBike.displayVehicle=vehiclertoDetails.displayVehicle),vehicleRTODetails.uMake&&vehicleRTODetails.model&&vehicleRTODetails.variant&&($scope.bikeInfo.make=vehicleRTODetails.uMake,$scope.bikeInfo.model=vehicleRTODetails.model,$scope.bikeInfo.variant=vehicleRTODetails.variant),vehiclertoDetails.vechileIdentificationNumber&&($scope.bikeDetails.chassisNumber=vehiclertoDetails.vechileIdentificationNumber),vehiclertoDetails.engineNumber&&($scope.bikeDetails.engineNumber=vehiclertoDetails.engineNumber),$scope.fetchingBike=!1;var regNumber=registrationNumber.trim().slice(0,2)+""+registrationNumber.trim().slice(2,4);$scope.getBikeRegPlaceListRTO(regNumber,registrationNumber)}else{$scope.fetchingBike=!1,$scope.isBikeFound=!1,$scope.showBikeDetails=!0,$scope.bikeInfo.registrationYear="",$scope.selectedBike.displayVehicle="";regNumber=registrationNumber.trim().slice(0,2)+"-"+registrationNumber.trim().slice(2,4);$scope.getBikeRegPlaceListRTO(regNumber,registrationNumber)}else{$scope.fetchingBike=!1,$scope.isBikeFound=!1,$scope.showBikeDetails=!0,$scope.bikeInfo.registrationYear="",$scope.selectedBike.displayVehicle="";regNumber=registrationNumber.trim().slice(0,2)+"-"+registrationNumber.trim().slice(2,4);$scope.getBikeRegPlaceListRTO(regNumber,registrationNumber)}})}else $rootScope.regNumStatus=!0}else $rootScope.regNumStatus=!0}}]);