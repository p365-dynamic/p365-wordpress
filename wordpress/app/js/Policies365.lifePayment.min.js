"use strict";angular.module("paySuccessLife",["CoreComponentApp","LocalStorageModule","ngMessages"]).controller("paySuccessLifeController",["RestAPI","$scope","$rootScope","$location","$http","localStorageService","$timeout","$sce",function(RestAPI,$scope,$rootScope,$location,$http,localStorageService,$timeout,$sce){agencyPortalEnabled&&($scope.agencyPortalEnabled=agencyPortalEnabled,$scope.rampUniqueId="",localStorageService.get("rampUniqueId")&&($scope.rampUniqueId=JSON.parse(localStorageService.get("rampUniqueId"))),$scope.agencyURL=$rootScope.affilateURL+$scope.rampUniqueId),loadDatbase(function(){$rootScope.modalSurvey=!0,wordPressEnabled?($rootScope.wordPressEnabled=wordPressEnabled,$rootScope.wp_path=wp_path,localStorageService.set("wordPressEnabled",!0)):($rootScope.wp_path="",localStorageService.set("wordPressEnabled",!1)),$scope.p365Labels=lifePolicyLabels,$scope.policies365Details=policies365Details,1==$scope.p365Labels.common.surveySuccess&&($rootScope.modalSurvey=!0),$rootScope.loaderContent={businessLine:"1",header:"Life Insurance",desc:$sce.trustAsHtml($scope.p365Labels.common.proverbBuyProduct)},$rootScope.title=$scope.p365Labels.policies365Title.PaySuccess,$scope.authenticate={},$scope.loading=!0,$scope.showSuccessScreen=!1,$scope.lifeProposeFormDetails=localStorageService.get("lifeProposeFormDetails"),$scope.lifeReponseToken=localStorageService.get("lifeReponseToken"),localStorageService.get("quoteUserInfo")&&($scope.quoteUserInfo=localStorageService.get("quoteUserInfo"),$scope.quoteUserInfo.createLeadStatus=!0,localStorageService.set("quoteUserInfo",$scope.quoteUserInfo),messageIDVar=$scope.quoteUserInfo.messageId);var createLifePolicyParam={transactionStausInfo:{}};createLifePolicyParam.carrierId=$scope.lifeProposeFormDetails.carrierId,createLifePolicyParam.productId=$scope.lifeProposeFormDetails.productId,createLifePolicyParam.businessLineId=localStorageService.get("selectedBusinessLineId"),createLifePolicyParam.transactionStausInfo.transactionStatusCode=1,createLifePolicyParam.transactionStausInfo.proposalId=$scope.lifeReponseToken.proposalId,getDocUsingParam(RestAPI,$scope.globalLabel.transactionName.createLifePolicy,createLifePolicyParam,function(createPolicyDoc){$scope.loading=!1,createPolicyDoc.responseCode==$scope.p365Labels.responseCode.success?($scope.showSuccessScreen=!0,$scope.lifeReponseToken.policyNo=createPolicyDoc.data.policyNo,$scope.proposalDataResponse.bikePolicyResponse.policyNo?1==imauticAutomation&&imatEvent("PaymentGenerated"):1==imauticAutomation&&imatEvent("PaymentSuccess")):($scope.showSuccessScreen=!1,$location.path("/payfailurelife"))}),$scope.viewPolicy=function(){$scope.modalOTP=!0,$scope.authenticateUser(function(authStatus){authStatus&&($scope.modalOTP=!1,$location.path("/dashboard"))})},$scope.closeAuthenticateForm=function(){$scope.modalOTP=!1},$scope.authenticateUser=function(authResp){var authenticateUserParam={};authenticateUserParam.mobileNumber=$scope.lifeProposeFormDetails.proposerDetails.mobileNumber,authenticateUserParam.OTP=Number($scope.authenticate.enteredOTP),getDocUsingParam(RestAPI,$scope.p365Labels.transactionName.validateOTP,authenticateUserParam,function(createOTP){createOTP.responseCode==$scope.p365Labels.responseCode.success?($scope.invalidOTPError="",$scope.modalOTP=!1,authResp(!0)):createOTP.responseCode==$scope.p365Labels.responseCode.noRecordsFound?($scope.invalidOTPError=$scope.p365Labels.validationMessages.invalidOTP,authResp(!1)):createOTP.responseCode==$scope.p365Labels.responseCode.expiredOTP?($scope.invalidOTPError=$scope.p365Labels.validationMessages.expiredOTP,authResp(!1)):($scope.invalidOTPError=$scope.p365Labels.validationMessages.authOTP,authResp(!1))})},$scope.resendOTP=function(){var validateLoginParam={paramMap:{}};validateLoginParam.mobileNumber=$scope.lifeProposeFormDetails.proposerDetails.mobileNumber,validateLoginParam.funcType=$scope.p365Labels.functionType.optAuth,validateLoginParam.paramMap.OTP=$scope.p365Labels.functionType.otpGenerate,getDocUsingParam(RestAPI,$scope.p365Labels.transactionName.sendSMS,validateLoginParam,function(createOTP){createOTP.responseCode==$scope.p365Labels.responseCode.success?$scope.invalidOTPError="":$scope.invalidOTPError=$scope.p365Labels.errorMessage.createOTP})}})}]),angular.module("payFailureLife",["CoreComponentApp","LocalStorageModule"]).controller("payFailureLifeController",["RestAPI","$scope","$rootScope","$location","$http","localStorageService","$timeout","$sce",function(RestAPI,$scope,$rootScope,$location,$http,localStorageService,$timeout,$sce){agencyPortalEnabled&&($scope.agencyPortalEnabled=agencyPortalEnabled,$scope.rampUniqueId="",localStorageService.get("rampUniqueId")&&($scope.rampUniqueId=JSON.parse(localStorageService.get("rampUniqueId"))),$scope.agencyURL=$rootScope.affilateURL+$scope.rampUniqueId),loadDatbase(function(){wordPressEnabled?($rootScope.wordPressEnabled=wordPressEnabled,$rootScope.wp_path=wp_path,localStorageService.set("wordPressEnabled",!0)):($rootScope.wp_path="",localStorageService.set("wordPressEnabled",!1)),$rootScope.modalSurvey=!0,$scope.p365Labels=lifePolicyLabels,1==$scope.p365Labels.common.surveyFailure&&($rootScope.modalSurvey=!0),$rootScope.loaderContent={businessLine:"1",header:"Life Insurance",desc:$sce.trustAsHtml($scope.p365Labels.common.proverbBuyProduct)},$scope.lifeProposeFormDetails=localStorageService.get("lifeProposeFormDetails"),$scope.lifeReponseToken=localStorageService.get("lifeReponseToken"),$scope.quoteUserInfo=localStorageService.get("quoteUserInfo")}),1==imauticAutomation&&imatEvent("PaymentFailure")}]),angular.module("assurancePurchasingStatement",[]).controller("assurancePurchasingStatementController",["$scope",function($scope){}]);