"use strict";angular.module("buyTwoWheeler",["CoreComponentApp","LocalStorageModule","checklist-model","ngMessages"]).controller("buyTwoWheelerController",["$scope","$rootScope","$timeout","RestAPI","localStorageService","$location","$window","$http","$filter","$interval","$sce",function($scope,$rootScope,$timeout,RestAPI,localStorageService,$location,$window,$http,$filter,$interval,$sce){$scope.bikeProposalSectionHTML=wp_path+"buy/bike/html/BikeProposalSection.html",$scope.proposerInfo={},$scope.proposerDetails={},$scope.proposerDetails.communicationAddress={},$scope.vehicleInfo={},$scope.vehicleDetails={},$scope.vehicleDetails.registrationAddress={},$scope.nominationInfo={},$scope.nominationDetails={},$scope.organizationDetails={},$scope.appointeeInfo={},$scope.appointeeDetails={},$scope.insuranceInfo={},$scope.insuranceDetails={},$scope.bikeProposeFormCookieDetails={},$scope.authenticate={},$scope.iposRequest={},$scope.prevPolDetails={},$scope.premiumDetails={},$scope.iposRequest.docId=$location.search().quoteId,$scope.iposRequest.carrierId=$location.search().carrierId;var saveProposal=!1,saveNomineeDetails=!1,savePrevPolicyDetails=!1,savePersonalDetails=!1,isPolicyRenewed=!1,isPrevPolSameAsNew=!1;$scope.redirectForPayment=!1,$scope.proposalId=null,$scope.pucStatus=!0,$scope.submitProposalClicked=!1,$rootScope.customEnvEnabled||($rootScope.customEnvEnabled=customEnvEnabled),$rootScope.baseEnvEnabled||($rootScope.baseEnvEnabled=baseEnvEnabled),pospEnabled&&($scope.pospEnabled=pospEnabled),$scope.screenOneStatus=!0,$scope.screenTwoStatus=!1,$scope.screenThreeStatus=!1,$scope.screenFourStatus=!1,$scope.prevAddressDiv=!1,$scope.prevPolStatusError=!1,$scope.proposalStatusForm=!1,$scope.maritalStatusType=maritalStatusListGeneric,$scope.drivingExpYearsList=drivingExperienceYears,$scope.vehicleDrivenOnList=vehicleDrivenPlaces,$scope.ncbList=buyScreenNcbList,$scope.mileageList=buyScreenMileageList,$scope.vehicleLoanTypes=vehicleLoanTypes,$scope.genderType=genderTypeGeneric,$scope.purchasedLoanStatus=purchasedLoanStatusGeneric,$scope.addressStatus=yesNoStatusGeneric,$scope.policyTypes=policyTypesGeneric,$rootScope.baseEnvEnabled&&!$rootScope.wordPressEnabled&&($rootScope.mainTabsMenu[0].active=!1,$rootScope.mainTabsMenu[1].active=!0),localStorageService.get("professionalQuoteParams")&&localStorageService.get("professionalQuoteParams").commonInfo?$scope.commonInfo=localStorageService.get("professionalQuoteParams").commonInfo:localStorageService.get("quoteUserInfo")&&($scope.commonInfo=localStorageService.get("quoteUserInfo"),$scope.commonInfo.salutation="Female"==$scope.proposerDetails.gender?"Miss":"Mr"),$scope.selectedProductInputParam=localStorageService.get("bikeQuoteInputParamaters"),$scope.proposerDetails.maritalStatus=$scope.maritalStatusType[0].name,$scope.resetCommunicationAddress=function(){"undefined"!=String($scope.proposerDetails.communicationAddress.comDisplayArea)&&0!=$scope.proposerDetails.communicationAddress.comDisplayArea.length||($scope.proposerDetails.communicationAddress.comPincode="",$scope.proposerDetails.communicationAddress.comState="",$scope.proposerDetails.communicationAddress.comCity="",$scope.proposerDetails.communicationAddress.comDoorNo="")},$scope.calculateBikeQuote=function(){RestAPI.invoke($scope.p365Labels.getRequest.quoteBike,$scope.quote).then(function(proposeFormResponse){if($scope.bikeRecalculateQuoteRequest=[],proposeFormResponse.responseCode==$scope.p365Labels.responseCode.success1)$scope.responseRecalculateCodeList=[],$scope.quoteCalcResponse=[],"undefined"!=String($scope.quoteCalcResponse)&&$scope.quoteCalcResponse.length>0&&($scope.quoteCalcResponse.length=0),$scope.selectedProductInputParam.vehicleInfo.registrationNumber&&delete $scope.selectedProductInputParam.vehicleInfo.registrationNumber,localStorageService.set("bikeQuoteInputParamaters",$scope.quote),localStorageService.set("BIKE_UNIQUE_QUOTE_ID",proposeFormResponse.QUOTE_ID),localStorageService.set("BIKE_UNIQUE_QUOTE_ID_ENCRYPTED",proposeFormResponse.encryptedQuoteId),$scope.bikeRecalculateQuoteRequest=proposeFormResponse.data,angular.forEach($scope.bikeRecalculateQuoteRequest,function(obj,i){var request={},header={};header.messageId=messageIDVar,header.campaignID=campaignIDVar,header.source=sourceOrigin,header.transactionName=getBikeQuoteResult,header.deviceId=deviceIdOrigin,request.header=header,request.body=obj,$http({method:"POST",url:getQuoteCalcLink,data:request}).success(function(callback,status){var carQuoteResponse=JSON.parse(callback);if($scope.responseRecalculateCodeList.push(carQuoteResponse.responseCode),carQuoteResponse.responseCode==$scope.p365Labels.responseCode.success1)null!=carQuoteResponse.data&&(console.log("carQuoteResponse.data is :",carQuoteResponse.data),console.log("carQuoteResponse.data.renewalPlan is : ",carQuoteResponse.data.renewalPlan),carQuoteResponse.data.renewalPlan?carQuoteResponse.data.quotes[0].carrierId==$scope.selectedProduct.carrierId&&($scope.loading=!1,angular.copy($scope.selectedProductInputParam,$scope.selectedProductInputParamCopy),$scope.premiumDetails.selectedProductDetails=carQuoteResponse.data.quotes[0],$scope.selectedProduct=carQuoteResponse.data.quotes[0],console.log("selected product details after quote recalculation : ",$scope.selectedProduct),Number(carQuoteResponse.data.quotes[0].grossPremium)>0&&$scope.quoteCalcResponse.push(carQuoteResponse.data.quotes[0])):carQuoteResponse.data.quotes[0].carrierId==$scope.selectedProduct.carrierId&&carQuoteResponse.data.quotes[0].productId==$scope.selectedProduct.productId&&($scope.loading=!1,angular.copy($scope.selectedProductInputParam,$scope.selectedProductInputParamCopy),$scope.premiumDetails.selectedProductDetails=carQuoteResponse.data.quotes[0],$scope.selectedProduct=carQuoteResponse.data.quotes[0],Number(carQuoteResponse.data.quotes[0].grossPremium)>0&&$scope.quoteCalcResponse.push(carQuoteResponse.data.quotes[0])));else if($scope.loading=!1,null!=carQuoteResponse.data&&carQuoteResponse.data.quotes[0].carrierId==$scope.selectedProduct.carrierId&&carQuoteResponse.data.quotes[0].productId==$scope.selectedProduct.productId){$scope.selectedProductInputParam=localStorageService.get("bikeQuoteInputParamaters"),$scope.vehicleInfo.registrationNumber="",$scope.selectedProductInputParam.vehicleInfo.registrationNumber&&($scope.selectedProductInputParam.vehicleInfo.registrationNumber="",delete $scope.selectedProductInputParam.vehicleInfo.registrationNumber),localStorageService.set("bikeQuoteInputParamaters",$scope.selectedProductInputParam);var screenCnfrmError=$scope.selectedProduct.insuranceCompany+""+$scope.p365Labels.errorMessage.regNumberScreenConfirmErrorMsg;$rootScope.P365Alert($scope.p365Labels.common.p365prompt,screenCnfrmError,"Ok")}}).error(function(data,status){delete $scope.selectedProductInputParam.vehicleInfo.registrationNumber,$scope.responseRecalculateCodeList.push($scope.p365Labels.responseCode.systemError),$scope.loading=!1})}),$scope.loading=!1;else{$scope.loading=!1,$scope.selectedProductInputParam=localStorageService.get("bikeQuoteInputParamaters"),$scope.vehicleInfo.registrationNumber="",$scope.selectedProductInputParam.vehicleInfo.registrationNumber&&delete $scope.selectedProductInputParam.vehicleInfo.registrationNumber,localStorageService.set("bikeQuoteInputParamaters",$scope.selectedProductInputParam);var screenCnfrmError=$scope.selectedProduct.insuranceCompany+""+$scope.p365Labels.errorMessage.regNumberScreenConfirmErrorMsg;$rootScope.P365Alert($scope.p365Labels.common.p365prompt,screenCnfrmError,"Ok")}})},$scope.resetRegistrationAddress=function(){"undefined"!=String($scope.vehicleDetails.registrationAddress.regDisplayArea)&&0!=$scope.vehicleDetails.registrationAddress.regDisplayArea.length||($scope.vehicleDetails.registrationAddress.regPincode="",$scope.vehicleDetails.registrationAddress.regState="",$scope.vehicleDetails.registrationAddress.regCity="",$scope.vehicleDetails.registrationAddress.regDoorNo="")},$scope.getPinCodeAreaList=function(searchValue){var docType=$scope.p365Labels.documentType.cityDetails,carrierId=$scope.selectedProduct.carrierId;return $http.get(getSearchServiceLink+docType+"&q="+searchValue+"&id="+carrierId).then(function(response){return JSON.parse(response.data).data})},$scope.onSelectPinOrArea=function(item){$scope.selectedProductInputParamCopy=angular.copy($scope.selectedProductInputParam.vehicleInfo),item.address&&($scope.proposerDetails.communicationAddress.comDisplayArea=item.address),$scope.proposerDetails.communicationAddress.comPincode=item.pincode,$scope.proposerDetails.communicationAddress.comCity=item.city,$scope.proposerDetails.communicationAddress.comState=item.state,$scope.checkForSameAddress(),$scope.loadPlaceholder(),$scope.proposerDetails.communicationAddress.comDisplayArea&&(item.displayArea=$scope.proposerDetails.communicationAddress.comDisplayArea),localStorageService.set("commAddressDetails",item)},$scope.checkForSameAddress=function(){$scope.vehicleDetails.isVehicleAddressSameAsCommun&&($scope.vehicleDetails.registrationAddress.regPincode=$scope.proposerDetails.communicationAddress.comPincode,$scope.vehicleDetails.registrationAddress.regDoorNo=$scope.proposerDetails.communicationAddress.comDoorNo,$scope.vehicleDetails.registrationAddress.regDisplayArea=$scope.proposerDetails.communicationAddress.comDisplayArea,$scope.vehicleDetails.registrationAddress.regCity=$scope.proposerDetails.communicationAddress.comCity,$scope.vehicleDetails.registrationAddress.regState=$scope.proposerDetails.communicationAddress.comState)},$scope.bikeQuoteRequestFormation=function(){$scope.quote={},$scope.quote.vehicleInfo={},$scope.quote.quoteParam={},$scope.quote.vehicleInfo.IDV=$scope.selectedProductInputParam.vehicleInfo.IDV,$scope.quote.vehicleInfo.PreviousPolicyExpiryDate=$scope.selectedProductInputParam.vehicleInfo.PreviousPolicyExpiryDate,$scope.quote.vehicleInfo.TPPolicyExpiryDate=$scope.selectedProductInputParam.vehicleInfo.TPPolicyExpiryDate,$scope.quote.vehicleInfo.TPPolicyStartDate=$scope.selectedProductInputParam.vehicleInfo.TPPolicyStartDate,$scope.quote.vehicleInfo.RTOCode=$scope.selectedProductInputParam.vehicleInfo.RTOCode,$scope.quote.vehicleInfo.city=$scope.selectedProductInputParam.vehicleInfo.city,$scope.selectedProductInputParam.vehicleInfo.dateOfRegistration&&($scope.quote.vehicleInfo.dateOfRegistration=$scope.selectedProductInputParam.vehicleInfo.dateOfRegistration),$scope.quote.vehicleInfo.idvOption=$scope.selectedProductInputParam.vehicleInfo.idvOption,$scope.quote.vehicleInfo.best_quote_id=$scope.selectedProductInputParam.vehicleInfo.best_quote_id,$scope.quote.vehicleInfo.previousClaim=$scope.selectedProductInputParam.vehicleInfo.previousClaim,$scope.quote.vehicleInfo.registrationNumber=$scope.selectedProductInputParam.vehicleInfo.registrationNumber,$scope.quote.vehicleInfo.registrationPlace=$scope.selectedProductInputParam.vehicleInfo.registrationPlace,$scope.quote.vehicleInfo.state=$scope.selectedProductInputParam.vehicleInfo.state,$scope.quote.vehicleInfo.make=$scope.selectedProductInputParam.vehicleInfo.make,$scope.quote.vehicleInfo.model=$scope.selectedProductInputParam.vehicleInfo.model,$scope.quote.vehicleInfo.variant=$scope.selectedProductInputParam.vehicleInfo.variant.toString(),$scope.quote.quoteParam.ncb=$scope.selectedProductInputParam.quoteParam.ncb,$scope.quote.quoteParam.ownedBy=$scope.selectedProductInputParam.quoteParam.ownedBy,$scope.quote.quoteParam.policyType=$scope.selectedProductInputParam.quoteParam.policyType,$scope.quote.quoteParam.riders=$scope.selectedProductInputParam.quoteParam.riders},$scope.onSelectVehiclePinOrArea=function(item){$scope.selectedProductInputParamCopy=angular.copy($scope.selectedProductInputParam.vehicleInfo),$scope.selectedProductInputParam=localStorageService.get("bikeQuoteInputParamaters");var selState=$scope.selectedProductInputParam.vehicleInfo.state;$scope.vehicleDetails.registrationAddress.regState=selState.toUpperCase(),$scope.vehicleDetails.registrationAddress.regState!=item.state?($scope.selectedProductInputParam.vehicleInfo.state=item.state,$scope.vehicleDetailsCopied=angular.copy(item),$rootScope.P365Confirm($scope.p365Labels.common.p365prompt,$scope.p365Labels.common.locationChangeMsg,"No","Yes",function(confirmStatus){confirmStatus?($scope.loading=!0,$scope.bikeQuoteRequestFormation(),$scope.quote.vehicleInfo.city=item.city,$scope.quote.vehicleInfo.state=item.state,RestAPI.invoke($scope.p365Labels.getRequest.quoteBike,$scope.quote).then(function(proposeFormResponse){if($scope.bikeRecalculateQuoteRequest=[],proposeFormResponse.responseCode==$scope.p365Labels.responseCode.success1)$scope.responseRecalculateCodeList=[],localStorageService.set("bikeQuoteInputParamaters",$scope.quote),localStorageService.set("BIKE_UNIQUE_QUOTE_ID",proposeFormResponse.QUOTE_ID),localStorageService.set("BIKE_UNIQUE_QUOTE_ID_ENCRYPTED",proposeFormResponse.encryptedQuoteId),$scope.bikeRecalculateQuoteRequest=proposeFormResponse.data,$scope.quoteCalcResponse=[],angular.forEach($scope.bikeRecalculateQuoteRequest,function(obj,i){var request={},header={};header.messageId=messageIDVar,header.campaignID=campaignIDVar,header.source=sourceOrigin,header.transactionName=$scope.p365Labels.transactionName.bikeQuoteResult,header.deviceId=deviceIdOrigin,request.header=header,request.body=obj,$http({method:"POST",url:getQuoteCalcLink,data:request}).success(function(callback,status){var bikeQuoteResponse=JSON.parse(callback);if($scope.responseRecalculateCodeList.push(bikeQuoteResponse.responseCode),bikeQuoteResponse.responseCode==$scope.p365Labels.responseCode.success1)null!=bikeQuoteResponse.data&&null!=bikeQuoteResponse.data&&bikeQuoteResponse.data.quotes[0].carrierId==$scope.selectedProduct.carrierId&&($scope.loading=!1,$scope.premiumDetails.selectedProductDetails=bikeQuoteResponse.data.quotes[0],$scope.selectedProduct=bikeQuoteResponse.data.quotes[0],bikeQuoteResponse.data.quotes[0].id=bikeQuoteResponse.messageId,$scope.quoteCalcResponse.push(bikeQuoteResponse.data.quotes[0]));else if(null!=bikeQuoteResponse.data&&bikeQuoteResponse.data.quotes[0].carrierId==$scope.selectedProduct.carrierId&&bikeQuoteResponse.data.quotes[0].productId==$scope.selectedProduct.productId){$scope.loading=!1,$scope.vehicleDetails.registrationAddress.regPincode="",$scope.vehicleDetails.registrationAddress.regCity="",$scope.vehicleDetails.registrationAddress.regState="",$scope.selectedProductInputParam=localStorageService.get("bikeQuoteInputParamaters"),$scope.selectedProductInputParam.vehicleInfo.state="",localStorageService.set("bikeQuoteInputParamaters",$scope.selectedProductInputParam);var screenCnfrmError=$scope.selectedProduct.insuranceCompany+""+$scope.p365Labels.errorMessage.screenConfirmErrorMsg;$rootScope.P365Alert($scope.p365Labels.common.p365prompt,screenCnfrmError,"Ok")}}).error(function(data,status){$scope.responseRecalculateCodeList.push($scope.p365Labels.responseCode.systemError),$scope.loading=!1})});else{$scope.loading=!1,$scope.vehicleDetails.registrationAddress.regPincode="",$scope.vehicleDetails.registrationAddress.regCity="",$scope.vehicleDetails.registrationAddress.regState="",$scope.selectedProductInputParam=localStorageService.get("bikeQuoteInputParamaters"),$scope.selectedProductInputParam.vehicleInfo.state="",localStorageService.set("bikeQuoteInputParamaters",$scope.selectedProductInputParam);var screenCnfrmError=$scope.selectedProduct.insuranceCompany+""+$scope.p365Labels.errorMessage.screenConfirmErrorMsg;$rootScope.P365Alert($scope.p365Labels.common.p365prompt,screenCnfrmError,"Ok")}}),$scope.vehicleDetails.registrationAddress.regPincode=item.pincode,$scope.vehicleDetails.registrationAddress.regCity=item.city,$scope.vehicleDetails.registrationAddress.regState=item.state,$scope.checkForSameAddress()):($scope.vehicleDetails.registrationAddress=$scope.vehicleDetailsCopied,$scope.vehicleDetails.registrationAddress.regPincode=$scope.selectedProductInputParamCopy.pincode,$scope.vehicleDetails.registrationAddress.regCity=$scope.selectedProductInputParamCopy.city,$scope.vehicleDetails.registrationAddress.regState=$scope.selectedProductInputParamCopy.state,$scope.checkForSameAddress())})):(item.address&&($scope.vehicleDetails.registrationAddress.regDisplayArea=item.address),$scope.vehicleDetails.registrationAddress.regPincode=item.pincode,$scope.vehicleDetails.registrationAddress.regCity=item.city,$scope.vehicleDetails.registrationAddress.regState=item.state,$scope.checkForSameAddress()),$scope.loadPlaceholder(),localStorageService.set("bikeRegAddress",item)},$scope.getFinancialInstituteList=function(instituteName){var carrierId=$scope.selectedProduct.carrierId;return $http.get(getSearchServiceLink+"CarrierLoanFinancer&q="+instituteName+"&id="+carrierId).then(function(financeInstituteList){return JSON.parse(financeInstituteList.data).data})},$scope.onFinancialInstitute=function(item){$scope.vehicleDetails.financeInstitutionId=item.financerId,$scope.productValidation.isFinanceType&&($scope.vehicleDetails.financeType=item.financerType),$scope.productValidation.isFinanceCode&&($scope.vehicleDetails.financeInstitutionCode=item.financerId),$scope.loadPlaceholder()},$scope.changePrevInsurer=function(){if($scope.insuranceDetails.insurerName=$scope.insuranceInfo.insurerName.carrierName,$scope.insuranceDetails.insurerId=$scope.insuranceInfo.insurerName.carrierId,$scope.selectedProduct.carrierId==$scope.insuranceDetails.insurerId?isPrevPolSameAsNew=!0:(isPrevPolSameAsNew=!1,isPolicyRenewed=!1),null!=$scope.productValidation.carrierListforPrevPolicy&&"undefined"!=String($scope.productValidation.carrierListforPrevPolicy)&&$scope.productValidation.carrierListforPrevPolicy.length>0)for(var j=0;j<$scope.productValidation.carrierListforPrevPolicy.length;j++){if($scope.insuranceDetails.insurerId==$scope.productValidation.carrierListforPrevPolicy[j].carrierId){$scope.prevAddressDiv=!0;break}$scope.prevAddressDiv=!1}},$scope.changeVehicleLoanType=function(){$scope.vehicleDetails.vehicleLoanType=$scope.vehicleInfo.vehicleLoanType.name},$scope.changeGender=function(){"Male"==$scope.proposerDetails.gender?($scope.proposerDetails.salutation="Mr",$scope.commonInfo&&($scope.commonInfo.salutation="Mr")):($scope.proposerDetails.salutation="Mrs",$scope.commonInfo&&($scope.commonInfo.salutation="Miss"))},$scope.changeNomineeRelation=function(){"undefined"!=String($scope.nominationInfo.nominationRelation)&&($scope.nominationDetails.nominationRelation=$scope.nominationInfo.nominationRelation.relationship,$scope.nominationDetails.nominationRelationId=$scope.nominationInfo.nominationRelation.relationshipId)},$scope.changeAppointeeRelation=function(){"undefined"!=String($scope.appointeeInfo.appointeeRelation)&&($scope.appointeeDetails.appointeeRelation=$scope.appointeeInfo.appointeeRelation.relationship,$scope.appointeeDetails.appointeeRelationId=$scope.appointeeInfo.appointeeRelation.relationshipId)},$scope.changeRegAddress=function(){$scope.vehicleDetails.isVehicleAddressSameAsCommun?($scope.vehicleDetails.registrationAddress.regDisplayArea=$scope.proposerDetails.communicationAddress.comDisplayArea,$scope.vehicleDetails.registrationAddress.regPincode=$scope.proposerDetails.communicationAddress.comPincode,$scope.vehicleDetails.registrationAddress.regCity=$scope.proposerDetails.communicationAddress.comCity,$scope.vehicleDetails.registrationAddress.regState=$scope.proposerDetails.communicationAddress.comState):localStorageService.get("bikeRegAddress")?($scope.vehicleDetails.registrationAddress.regPincode=localStorageService.get("bikeRegAddress").pincode,$scope.vehicleDetails.registrationAddress.regDisplayArea=localStorageService.get("bikeRegAddress").displayArea,$scope.vehicleDetails.registrationAddress.regCity=localStorageService.get("bikeRegAddress").city,$scope.vehicleDetails.registrationAddress.regState=localStorageService.get("bikeRegAddress").state):($scope.vehicleDetails.registrationAddress={},$scope.vehicleDetails.registrationAddress.regDisplayArea="",$scope.vehicleDetails.registrationAddress.regDoorNo="",$scope.vehicleDetails.registrationAddress.regPincode="",$scope.vehicleDetails.registrationAddress.regCity="",$scope.vehicleDetails.registrationAddress.regState=""),$scope.calcDefaultRegAreaDetails($scope.vehicleDetails.registrationAddress.regPincode)},$scope.changePrevPolType=function(){$scope.insuranceDetails.prevPolicyType==$scope.policyTypes[0].display?$scope.prevPolStatusError=!1:$scope.prevPolStatusError=!0},$scope.changePurchasedLoan=function(){"No"==$scope.vehicleDetails.purchasedLoan&&($scope.vehicleDetails.financeInstitution=""),$scope.loadPlaceholder()},$scope.validAppointeeRelation=function(relation){if("Y"==relation.isApointeeRelationship)return relation.relationship},$scope.validateNomineeDateOfBirth=function(){if($scope.nominationDetails.nomPersonAge=getAgeFromDOB($scope.nominationDetails.nomDateOfBirth),$scope.nominationDetails.nomPersonAge<18){$scope.appointeeStatus=!0;var appointeeDOBOption={};appointeeDOBOption.minimumYearLimit="-"+$scope.productValidation.proposerDateOfBirthMaxLimit+"Y",appointeeDOBOption.maximumYearLimit="-18Y",appointeeDOBOption.changeMonth=!0,appointeeDOBOption.changeYear=!0,appointeeDOBOption.dateFormat="dd/mm/yy",$scope.appointeeDOBOptions=setP365DatePickerProperties(appointeeDOBOption)}else $scope.appointeeStatus=!1;$scope.relationList=$scope.genericRelationshipList},$scope.calculateAppointeeAge=function(){$scope.appointeeDetails.personAge=getAgeFromDOB($scope.appointeeDetails.dateOfBirth)},$scope.calculateProposerAge=function(){$scope.proposerDetails.personAge=getAgeFromDOB($scope.proposerDetails.dateOfBirth)},$scope.initBikeBuyScreen=function(){var polStartDateOption={minimumYearLimit:"+0D"};polStartDateOption.maximumYearLimit="+"+$scope.productValidation.policyStartDateLimit+"D",polStartDateOption.changeMonth=!0,polStartDateOption.changeYear=!0,polStartDateOption.dateFormat="dd/mm/yy",$scope.polStartDateOptions=setP365DatePickerProperties(polStartDateOption);var proposerDOBOption={};proposerDOBOption.minimumYearLimit="-"+$scope.productValidation.proposerDateOfBirthMaxLimit+"Y",proposerDOBOption.maximumYearLimit="-"+$scope.productValidation.proposerDateOfBirthMinLimit+"Y",proposerDOBOption.changeMonth=!0,proposerDOBOption.changeYear=!0,proposerDOBOption.dateFormat="dd/mm/yy",$scope.proposerDOBOptions=setP365DatePickerProperties(proposerDOBOption);var nomineeDOBOption={};nomineeDOBOption.minimumYearLimit="-"+$scope.productValidation.proposerDateOfBirthMaxLimit+"Y",nomineeDOBOption.maximumYearLimit="-1Y",nomineeDOBOption.changeMonth=!0,nomineeDOBOption.changeYear=!0,nomineeDOBOption.dateFormat="dd/mm/yy",$scope.nomineeDOBOptions=setP365DatePickerProperties(nomineeDOBOption)},$scope.validatePolicyStartDate=function(){"undefined"!==String($scope.policyStartDate)&&(convertStringFormatToDate($scope.policyStartDate,function(formattedPolStartDate){if($scope.selectedProduct.ownDamagePolicyTerm&&($scope.ODPolicyStartDate=$scope.policyStartDate),"renew"==$scope.vehicleInfo.insuranceType.value)var polEndDate=new Date(formattedPolStartDate.setFullYear(formattedPolStartDate.getFullYear()+1));else polEndDate=new Date(formattedPolStartDate.setFullYear(formattedPolStartDate.getFullYear()+5));polEndDate=new Date(polEndDate.setDate(polEndDate.getDate()-1)),convertDateFormatToString(polEndDate,function(formattedPolEndDate){$scope.policyEndDate=formattedPolEndDate})}),$scope.selectedProduct.ownDamagePolicyTerm&&convertStringFormatToDate($scope.ODPolicyStartDate,function(formattedODPolStartDate){var ODPolEndDate=new Date(formattedODPolStartDate.setFullYear(formattedODPolStartDate.getFullYear()+$scope.selectedProduct.ownDamagePolicyTerm));ODPolEndDate=new Date(ODPolEndDate.setDate(ODPolEndDate.getDate()-1)),convertDateFormatToString(ODPolEndDate,function(formattedODPolEndDate){$scope.ODPolicyEndDate=formattedODPolEndDate})}))},$scope.prevPolicyStatus=function(){if("renew"==$scope.vehicleInfo.insuranceType.value)$scope.previousPolicyStatus=!0,$scope.vehicleInfo.PreviousPolicyStartDate?$scope.prevPolDetails.prevPolicyStartDate=$scope.vehicleInfo.PreviousPolicyStartDate:$scope.selectedPreviousPolicyStartDate&&($scope.prevPolDetails.prevPolicyStartDate=$scope.selectedPreviousPolicyStartDate),$scope.prevPolDetails.prevPolicyEndDate=$scope.selectedProductInputParam.vehicleInfo.PreviousPolicyExpiryDate,convertStringFormatToDate($scope.prevPolDetails.prevPolicyEndDate,function(formattedPrevPolEndDate){var todayDate=new Date;if(1==$scope.vehicleInfo.policyStatus.key||2==$scope.vehicleInfo.policyStatus.key)var policyStartDate=new Date(todayDate.setDate(todayDate.getDate()+3));else policyStartDate=new Date(formattedPrevPolEndDate.setDate(formattedPrevPolEndDate.getDate()+1));convertDateFormatToString(policyStartDate,function(formattedPolicyStartDate){$scope.policyStartDate=formattedPolicyStartDate})});else{$scope.previousPolicyStatus=!1;var policyStartDate=new Date;convertDateFormatToString(policyStartDate,function(formattedPolicyStartDate){$scope.policyStartDate=formattedPolicyStartDate,$scope.selectedProduct.ownDamagePolicyTerm&&($scope.ODPolicyStartDate=formattedPolicyStartDate)})}$scope.validatePolicyStartDate()},$scope.validateMemebershipEndDate=function(){"undefined"!==String($scope.vehicleInfo.memebershipEndDate)?convertDateFormatToString($scope.vehicleInfo.memebershipEndDate,function(formattedMemEndDate){var memebershipExpiryDate=formattedMemEndDate.split("/"),tempMemebershipExpiryDate=memebershipExpiryDate[1]+"/"+memebershipExpiryDate[0]+"/"+memebershipExpiryDate[2],policyExpiryDate=$scope.policyEndDate.split("/"),tempPolicyExpiryDate=policyExpiryDate[1]+"/"+policyExpiryDate[0]+"/"+policyExpiryDate[2];new Date(tempMemebershipExpiryDate).setHours(0,0,0,0)<new Date(tempPolicyExpiryDate).setHours(0,0,0,0)?($scope.vehicleDetails.memebershipEndDate=void 0,$scope.vehicleInfo.memebershipEndDate=null):($scope.vehicleDetails.memebershipEndDate=formattedMemEndDate,$scope.loadPlaceholder())}):($scope.vehicleDetails.memebershipEndDate=void 0,$scope.vehicleInfo.memebershipEndDate=null,$scope.memebershipEndDateError=$scope.productValidation.messages.memebershipEndDateErrorOne)},$scope.changeDrivingExp=function(){$scope.proposerDetails.drivingExp=$scope.proposerInfo.drivingExp.display},$scope.changeVehicleDrivenOn=function(){$scope.proposerDetails.vehicleDrivenOn=$scope.proposerInfo.vehicleDrivenOn.name},$scope.changeMonthlyMileage=function(){$scope.vehicleDetails.monthlyMileage=$scope.vehicleInfo.monthlyMileage.value},$scope.accordion="1",$scope.editPesonalInfo=function(){$scope.screenOneStatus=!0,$scope.screenTwoStatus=!1,$scope.screenThreeStatus=!1,$scope.screenFiveStatus=!1,$scope.accordion="1"},$scope.editAddressInfo=function(){$scope.screenOneStatus=!1,$scope.screenTwoStatus=!0,$scope.screenThreeStatus=!1,$scope.accordion="2"},$scope.editNomineeInfo=function(){$scope.screenOneStatus=!1,$scope.screenTwoStatus=!1,$scope.screenThreeStatus=!0,$scope.screenFiveStatus=!1,$scope.accordion="3"},$scope.editPrevPolicyInfo=function(){$scope.screenOneStatus=!1,$scope.screenTwoStatus=!1,$scope.screenThreeStatus=!0,$scope.screenFiveStatus=!1,$scope.accordion="4"},$scope.Section2Inactive=!0,$scope.Section3Inactive=!0,$scope.Section4Inactive=!0,$scope.Section5Inactive=!0,$scope.submitPersonalDetails=function(){$scope.screenOneStatus=!0,$scope.screenTwoStatus=!0,$scope.screenThreeStatus=!1,$scope.screenFourStatus=!1,$scope.Section2Inactive=!1,$scope.accordion="2",1==imauticAutomation&&imatEvent("ProposalFilled"),$scope.bikeProposeFormCookieDetails.proposerDetails=$scope.proposerDetails,$scope.bikeProposeFormCookieDetails.proposerInfo=$scope.proposerInfo,$rootScope.baseEnvEnabled&&!$rootScope.wordPressEnabled&&(saveProposal=!0,savePersonalDetails=!0,saveNomineeDetails=!1,savePrevPolicyDetails=!1,$scope.submitProposalData())},$scope.submitAddressDetails=function(){$scope.screenOneStatus=!0,$scope.screenTwoStatus=!0,$scope.screenThreeStatus=!0,$scope.screenFourStatus=!1,$scope.screenFiveStatus=!1,$scope.Section3Inactive=!1,$scope.accordion="3"},$scope.submitNomineeDetails=function(){$scope.screenOneStatus=!0,$scope.screenTwoStatus=!0,$scope.screenThreeStatus=!0,$scope.previousPolicyStatus?($scope.screenFourStatus=!0,$scope.screenFiveStatus=!1,$scope.Section3Inactive=!1,$scope.accordion="4"):($scope.screenFourStatus=!1,$scope.screenFiveStatus=!0,$scope.proceedPaymentStatus=!0,$scope.Section4Inactive=!1,$scope.accordion="5"),$scope.bikeProposeFormCookieDetails.nominationDetails=$scope.nominationDetails,$scope.bikeProposeFormCookieDetails.appointeeDetails=$scope.appointeeDetails,$scope.bikeProposeFormCookieDetails.nominationInfo=$scope.nominationInfo,$scope.bikeProposeFormCookieDetails.appointeeInfo=$scope.appointeeInfo,$rootScope.baseEnvEnabled&&!$rootScope.wordPressEnabled&&(saveProposal=!0,saveNomineeDetails=!0,savePersonalDetails=!0,savePrevPolicyDetails=!1,$scope.submitProposalData())},$scope.submitPrevPolicyDetails=function(){$scope.screenOneStatus=!0,$scope.screenTwoStatus=!0,$scope.screenThreeStatus=!0,$scope.screenFourStatus=!0,$scope.screenFiveStatus=!0,$scope.proceedPaymentStatus=!0,$scope.Section5Inactive=!1,$scope.accordion="5",$rootScope.baseEnvEnabled&&!$rootScope.wordPressEnabled&&(saveProposal=!0,savePrevPolicyDetails=!0,savePersonalDetails=!0,saveNomineeDetails=!0,$scope.submitProposalData())},$scope.backToResultScreen=function(){$rootScope.baseEnvEnabled&&!$rootScope.wordPressEnabled&&($rootScope.mainTabsMenu[0].active=!0,$rootScope.mainTabsMenu[1].active=!1),$location.path("/bikeResult")},$scope.showAuthenticateForm=function(){$scope.disableOTP=!1;var validateAuthParam={paramMap:{}};validateAuthParam.mobileNumber=$scope.proposerDetails.mobileNumber,validateAuthParam.funcType=$scope.p365Labels.functionType.optAuth,validateAuthParam.paramMap.OTP=$scope.p365Labels.functionType.otpGenerate,getDocUsingParam(RestAPI,$scope.p365Labels.transactionName.sendSMS,validateAuthParam,function(createOTP){createOTP.responseCode==$scope.p365Labels.responseCode.success?($scope.createOTPError="",$scope.modalOTP=!0):createOTP.responseCode==$scope.p365Labels.responseCode.blockedMobile?($scope.createOTPError=createOTP.message,$scope.modalOTPError=!0):($scope.createOTPError=$scope.p365Labels.errorMessage.createOTP,$scope.modalOTPError=!0)})},$scope.hideModal=function(){$scope.modalOTP=!1,$scope.proceedPaymentStatus=!0,$scope.authenticate.enteredOTP=""},$scope.hideModalError=function(){$scope.modalOTPError=!1},$scope.resendOTP=function(){var validateAuthParam={paramMap:{}};validateAuthParam.mobileNumber=$scope.proposerDetails.mobileNumber,validateAuthParam.funcType=$scope.p365Labels.functionType.optAuth,validateAuthParam.paramMap.OTP=$scope.p365Labels.functionType.otpGenerate,getDocUsingParam(RestAPI,$scope.p365Labels.transactionName.sendSMS,validateAuthParam,function(createOTP){createOTP.responseCode==$scope.p365Labels.responseCode.success?$scope.invalidOTPError="":createOTP.responseCode==$scope.p365Labels.responseCode.userNotExist?$scope.invalidOTPError=createOTP.message:createOTP.responseCode==$scope.p365Labels.responseCode.blockedMobile?($scope.invalidOTPError=createOTP.message,$scope.disableOTP=!0):createOTP.responseCode==$scope.p365Labels.responseCode.mobileInvalidCode?$scope.invalidOTPError=createOTP.message:$scope.invalidOTPError=$scope.p365Labels.errorMessage.createOTP})},$scope.createBikeVehicleDetailsRequest=function(){var vehicleDetailRequest={registrationAddress:{}};vehicleDetailRequest.registrationAddress.regDoorNo=$scope.vehicleDetails.registrationAddress.regDoorNo,vehicleDetailRequest.purchasedLoan=$scope.vehicleDetails.purchasedLoan,vehicleDetailRequest.engineNumber=$scope.vehicleDetails.engineNumber,vehicleDetailRequest.isVehicleAddressSameAsCommun=$scope.vehicleDetails.isVehicleAddressSameAsCommun,vehicleDetailRequest.chassisNumber=$scope.vehicleDetails.chassisNumber,vehicleDetailRequest.registrationNumber=$scope.vehicleDetails.RTOCode.toUpperCase()+$scope.vehicleInfo.registrationNumber.toUpperCase(),$scope.vehicleDetails.vehicleLoanType&&(vehicleDetailRequest.vehicleLoanType=$scope.vehicleDetails.vehicleLoanType),$scope.vehicleDetails.financeInstitution&&(vehicleDetailRequest.financeInstitution=$scope.vehicleDetails.financeInstitution),$scope.vehicleDetails.monthlyMileage&&(vehicleDetailRequest.monthlyMileage=$scope.vehicleDetails.monthlyMileage),$scope.vehicleDetails.financeInstitutionCode&&(vehicleDetailRequest.financeInstitutionCode=$scope.vehicleDetails.financeInstitutionCode),vehicleDetailRequest.registrationAddress.regCity=$scope.vehicleDetails.registrationAddress.regCity,vehicleDetailRequest.registrationAddress.regDisplayArea=$scope.vehicleDetails.registrationAddress.regDisplayArea,vehicleDetailRequest.registrationAddress.regPincode=$scope.vehicleDetails.registrationAddress.regPincode,vehicleDetailRequest.registrationAddress.regState=$scope.vehicleDetails.registrationAddress.regState,vehicleDetailRequest.registrationAddress.regArea=$scope.vehicleDetails.registrationAddress.regArea,vehicleDetailRequest.registrationAddress.regDistrict=$scope.vehicleDetails.registrationAddress.regDistrict,vehicleDetailRequest.registrationAddress.regDisplayField=$scope.vehicleDetails.registrationAddress.regDisplayField,$scope.bikeProposeFormDetails.vehicleDetails=vehicleDetailRequest},$scope.proposalInfo=function(){var vehicleDetailsCookie={};if($rootScope.baseEnvEnabled&&!$rootScope.wordPressEnabled){$scope.bikeProposeFormDetails={},$scope.proposerDetails.panNumber="undefined"!=String($scope.proposerDetails.panNumber)?$scope.proposerDetails.panNumber.toUpperCase():"",savePersonalDetails&&($scope.bikeProposeFormDetails.proposerDetails=$scope.proposerDetails,!$scope.personalDetailsFlag&&$scope.nominationDetails.firstName&&$scope.nominationDetails.lastName?$scope.bikeProposeFormDetails.nominationDetails=$scope.nominationDetails:$scope.personalDetailsFlag?$scope.bikeProposeFormDetails.nominationDetails=$scope.nominationDetails:$scope.bikeProposeFormDetails.nominationDetails={},$scope.vehicleInfo.insuranceType&&($scope.insuranceDetails.insuranceType=$scope.vehicleInfo.insuranceType.value),vehicleDetailsCookie.registrationNumber=$scope.vehicleDetails.registrationNumber,vehicleDetailsCookie.RTOCode=$scope.vehicleDetails.RTOCode.toUpperCase(),localStorageService.set("bikeRegistrationDetails",vehicleDetailsCookie),$scope.bikeProposeFormDetails.insuranceDetails=$scope.insuranceDetails,$scope.createBikeVehicleDetailsRequest()),saveNomineeDetails&&($scope.bikeProposeFormDetails.nominationDetails=$scope.nominationDetails,$scope.bikeProposeFormDetails.appointeeDetails=$scope.appointeeDetails,localStorageService.get("proposalId")&&($scope.proposalId=localStorageService.get("proposalId"),$scope.bikeProposeFormDetails.proposalId=$scope.proposalId)),savePrevPolicyDetails&&($scope.bikeProposeFormDetails.insuranceDetails=$scope.insuranceDetails,localStorageService.get("proposalId")&&($scope.proposalId=localStorageService.get("proposalId"),$scope.bikeProposeFormDetails.proposalId=$scope.proposalId)),saveProposal||($scope.vehicleInfo.insuranceType&&($scope.insuranceDetails.insuranceType=$scope.vehicleInfo.insuranceType.value),$scope.vehicleDetails.registrationNumber=$scope.vehicleDetails.RTOCode.toUpperCase()+$scope.vehicleInfo.registrationNumber.toUpperCase(),$scope.vehicleDetails.engineNumber=$scope.vehicleDetails.engineNumber.toUpperCase(),$scope.vehicleDetails.chassisNumber=$scope.vehicleDetails.chassisNumber.toUpperCase(),$scope.createBikeVehicleDetailsRequest());var selectedInsuranceType=localStorageService.get("selectedInsuranceType");"new"==$scope.selectedProduct.policyType&&"comprehensive"==selectedInsuranceType&&($scope.policyStartDate=$scope.ODPolicyStartDate,$scope.policyEndDate=$scope.ODPolicyEndDate),$scope.bikeProposeFormDetails.carrierId=$scope.selectedProduct.carrierId,$scope.bikeProposeFormDetails.productId=$scope.selectedProduct.productId}if($rootScope.baseEnvEnabled&&$rootScope.wordPressEnabled){$scope.bikeProposeFormDetails={},$scope.proposerDetails.panNumber="undefined"!=String($scope.proposerDetails.panNumber)?$scope.proposerDetails.panNumber.toUpperCase():"",$scope.vehicleInfo.insuranceType&&($scope.insuranceDetails.insuranceType=$scope.vehicleInfo.insuranceType.value),vehicleDetailsCookie.registrationNumber=$scope.vehicleDetails.registrationNumber,vehicleDetailsCookie.RTOCode=$scope.vehicleDetails.RTOCode.toUpperCase(),localStorageService.set("bikeRegistrationDetails",vehicleDetailsCookie),$scope.vehicleDetails.engineNumber=$scope.vehicleDetails.engineNumber.toUpperCase(),$scope.vehicleDetails.chassisNumber=$scope.vehicleDetails.chassisNumber.toUpperCase();selectedInsuranceType=localStorageService.get("selectedInsuranceType");"new"==$scope.selectedProduct.policyType&&"comprehensive"==selectedInsuranceType&&($scope.policyStartDate=$scope.ODPolicyStartDate,$scope.policyEndDate=$scope.ODPolicyEndDate),$scope.bikeProposeFormDetails.nominationDetails=$scope.nominationDetails,$scope.bikeProposeFormDetails.proposerDetails=$scope.proposerDetails,$scope.bikeProposeFormDetails.nominationDetails=$scope.nominationDetails,$scope.bikeProposeFormDetails.appointeeDetails=$scope.appointeeDetails,$scope.bikeProposeFormDetails.insuranceDetails=$scope.insuranceDetails,$scope.bikeProposeFormDetails.carrierId=$scope.selectedProduct.carrierId,$scope.bikeProposeFormDetails.productId=$scope.selectedProduct.productId,$scope.createBikeVehicleDetailsRequest()}},$scope.proceedForPayment=function(){if($scope.proceedPaymentStatus=!1,$scope.submitProposalClicked=!1,$scope.invalidOTPError="",$scope.proposalInfo(),$scope.bikeProposeFormDetails.QUOTE_ID=localStorageService.get("BIKE_UNIQUE_QUOTE_ID"),$scope.bikeProposeFormDetails.businessLineId=$scope.p365Labels.businessLineType.bike,$scope.bikeProposeFormDetails.source=sourceOrigin,isPolicyRenewed&&($scope.bikeProposeFormDetails.isPolicyRenewed=isPolicyRenewed),delete $scope.bikeProposeFormDetails.proposalId,$scope.referralCode&&($scope.bikeProposeFormDetails.referralCode=$scope.referralCode),!$rootScope.wordPressEnabled&&$rootScope.baseEnvEnabled&&$rootScope.agencyPortalEnabled){const localdata=JSON.parse(localStorage.getItem("finalLocalStorage"));localdata&&($scope.bikeProposeFormDetails.userName=localdata.username,$scope.bikeProposeFormDetails.agencyId=localdata.agencyId),localStorage.getItem("desiSkillUniqueId")&&(localStorage.getItem("desiSkillUserId")&&($scope.bikeProposeFormDetails.userName=localStorage.getItem("desiSkillUserId")),$scope.bikeProposeFormDetails.agencyId=localStorage.getItem("desiSkillAgencyId"))}$scope.bikeProposeFormDetails.QUOTE_ID?($scope.loading=!0,RestAPI.invoke("bikeProposal",$scope.bikeProposeFormDetails).then(function(proposeFormResponse){if($scope.modalOTP=!1,$rootScope.wordPressEnabled||($scope.proceedPaymentStatus=!0),proposeFormResponse.responseCode==$scope.p365Labels.responseCode.success1)proposeFormResponse.data.encryptedProposalId&&localStorageService.set("proposalIdEncrypted",proposeFormResponse.data.encryptedProposalId),1==imauticAutomation&&imatBikeProposal(localStorageService,$scope,"MakePayment",function(shortURLResponse){}),$scope.responseToken=proposeFormResponse.data,$scope.responseToken.paymentGateway=$scope.paymentURL,$scope.responseToken.businessLineId=$scope.p365Labels.businessLineType.bike,localStorageService.set("bikeReponseToken",$scope.responseToken),getDocUsingParam(RestAPI,$scope.p365Labels.transactionName.paymentService,$scope.responseToken,function(paymentDetails){if(paymentDetails.responseCode==$scope.p365Labels.responseCode.success){$scope.paymentServiceResponse=paymentDetails.data;var paymentURLParamListLength=$scope.paymentServiceResponse.paramterList.length;if("GET"==$scope.paymentServiceResponse.method){$scope.paymentURLParam="?";paymentURLParamListLength=$scope.paymentServiceResponse.paramterList.length;for(var i=0;i<paymentURLParamListLength;i++)$scope.paymentURLParam+=i<paymentURLParamListLength-1?$scope.paymentServiceResponse.paramterList[i].name+"="+$scope.paymentServiceResponse.paramterList[i].value+"&":$scope.paymentServiceResponse.paramterList[i].name+"="+$scope.paymentServiceResponse.paramterList[i].value;$scope.redirectForPayment=!0,$scope.loading=!1,$scope.modalIPOS=!0}else $scope.paymentURLParam=null,$scope.redirectForPayment=!0,$scope.loading=!1,$scope.modalIPOS=!0}else{$scope.loading=!1,$rootScope.wordPressEnabled&&($scope.proceedPaymentStatus=!0);paymentDetails.responseCode,$scope.p365Labels.validationMessages.buyScreenCnfrmError.replace("INSURER_NAME",$scope.selectedProduct.insuranceCompany);proposeFormResponse.message?$rootScope.P365Alert("Policies365",proposeFormResponse.message,"Ok"):$rootScope.P365Alert("Policies365",proposeFormResponse.data,"Ok")}});else if(proposeFormResponse.responseCode==$scope.p365Labels.responseCode.error||proposeFormResponse.responseCode==$scope.p365Labels.responseCode.serverError1)$scope.loading=!1,$rootScope.wordPressEnabled&&($scope.proceedPaymentStatus=!0),proposeFormResponse.responseCode==$scope.p365Labels.responseCode.serverError1&&proposeFormResponse.message?$rootScope.P365Alert("Policies365",proposeFormResponse.message,"Ok"):$rootScope.P365Alert("Policies365",proposeFormResponse.data,"Ok");else if(proposeFormResponse.responseCode==$scope.p365Labels.responseCode.prevPolicyExpired)$scope.loading=!1,$scope.modalPrevPolExpiredError=!0,$scope.prevPolicyExpiredError=proposeFormResponse.message;else{1==imauticAutomation&&imatEvent("ProposalFailed"),$scope.loading=!1,$rootScope.wordPressEnabled&&($scope.proceedPaymentStatus=!0);proposeFormResponse.responseCode,$scope.p365Labels.validationMessages.buyScreenCnfrmError.replace("INSURER_NAME",$scope.selectedProduct.insuranceCompany);proposeFormResponse.message?$rootScope.P365Alert("Policies365",proposeFormResponse.message,"Ok"):$rootScope.P365Alert("Policies365",proposeFormResponse.data,"Ok")}})):($scope.proceedPaymentStatus=!0,$rootScope.P365Alert("Policies365",$scope.p365Labels.errorMessage.generalisedErrMsg,"Ok"))},$scope.loadPlaceholder=function(){setTimeout(function(){$(".buyform-control").on("focus blur",function(e){$(this).parents(".buyform-group").toggleClass("focusedInput","focus"===e.type||this.value.length>0)}).trigger("blur")},100)},$scope.fillDataForRenewal=function(){$scope.proposerDetails=localStorageService.get("BikeProposalResForRenewal").proposerDetails,$scope.vehicleDetails=localStorageService.get("BikeProposalResForRenewal").vehicleDetails,$scope.nominationDetails=localStorageService.get("BikeProposalResForRenewal").nominationDetails;for(var i=0;i<$scope.genericRelationshipList.length;i++)if($scope.genericRelationshipList[i].relationship==$scope.nominationDetails.nominationRelation){$scope.nominationInfo.nominationRelation=$scope.genericRelationshipList[i];break}$scope.appointeeDetails=localStorageService.get("BikeProposalResForRenewal").appointeeDetails;for(i=0;i<$scope.genericRelationshipList.length;i++)if($scope.genericRelationshipList[i].relationship==$scope.appointeeDetails.appointeeRelation){$scope.validateNomineeDateOfBirth(),$scope.appointeeInfo.appointeeRelation=$scope.genericRelationshipList[i];break}$scope.insuranceDetails=localStorageService.get("BikeProposalResForRenewal").insuranceDetails;for(i=0;i<$scope.carrierList.length;i++)if($scope.carrierList[i].carrierName==$scope.insuranceDetails.insurerName){$scope.insuranceInfo.insurerName=$scope.carrierList[i];break}},$scope.closeModal=function(){$scope.modalPrevPolExpiredError=!1},$scope.prepopulateFields=function(){if($scope.authenticate.enteredOTP="",$scope.vehicleDetails.registrationNumber=angular.copy($rootScope.vehicleDetails.registrationNumber),$scope.vehicleInfo.registrationNumber="",$location.search().isForRenewal&&$scope.fillDataForRenewal(),$rootScope.vehicleDetails.registrationNumber&&0==$rootScope.showBikeRegAreaStatus){var formatRegisCode=$rootScope.vehicleDetails.registrationNumber;$scope.vehicleInfo.registrationNumber=formatRegisCode.substring(4)}$scope.proposerDetails.GSTIN&&$scope.checkGSTINNumber($scope.proposerDetails.GSTIN),$scope.insuranceDetails.ncb=$scope.selectedProductInputParam.quoteParam.ncb;var regDate=$scope.selectedProductInputParam.vehicleInfo.dateOfRegistration.split("/");if($scope.displayRegistrationDate=regDate[0]+"-"+monthListGeneric[Number(regDate[1])-1]+"-"+regDate[2],$scope.panCardStaus=Number($scope.selectedProduct.grossPremium)>=1e5,$scope.insuranceDetails.prevPolicyType=policyTypesGeneric[0].display,$scope.vehicleDetails.RTOCode=$scope.selectedProductInputParam.vehicleInfo.RTOCode,$scope.riderStatus=!1,null!=$scope.selectedProduct.ridersList&&"undefined"!=String($scope.selectedProduct.ridersList))for(var i=0;i<$scope.selectedProduct.ridersList.length;i++)null!=$scope.selectedProduct.ridersList[i].riderValue&&($scope.riderStatus=!0,delete $scope.selectedProduct.ridersList[i].$$hashKey);"expired"==$scope.vehicleInfo.policyStatus.policyType&&"> 90 days"==$scope.vehicleInfo.policyStatus.displayText2?$scope.showPaymentButton=!1:$scope.showPaymentButton=!0,$scope.proposerAgeValue=function(personAge){$scope.proposerDetails.personAge=personAge,$scope.proposerDetails.personAgeCaption=personAge<=35?"Up to 35":personAge>35&&personAge<=45?"35 to 45":"More than 45"},$scope.proposerAgeValue($scope.selectedProductInputParam.quoteParam.personAge),$scope.calcDefaultAreaDetails=function(areaCode){if(null!=areaCode&&"undefined"!=String(areaCode)&&String(areaCode).length>0){var docType=$scope.p365Labels.documentType.cityDetails,carrierId=$scope.selectedProduct.carrierId;$http.get(getSearchServiceLink+docType+"&q="+areaCode+"&id="+carrierId).then(function(response){var areaDetails=JSON.parse(response.data);areaDetails.responseCode==$scope.p365Labels.responseCode.success&&$scope.onSelectPinOrArea(areaDetails.data[0])})}},$scope.calcDefaultRegAreaDetails=function(areaCode){if(null!=areaCode&&"undefined"!=String(areaCode)&&String(areaCode).length>0){var docType=$scope.p365Labels.documentType.cityDetails,carrierId=$scope.selectedProduct.carrierId;$http.get(getSearchServiceLink+docType+"&q="+areaCode+"&id="+carrierId).then(function(response){var areaDetails=JSON.parse(response.data);areaDetails.responseCode==$scope.p365Labels.responseCode.success&&$scope.onSelectVehiclePinOrArea(areaDetails.data[0])})}},localStorageService.get("commAddressDetails")?($scope.proposerDetails.communicationAddress=localStorageService.get("commAddressDetails"),$scope.proposerDetails.communicationAddress.comPincode=localStorageService.get("commAddressDetails").pincode,$scope.proposerDetails.communicationAddress.comDisplayArea=localStorageService.get("commAddressDetails").displayArea,$scope.proposerDetails.communicationAddress.comCity=localStorageService.get("commAddressDetails").city,$scope.proposerDetails.communicationAddress.comState=localStorageService.get("commAddressDetails").state):($scope.proposerDetails.communicationAddress.comPincode="",$scope.proposerDetails.communicationAddress.comDoorNo="",$scope.proposerDetails.communicationAddress.comDisplayArea="",$scope.proposerDetails.communicationAddress.comCity="",$scope.proposerDetails.communicationAddress.comState=""),localStorageService.get("bikeRegAddress")?($scope.vehicleDetails.registrationAddress.regPincode=localStorageService.get("bikeRegAddress").pincode,$scope.vehicleDetails.registrationAddress.regDisplayArea=localStorageService.get("bikeRegAddress").displayArea,$scope.vehicleDetails.registrationAddress.regCity=localStorageService.get("bikeRegAddress").city,$scope.vehicleDetails.registrationAddress.regState=localStorageService.get("bikeRegAddress").state):($scope.vehicleDetails.registrationAddress.regPincode="",$scope.vehicleDetails.registrationAddress.regDoorNo="",$scope.vehicleDetails.registrationAddress.regDisplayArea="",$scope.vehicleDetails.registrationAddress.regCity="",$scope.vehicleDetails.registrationAddress.regState=""),$scope.calcDefaultRegAreaDetails($scope.vehicleDetails.registrationAddress.regPincode)},$scope.getRelationshipList=function(){getDocUsingId(RestAPI,"relationshipdetailslist",function(relationList){$scope.genericRelationshipList=relationList.relationships,localStorageService.get("selectedBikeDetails")&&($scope.vehicleInfo=localStorageService.get("selectedBikeDetails")),$scope.proposerDetails.gender="Male",$scope.proposerDetails.salutation="Mr",$scope.quoteUserInfo&&($scope.proposerDetails.emailId="undefined"!==String($scope.quoteUserInfo.emailId)?$scope.quoteUserInfo.emailId:$scope.proposerDetails.emailId,$scope.proposerDetails.mobileNumber="undefined"!==String($scope.quoteUserInfo.mobileNumber)?$scope.quoteUserInfo.mobileNumber:$scope.proposerDetails.mobileNumber,$scope.proposerDetails.lastName="undefined"!==String($scope.quoteUserInfo.lastName)?$scope.quoteUserInfo.lastName:$scope.proposerDetails.lastName,$scope.proposerDetails.firstName="undefined"!==String($scope.quoteUserInfo.firstName)?$scope.quoteUserInfo.firstName:$scope.proposerDetails.firstName),$scope.proposerDetails.dateOfBirth=$scope.selectedProductInputParam.vehicleInfo.dateOfBirth;var nominationDateOfBirth=new Date((new Date).setYear(Number((new Date).getFullYear())-35));convertDateFormatToString(nominationDateOfBirth,function(formattedDOB){$scope.nominationDetails.nomDateOfBirth=formattedDOB,$scope.validateNomineeDateOfBirth()}),$scope.vehicleDetails.isVehicleAddressSameAsCommun=!1,$scope.vehicleDetails.purchasedLoan="No",$scope.prepopulateFields(),$scope.prevPolicyStatus(),$scope.changeRegAddress(),$scope.loadPlaceholder()})},$scope.validateRegistrationNumber=function(registrationNumber){"undefined"!=String(registrationNumber)&&((registrationNumber=registrationNumber.replace(/[^a-zA-Z0-9]/gi,"")).trim().match(/^[a-zA-Z]{0,3}[0-9]{1,4}$/)&&registrationNumber.trim().length<=7&&registrationNumber.trim().length>=2?($scope.regNumStatus=!1,$scope.vehicleDetailsForm.RegistrationNumber.$setValidity("RegistrationNumber",!0),$scope.productValidation.regNumberReQuoteCalc?$scope.calcQuoteOnRegistrationNumber(registrationNumber):$scope.productValidation.renewPolicyQuoteCalc&&"renew"==$scope.selectedProductInputParam.quoteParam.policyType&&$scope.selectedProduct.carrierId==$scope.insuranceDetails.insurerId&&(isPrevPolSameAsNew=!0,$scope.calcQuoteOnRegistrationNumber(registrationNumber))):($scope.regNumStatus=!0,$scope.vehicleDetailsForm.RegistrationNumber.$setValidity("RegistrationNumber",!1)),$scope.vehicleInfo.registrationNumber=registrationNumber.trim())},$scope.calcQuoteOnRegistrationNumber=function(regNumber){$scope.selectedProductInputParamCopy=angular.copy($scope.selectedProductInputParam),$scope.selectedProductInputParamCopy.vehicleInfo.registrationNumber?$scope.registrationNumberCopy=$scope.selectedProductInputParam.vehicleInfo.registrationNumber.toUpperCase():$scope.registrationNumberCopy="",$scope.newRegistrationNumber=$scope.vehicleDetails.RTOCode.toUpperCase()+regNumber.toUpperCase(),$scope.newRegistrationNumber!=$scope.registrationNumberCopy&&($scope.selectedProductInputParam=localStorageService.get("bikeQuoteInputParamaters"),$rootScope.P365Confirm($scope.p365Labels.common.p365prompt,$scope.p365Labels.common.regNumberChangeMsg,"No","Yes",function(confirmStatus){if(confirmStatus)$scope.loading=!0,$scope.selectedProductInputParam.vehicleInfo.registrationNumber=$scope.newRegistrationNumber,$scope.bikeQuoteRequestFormation(),$scope.quote.isPolicyRenewed=!1,isPolicyRenewed=!1,isPrevPolSameAsNew&&($scope.quote.isPolicyRenewed=!0,isPolicyRenewed=!0,$scope.quote.previousPolicyInsurerDetails={},$scope.quote.previousPolicyInsurerDetails.insurerId=$scope.insuranceDetails.insurerId,$scope.quote.previousPolicyInsurerDetails.insurerName=$scope.insuranceDetails.insurerName,$scope.quote.previousPolicyInsurerDetails.policyNumber=$scope.insuranceDetails.policyNumber),$scope.calculateBikeQuote();else if($scope.selectedProductInputParam.vehicleInfo=$scope.selectedProductInputParamCopy.vehicleInfo,$scope.selectedProductInputParam.vehicleInfo.registrationNumber){var formatVehicleCode=$scope.selectedProductInputParam.vehicleInfo.registrationNumber;$scope.vehicleInfo.registrationNumber=formatVehicleCode.substring(4)}else $scope.vehicleInfo.registrationNumber="",delete $scope.selectedProductInputParam.vehicleInfo.registrationNumber}))},$scope.checkGSTINNumber=function(selGSTIN){$scope.productValidation.regNumberReQuoteCalc&&selGSTIN&&$scope.calcQuoteOnGSTINNumber(selGSTIN)},$scope.calcQuoteOnGSTINNumber=function(selGSTIN){$scope.selectedProductInputParamCopy=angular.copy($scope.selectedProductInputParam),$scope.selectedProductInputParamCopy.GSTIN?$scope.GSTINCopy=$scope.selectedProductInputParamCopy.GSTIN:$scope.GSTINCopy="",$scope.newGSTINNumber=selGSTIN,$scope.newGSTINNumber!=$scope.GSTINCopy&&($scope.selectedProductInputParam=localStorageService.get("bikeQuoteInputParamaters"),$scope.selectedProductInputParam.GSTIN=$scope.newGSTINNumber,$scope.selectedProductInputParamCopy.vehicleInfo.registrationNumber&&($scope.selectedProductInputParam.vehicleInfo.registrationNumber=$scope.selectedProductInputParamCopy.vehicleInfo.registrationNumber),$rootScope.P365Confirm($scope.p365Labels.common.p365prompt,$scope.p365Labels.common.GSTINNumberChangeMsg,"No","Yes",function(confirmStatus){confirmStatus?($scope.loading=!0,$scope.bikeQuoteRequestFormation(),localStorageService.set("bikeQuoteInputParamaters",$scope.quote),RestAPI.invoke($scope.p365Labels.getRequest.quoteBike,$scope.quote).then(function(proposeFormResponse){if($scope.bikeRecalculateQuoteRequest=[],proposeFormResponse.responseCode==$scope.p365Labels.responseCode.success1)$scope.responseRecalculateCodeList=[],$scope.quoteCalcResponse=[],"undefined"!=String($scope.quoteCalcResponse)&&$scope.quoteCalcResponse.length>0&&($scope.quoteCalcResponse.length=0),localStorageService.set("bikeQuoteInputParamaters",$scope.quote),localStorageService.set("BIKE_UNIQUE_QUOTE_ID",proposeFormResponse.QUOTE_ID),localStorageService.set("BIKE_UNIQUE_QUOTE_ID_ENCRYPTED",proposeFormResponse.encryptedQuoteId),$scope.bikeRecalculateQuoteRequest=proposeFormResponse.data,angular.forEach($scope.bikeRecalculateQuoteRequest,function(obj,i){var request={},header={};header.messageId=messageIDVar,header.campaignID=campaignIDVar,header.source=sourceOrigin,header.transactionName=getBikeQuoteResult,header.deviceId=deviceIdOrigin,request.header=header,request.body=obj,$http({method:"POST",url:getQuoteCalcLink,data:request}).success(function(callback,status){var carQuoteResponse=JSON.parse(callback);if($scope.responseRecalculateCodeList.push(carQuoteResponse.responseCode),carQuoteResponse.responseCode==$scope.p365Labels.responseCode.success1)null!=carQuoteResponse.data&&carQuoteResponse.data.quotes[0].carrierId==$scope.selectedProduct.carrierId&&carQuoteResponse.data.quotes[0].productId==$scope.selectedProduct.productId&&($scope.loading=!1,angular.copy($scope.selectedProductInputParam,$scope.selectedProductInputParamCopy),$scope.premiumDetails.selectedProductDetails=carQuoteResponse.data.quotes[0],$scope.selectedProduct=carQuoteResponse.data.quotes[0]),$scope.quoteCalcResponse.push(carQuoteResponse.data.quotes[0]);else if($scope.loading=!1,null!=carQuoteResponse.data&&carQuoteResponse.data.quotes[0].carrierId==$scope.selectedProduct.carrierId&&carQuoteResponse.data.quotes[0].productId==$scope.selectedProduct.productId){$scope.selectedProductInputParam=localStorageService.get("bikeQuoteInputParamaters"),$scope.selectedProductInputParam.vehicleInfo.registrationNumber="",$scope.vehicleInfo.registrationNumber="",$scope.proposerDetails.GSTIN="",$scope.selectedProductInputParam.vehicleInfo.registrationNumber&&delete $scope.selectedProductInputParam.vehicleInfo.registrationNumber,localStorageService.set("bikeQuoteInputParamaters",$scope.selectedProductInputParam);var screenCnfrmError=$scope.selectedProduct.insuranceCompany+""+$scope.p365Labels.errorMessage.GSTINNumberScreenConfirmErrorMsg;$rootScope.P365Alert($scope.p365Labels.common.p365prompt,screenCnfrmError,"Ok")}}).error(function(data,status){delete $scope.selectedProductInputParam.vehicleInfo.registrationNumber,$scope.responseRecalculateCodeList.push($scope.p365Labels.responseCode.systemError),$scope.loading=!1})});else{$scope.loading=!1,$scope.selectedProductInputParam=localStorageService.get("bikeQuoteInputParamaters"),$scope.vehicleInfo.registrationNumber="",$scope.proposerDetails.GSTIN="",$scope.selectedProductInputParam.vehicleInfo.registrationNumber&&delete $scope.selectedProductInputParam.vehicleInfo.registrationNumber,localStorageService.set("bikeQuoteInputParamaters",$scope.selectedProductInputParam);var screenCnfrmError=$scope.selectedProduct.insuranceCompany+""+$scope.p365Labels.errorMessage.GSTINNumberScreenConfirmErrorMsg;$rootScope.P365Alert($scope.p365Labels.common.p365prompt,screenCnfrmError,"Ok")}})):($scope.selectedProductInputParam=$scope.selectedProductInputParamCopy,$scope.selectedProductInputParam.GSTIN?$scope.proposerDetails.GSTIN=$scope.selectedProductInputParam.GSTIN:$scope.proposerDetails.GSTIN="")}))},$scope.scheduleVehicleInspection=function(){$location.path("/FourWheelerscheduleInspection")},$rootScope.signout=function(){$rootScope.userLoginStatus=!1;var userLoginInfo={username:""};userLoginInfo.status=$rootScope.userLoginStatus,localStorageService.set("userLoginInfo",userLoginInfo),$location.path("/quote")},$scope.missionCompled=function(){$scope.loading=!1},$scope.getCarrierList=function(){getListFromDB(RestAPI,"",$scope.p365Labels.documentType.carCarrier,$scope.p365Labels.request.findAppConfig,function(bikeCarrierList){bikeCarrierList.responseCode==$scope.p365Labels.responseCode.success?($scope.carrierList=bikeCarrierList.data,$scope.getRelationshipList(),$rootScope.loading=!1):$rootScope.P365Alert("Policies365",$scope.p365Labels.errorMessage.serverError,"Ok")})},$scope.redirectToPaymentGateway=function(){$scope.paymentURLParam?$rootScope.affilateUser||$rootScope.agencyPortalEnabled?$window.top.location.href=$scope.paymentServiceResponse.paymentURL+$scope.paymentURLParam:$window.location.href=$scope.paymentServiceResponse.paymentURL+$scope.paymentURLParam:$timeout(function(){$scope.paymentForm.setAction($scope.paymentServiceResponse.paymentURL),$scope.paymentForm.commit(),$scope.$apply()},100)},$scope.sendSMS=function(){var validateAuthParam={paramMap:{}};validateAuthParam.mobileNumber=$scope.proposerDetails.mobileNumber,validateAuthParam.paramMap.firstName=$scope.proposerDetails.firstName,validateAuthParam.funcType="ProposalFilled",getDocUsingParam(RestAPI,$scope.p365Labels.transactionName.sendSMS,validateAuthParam,function(createOTP){$scope.submitProposalClicked||(createOTP.responseCode,$scope.p365Labels.responseCode.success,$scope.redirectToPaymentGateway())})},$scope.sendProposalEmail=function(){var proposalDetailsEmail={paramMap:{}};proposalDetailsEmail.funcType=$scope.p365Labels.functionType.proposalDetailsTemplate,proposalDetailsEmail.username=$scope.proposerDetails.emailId.trim(),proposalDetailsEmail.isBCCRequired="Y",proposalDetailsEmail.paramMap.customerName=$scope.proposerDetails.firstName.trim()+" "+$scope.proposerDetails.lastName.trim(),proposalDetailsEmail.paramMap.selectedPolicyType=$scope.p365Labels.insuranceType.bike,$scope.iposRequest.docId?proposalDetailsEmail.paramMap.quoteId=$scope.iposRequest.docId:proposalDetailsEmail.paramMap.quoteId=localStorageService.get("BIKE_UNIQUE_QUOTE_ID"),proposalDetailsEmail.paramMap.premiumAmount=String($scope.selectedProduct.grossPremium),proposalDetailsEmail.paramMap.docId=String($scope.responseToken.proposalId),proposalDetailsEmail.paramMap.LOB=String($scope.p365Labels.businessLineType.bike),console.log("$rootScope.encryptedProposalID in bike is:",$rootScope.encryptedProposalID),$scope.shortenURL?proposalDetailsEmail.paramMap.url=$scope.shortURLResponse.data.shortURL:($scope.longURL=""+sharePaymentLink+localStorageService.get("proposalIdEncrypted")+"&lob=2",proposalDetailsEmail.paramMap.url=$scope.longURL),RestAPI.invoke($scope.p365Labels.transactionName.sendEmail,proposalDetailsEmail).then(function(emailResponse){if(emailResponse.responseCode==$scope.p365Labels.responseCode.success)if($scope.sendSMS(),1==baseEnvEnabled&&1==agencyPortalEnabled){var frameURL=agencyPortalUrl+proposalDetailsEmail.paramMap.docId+"&lob="+proposalDetailsEmail.paramMap.LOB;$scope.URLforPayment=$sce.trustAsResourceUrl(frameURL),$scope.modalAP=!0,$scope.loading=!1}else $scope.redirectForPayment=!1,$scope.loading=!1,$scope.modalIPOS=!0;else $scope.sendSMS(),$rootScope.P365Alert("Policies365",$scope.p365Labels.errorMessage.emailSentFailed,"Ok"),$scope.loading=!1})},$scope.submitProposalData=function(){if($scope.bikeProposalDetails={},$scope.submitProposalClicked=!0,$scope.proposalInfo(),$scope.bikeProposeFormDetails.QUOTE_ID=$scope.iposRequest.docId,$scope.bikeProposeFormDetails.businessLineId=$scope.p365Labels.businessLineType.bike,$scope.bikeProposeFormDetails.source=sourceOrigin,$scope.bikeProposeFormDetails.requestSource=sourceOrigin,isPolicyRenewed&&($scope.bikeProposeFormDetails.isPolicyRenewed=isPolicyRenewed),$scope.loading=!0,saveProposal)RestAPI.invoke($scope.transactionSaveProposal,$scope.bikeProposeFormDetails).then(function(proposeFormResponse){proposeFormResponse.responseCode==$scope.p365Labels.responseCode.success?($scope.proposalId=proposeFormResponse.data,localStorageService.set("proposalId",$scope.proposalId),$scope.loading=!1,saveProposal=!1):($scope.loading=!1,saveProposal=!1)});else{if(delete $scope.bikeProposeFormDetails.proposalId,$rootScope.agencyPortalEnabled){const localdata=JSON.parse(localStorage.getItem("finalLocalStorage"));localdata&&($scope.bikeProposeFormDetails.userName=localdata.username,$scope.bikeProposeFormDetails.agencyId=localdata.agencyId),localStorage.getItem("desiSkillUniqueId")&&(localStorage.getItem("desiSkillUserId")&&($scope.bikeProposeFormDetails.userName=localStorage.getItem("desiSkillUserId")),$scope.bikeProposeFormDetails.agencyId=localStorage.getItem("desiSkillAgencyId"))}$scope.bikeProposeFormDetails.QUOTE_ID?RestAPI.invoke("bikeProposal",$scope.bikeProposeFormDetails).then(function(proposeFormResponse){if(proposeFormResponse.responseCode==$scope.p365Labels.responseCode.success1)if($scope.responseToken=proposeFormResponse.data,$scope.responseToken.paymentGateway=$scope.paymentURL,$scope.responseToken.businessLineId=$scope.p365Labels.businessLineType.bike,localStorageService.set("bikeReponseToken",$scope.responseToken),localStorageService.set("proposalIdEncrypted",proposeFormResponse.data.encryptedProposalId),$rootScope.encryptedProposalID=proposeFormResponse.data.encryptedProposalId,$rootScope.encryptedLOB=$scope.p365Labels.businessLineType.bike,1==imauticAutomation)imatBikeProposal(localStorageService,$scope,"SubmitProposal",function(shortURLResponse){shortURLResponse.responseCode==$scope.p365Labels.responseCode.success?($scope.shortURLResponse=shortURLResponse,$scope.shortURLResponse.data.shortURL?$scope.shortenURL=$scope.shortURLResponse.data.shortURL:$scope.longURL=""+sharePaymentLink+localStorageService.get("proposalIdEncrypted")+"&lob=2",$scope.sendProposalEmail()):($scope.longURL=""+sharePaymentLink+localStorageService.get("proposalIdEncrypted")+"&lob=2",$scope.sendProposalEmail(),$scope.loading=!1)});else{var body={};body.longURL=sharePaymentLink+String($scope.responseToken.proposalId)+"&lob="+String($scope.p365Labels.businessLineType.bike),$scope.longURL=body.longURL,$http({method:"POST",url:getShortURLLink,data:body}).success(function(shortURLResponse){shortURLResponse.responseCode==$scope.p365Labels.responseCode.success?($scope.shortURLResponse=shortURLResponse,$scope.shortenURL=$scope.shortURLResponse.data.shortURL,$scope.sendProposalEmail()):($scope.longURL=""+sharePaymentLink+localStorageService.get("proposalIdEncrypted")+"&lob=2",$scope.sendProposalEmail(),$scope.loading=!1)})}else if(proposeFormResponse.responseCode==$scope.p365Labels.responseCode.error||proposeFormResponse.responseCode==$scope.p365Labels.responseCode.serverError1)$scope.loading=!1,$rootScope.wordPressEnabled&&($scope.proceedPaymentStatus=!0),proposeFormResponse.responseCode==$scope.p365Labels.responseCode.serverError1&&proposeFormResponse.message?$rootScope.P365Alert("Policies365",proposeFormResponse.message,"Ok"):$rootScope.P365Alert("Policies365",proposeFormResponse.data,"Ok");else if(proposeFormResponse.responseCode==$scope.p365Labels.responseCode.prevPolicyExpired)$scope.loading=!1,$scope.modalPrevPolExpiredError=!0,$scope.prevPolicyExpiredError=proposeFormResponse.message;else{1==imauticAutomation&&imatEvent("ProposalFailed"),$scope.loading=!1,$rootScope.wordPressEnabled&&($scope.proceedPaymentStatus=!0);proposeFormResponse.responseCode,$scope.p365Labels.validationMessages.buyScreenCnfrmError.replace("INSURER_NAME",$scope.selectedProduct.insuranceCompany);proposeFormResponse.message?$rootScope.P365Alert("Policies365",proposeFormResponse.message,"Ok"):$rootScope.P365Alert("Policies365",proposeFormResponse.data,"Ok")}}):($scope.loading=!1,$rootScope.P365Alert("Policies365",$scope.p365Labels.errorMessage.generalisedErrMsg,"Ok"))}},$scope.sendPaymentSuccessEmail=function(){var proposalDetailsEmail={paramMap:{}};proposalDetailsEmail.funcType=$scope.p365Labels.functionType.proposalDetailsTemplate,console.log("$scope.longURL in send email is: ",$scope.longURL),console.log("$rootScope.encryptedProposalID in bike is:",$rootScope.encryptedProposalID),$scope.shortenURL?proposalDetailsEmail.paramMap.url=$scope.shortURLResponse.data.shortURL:($scope.longURL=""+sharePaymentLink+localStorageService.get("proposalIdEncrypted")+"&lob=2",proposalDetailsEmail.paramMap.url=$scope.longURL),proposalDetailsEmail.username=$scope.proposerDetails.emailId.trim(),proposalDetailsEmail.paramMap.customerName=$scope.proposerDetails.firstName.trim()+" "+$scope.proposerDetails.lastName.trim(),proposalDetailsEmail.paramMap.selectedPolicyType=$scope.p365Labels.insuranceType.car,RestAPI.invoke($scope.p365Labels.transactionName.sendEmail,proposalDetailsEmail).then(function(emailResponse){emailResponse.responseCode,$scope.p365Labels.responseCode.success,$scope.sendSMS()})},$scope.hideModalIPOS=function(){$scope.modalIPOS=!1,1==$scope.redirectForPayment&&$scope.sendPaymentSuccessEmail()},$scope.hideModalAP=function(){$scope.modalAP=!1};var data={};if(localStorageService.get("renewPolicyDetails")){var renewPolicyDetails=localStorageService.get("renewPolicyDetails");data.proposalId=renewPolicyDetails.productId}data.messageId=messageIDVar,RestAPI.invoke("getLeadInfo",data).then(function(callback){if(1e3==callback.responseCode)if(callback.data&&(callback.data.proposerDetails&&0!==Object.keys(callback.data.proposerDetails).length&&callback.data.proposerDetails.communicationAddress&&($scope.proposerDetails.communicationAddress.comCity=callback.data.proposerDetails.communicationAddress.comCity,$scope.proposerDetails.communicationAddress.comDisplayArea=callback.data.proposerDetails.communicationAddress.comDisplayArea,$scope.proposerDetails.communicationAddress.comPincode=callback.data.proposerDetails.communicationAddress.comPincode,$scope.proposerDetails.communicationAddress.comState=callback.data.proposerDetails.communicationAddress.comState,localStorageService.set("commAddressDetails",$scope.proposerDetails.communicationAddress)),callback.data.vehicleDetails&&0!==Object.keys(callback.data.vehicleDetails).length&&($scope.vehicleDetails.registrationAddress.regDoorNo=callback.data.vehicleDetails.doorNo,$scope.vehicleDetails.purchasedLoan=callback.data.vehicleDetails.purchasedLoan,$scope.vehicleDetails.isVehicleAddressSameAsCommun=callback.data.vehicleDetails.isVehicleAddressSameAsCommun,$scope.vehicleDetails.chassisNumber=callback.data.vehicleDetails.chassisNumber,$scope.vehicleDetails.registrationNumber=callback.data.vehicleDetails.registrationNumber,callback.data.vehicleDetails.registrationAddress&&($scope.vehicleDetails.registrationAddress.regCity=callback.data.vehicleDetails.registrationAddress.regCity,$scope.vehicleDetails.registrationAddress.regDisplayArea=callback.data.vehicleDetails.registrationAddress.regDisplayArea,$scope.vehicleDetails.registrationAddress.regPincode=callback.data.vehicleDetails.registrationAddress.regPincode,$scope.vehicleDetails.registrationAddress.regState=callback.data.vehicleDetails.registrationAddress.regState,$rootScope.vehicleDetails.registrationNumber=callback.data.vehicleDetails.registrationNumber,$rootScope.showCarRegAreaStatus=!1)),callback.data.appointeeDetails&&0!==Object.keys(callback.data.appointeeDetails).length&&($scope.appointeeDetails=callback.data.appointeeDetails),callback.data.nominationDetails&&0!==Object.keys(callback.data.nominationDetails).length&&($scope.nominationDetails.nomDateOfBirth=callback.data.nominationDetails.nomDateOfBirth,$scope.nominationDetails.nomFirstName=callback.data.nominationDetails.nomFirstName,$scope.nominationDetails.nomLastName=callback.data.nominationDetails.nomLastName,$scope.nominationDetails.nominationRelation=callback.data.nominationDetails.nominationRelation,$scope.nominationDetails.nominationRelationId=callback.data.nominationDetails.nominationRelationId,$scope.nominationDetails.nomPersonAge=callback.data.nominationDetails.nomPersonAge),callback.data.insuranceDetails&&0!==Object.keys(callback.data.insuranceDetails).length&&($scope.insuranceDetails.policyNumber=callback.data.insuranceDetails.policyNumber,$scope.insuranceDetails.insuranceType=callback.data.insuranceDetails.insuranceType,$scope.insuranceDetails.ncb=callback.data.insuranceDetails.ncb,$scope.insuranceDetails.insurerId=callback.data.insuranceDetails.insurerId,$scope.insuranceDetails.insurerName=callback.data.insuranceDetails.insurerName,$scope.insuranceDetails.prevPolicyType=callback.data.insuranceDetails.prevPolicyType),callback.data.insuranceInfo&&0!==Object.keys(callback.data.insuranceInfo).length&&($scope.insuranceInfo=callback.data.insuranceInfo)),$scope.iposRequest.docId)$scope.p365Labels=bikePreoposalLabels,$rootScope.baseEnvEnabled&&!$rootScope.wordPressEnabled&&($rootScope.iquoteRedirectionURL="/sharefromAPI",$scope.isIquoteEnabled=!1,$rootScope.iquoteRequestParam={lob:$scope.p365Labels.businessLineType.bike,createLeadFlag:$location.search().createLeadFlag,leaddetails:$location.search().leaddetails,orgName:$location.search().orgName},$rootScope.iquoteRequestParam.docId=$scope.iposRequest.docId,$rootScope.iposRedirectionURL="/proposalresdata",$rootScope.iposRequestParam={proposalId:$location.search().proposalId,messageId:$location.search().messageId,leaddetails:$location.search().leaddetails,orgName:$location.search().orgName},$rootScope.isActiveTab="ipos",$rootScope.mainTabsMenu=[{url:$rootScope.iquoteRedirectionURL,requestParam:$rootScope.iquoteRequestParam,className:"iQuoteTab tabs wp_border32",name:"iquote",title:"iQuote",active:$scope.isIquoteEnabled},{url:$rootScope.iposRedirectionURL,requestParam:$rootScope.iposRequestParam,className:"iPosTab tabs wp_border32",name:"ipos",title:"iPos",active:!$scope.isIquoteEnabled}]),$scope.quoteUserInfo=localStorageService.get("quoteUserInfo"),$rootScope.vehicleDetails={},$scope.bikeInsuranceTypes=bikeInsuranceTypeGeneric,RestAPI.invoke("quoteDataReader",$scope.iposRequest).then(function(quoteData){if(quoteData.responseCode==$scope.p365Labels.responseCode.success){$scope.quoteInfo=quoteData.data;var buyScreenParam={documentType:"proposalScreenConfig"};$scope.selectedProductInputParam=$scope.quoteInfo.bikeQuoteRequest,$scope.vehicleInfo=$scope.selectedProductInputParam.vehicleInfo,$scope.insuranceDetails.insuranceType=$scope.quoteInfo.bikeQuoteRequest.quoteParam.policyType,$scope.quoteCalcResponse=$scope.quoteInfo.bikeQuoteResponse,$scope.vehicleInfo.PreviousPolicyStartDate&&($scope.selectedPreviousPolicyStartDate=$scope.vehicleInfo.PreviousPolicyStartDate);for(var i=0;i<$scope.quoteCalcResponse.length;i++)if($scope.quoteCalcResponse[i].carrierId==$scope.iposRequest.carrierId){$scope.premiumDetails.selectedProductDetails=$scope.quoteCalcResponse[i],$scope.selectedProduct=$scope.premiumDetails.selectedProductDetails;break}$scope.changeInsuranceCompany=function(){$location.path("/buyTwoWheeler").search({quoteId:localStorageService.get("BIKE_UNIQUE_QUOTE_ID"),carrierId:$scope.premiumDetails.selectedProductDetails.carrierId,productId:$scope.premiumDetails.selectedProductDetails.productId,lob:localStorageService.get("selectedBusinessLineId")})};var todayDate=new Date,formatedTodaysDate=("0"+(todayDate.getMonth()+1).toString()).substr(-2)+"/"+("0"+todayDate.getDate().toString()).substr(-2)+"/"+todayDate.getFullYear().toString();getPolicyStatusList(formatedTodaysDate),$scope.policyStatusList=policyStatusListGeneric;var dateArray=$scope.selectedProductInputParam.vehicleInfo.PreviousPolicyExpiryDate.split("/");getDays(dateArray[2]+","+dateArray[1]+","+dateArray[0]);$rootScope.vehicleDetails.registrationNumber=$scope.selectedProductInputParam.vehicleInfo.registrationNumber,buyScreenParam.carrierId=Number($scope.iposRequest.carrierId);for(i=0;i<$scope.quoteInfo.bikeQuoteResponse.length;i++)Number($scope.iposRequest.carrierId)==$scope.quoteInfo.bikeQuoteResponse[i].carrierId?($scope.selectedProduct=$scope.quoteInfo.bikeQuoteResponse[i],buyScreenParam.productId=$scope.quoteInfo.bikeQuoteResponse[i].productId,buyScreenParam.businessLineId=$scope.p365Labels.businessLineType.bike):$rootScope.loading=!0;getDocUsingParam(RestAPI,$scope.p365Labels.transactionName.productDataReader,buyScreenParam,function(buyScreen){buyScreen.responseCode==$scope.p365Labels.responseCode.success&&(buyScreens=buyScreen.data,$scope.ownerDetailsTemplate=$sce.trustAsHtml(buyScreens.templates[0].template),$scope.nominationDetailsTemplate=$sce.trustAsHtml(buyScreens.templates[1].template),$scope.prevPolicyDetailsTemplate=$sce.trustAsHtml(buyScreens.templates[2].template),$scope.vehicleDetailsTemplate=$sce.trustAsHtml(buyScreens.templates[3].template),$scope.productValidation=buyScreens.validation,$scope.requestFormat=buyScreens.requestFormat,$scope.transactionName=buyScreens.transaction.proposalService.name,$scope.transactionNameCopy=$scope.transactionName,$scope.transactionSaveProposal="saveProposalService",$scope.transactionSubmitProposal="submitProposal",$scope.productValidation.PUCValidation?$scope.PUCValidation=!0:$scope.PUCValidation=!1,localStorageService.get("commAddressDetails")?($scope.proposerDetails.communicationAddress.comDisplayArea=localStorageService.get("commAddressDetails").displayArea,$scope.proposerDetails.communicationAddress.comPincode=localStorageService.get("commAddressDetails").pincode,$scope.proposerDetails.communicationAddress.comState=localStorageService.get("commAddressDetails").state,$scope.proposerDetails.communicationAddress.comCity=localStorageService.get("commAddressDetails").city):($scope.proposerDetails.communicationAddress.comDisplayArea="",$scope.proposerDetails.communicationAddress.comPincode="",$scope.proposerDetails.communicationAddress.comState="",$scope.proposerDetails.communicationAddress.comCity=""),$scope.initBikeBuyScreen(),$scope.getCarrierList())})}else $rootScope.P365Alert("Policies365",$scope.p365Labels.validationMessages.iposFormErrorMsg,"Ok")});else{$scope.p365Labels=bikePreoposalLabels,$scope.quoteUserInfo=localStorageService.get("quoteUserInfo"),$rootScope.title=$scope.p365Labels.policies365Title.bikeBuyQuote;localStorageService.get("quoteUserInfo");var buyScreens=localStorageService.get("buyScreen");$scope.selectedProduct=localStorageService.get("bikeSelectedProduct"),$scope.insuranceDetails.insuranceType=$scope.selectedProduct.policyType,$scope.selectedProductInputParam=localStorageService.get("bikeQuoteInputParamaters"),$scope.addOnCovers=localStorageService.get("addOnCoverListForbike"),"Individual"==$scope.selectedProductInputParam.quoteParam.ownedBy?$scope.personalDetailsFlag=!0:"Organization"==$scope.selectedProductInputParam.quoteParam.ownedBy?$scope.personalDetailsFlag=!1:$scope.personalDetailsFlag=!0,$scope.ownerDetailsTemplate=$sce.trustAsHtml(buyScreens.templates[0].template),$scope.nominationDetailsTemplate=$sce.trustAsHtml(buyScreens.templates[1].template),$scope.prevPolicyDetailsTemplate=$sce.trustAsHtml(buyScreens.templates[2].template),$scope.vehicleDetailsTemplate=$sce.trustAsHtml(buyScreens.templates[3].template),$scope.productValidation=buyScreens.validation,$scope.requestFormat=buyScreens.requestFormat,$scope.transactionName=buyScreens.transaction.proposalService.name,$scope.paymentURL=buyScreens.paymentUrl,$scope.productValidation.PUCValidation?$scope.PUCValidation=!0:$scope.PUCValidation=!1,localStorageService.get("commAddressDetails")?($scope.proposerDetails.communicationAddress.comDisplayArea=localStorageService.get("commAddressDetails").displayArea,$scope.proposerDetails.communicationAddress.comPincode=localStorageService.get("commAddressDetails").pincode,$scope.proposerDetails.communicationAddress.comState=localStorageService.get("commAddressDetails").state,$scope.proposerDetails.communicationAddress.comCity=localStorageService.get("commAddressDetails").city):($scope.proposerDetails.communicationAddress.comDisplayArea="",$scope.proposerDetails.communicationAddress.comPincode="",$scope.proposerDetails.communicationAddress.comState="",$scope.proposerDetails.communicationAddress.comCity=""),$scope.initBikeBuyScreen(),$scope.getCarrierList()}}),$scope.$watch("proposerDetails.communicationAddress.comDisplayArea",function(newValue){$scope.vehicleDetails.isVehicleAddressSameAsCommun&&$scope.changeRegAddress()}),$scope.$watch("proposerDetails.communicationAddress.comDoorNo",function(newValue){$scope.vehicleDetails.isVehicleAddressSameAsCommun&&$scope.changeRegAddress()}),$scope.$on("setCommAddressByAPI",function(){setTimeout(function(){var googleAddressObject=angular.copy($rootScope.chosenCommPlaceDetails);getAddressFields(googleAddressObject,function(fomattedAddress,formattedCity,formattedState,formattedPincode){$scope.proposerDetails.communicationAddress.comDisplayArea=fomattedAddress,"undefined"!=String(formattedPincode)&&""!=formattedPincode?$scope.calcDefaultAreaDetails(formattedPincode):($scope.proposerDetails.communicationAddress.comPincode="",$scope.proposerDetails.communicationAddress.comState="",$scope.proposerDetails.communicationAddress.comCity=""),$scope.$apply()})},10)}),$scope.$on("setRegAddressByAPI",function(){setTimeout(function(){var googleAddressObject=angular.copy($rootScope.chosenRegPlaceDetails);getAddressFields(googleAddressObject,function(fomattedAddress,formattedCity,formattedState,formattedPincode){$scope.vehicleDetails.registrationAddress.regDisplayArea=fomattedAddress,"undefined"!=String(formattedPincode)&&""!=formattedPincode?$scope.calcDefaultRegAreaDetails(formattedPincode):($scope.vehicleDetails.registrationAddress.regPincode="",$scope.vehicleDetails.registrationAddress.regState="",$scope.vehicleDetails.registrationAddress.regCity=""),$scope.$apply()})},10)}),$(".activateFooter").hide(),$(".activateHeader").hide()}]),angular.module("proposalresdatabike",["CoreComponentApp","LocalStorageModule","checklist-model","ngMessages"]).controller("proposalResponseDataBikeController",["$scope","$rootScope","$timeout","RestAPI","localStorageService","$location","$window","$http","$filter","$interval","$sce",function($scope,$rootScope,$timeout,RestAPI,localStorageService,$location,$window,$http,$filter,$interval,$sce){loadDatbase(function(){$scope.bikeProposalSectionHTML=wp_path+"buy/bike/html/BikeProposalSection.html",agencyPortalEnabled&&$location.search().rampUniqueId&&$location.search().url&&(localStorageService.set("rampUniqueId",$location.search().rampUniqueId),localStorageService.set("rampRedirectURL",$location.search().url)),$rootScope.customEnvEnabled||($rootScope.customEnvEnabled=customEnvEnabled),$rootScope.baseEnvEnabled||($rootScope.baseEnvEnabled=baseEnvEnabled),$scope.p365Labels=bikePreoposalLabels,$rootScope.loaderContent={businessLine:"2",header:"Bike Insurance",desc:$sce.trustAsHtml($scope.p365Labels.common.proverbBuyProduct)},$rootScope.title=$scope.p365Labels.policies365Title.bikeBuyQuote,$rootScope.loading=!0,$scope.changeCompanyName=!1,$scope.saveProposal=!1,$scope.saveNomineeDetails=!1,$scope.savePrevPolicyDetails=!1,$scope.modalPropScreenError=!1,$scope.modalPrevPolExpiredError=!1,$scope.redirectForPayment=!1,$scope.policytransaction={},$scope.proposerInfo={},$scope.proposerDetails={},$scope.proposerDetails.communicationAddress={},$scope.vehicleInfo={},$scope.vehicleDetails={},$scope.vehicleDetails.registrationAddress={},$scope.nominationInfo={},$scope.nominationDetails={},$scope.appointeeInfo={},$scope.appointeeDetails={},$scope.previousPolicyStatus={},$scope.insuranceInfo={},$scope.vehicleInfo.insuranceType={},$scope.insuranceDetails={},$scope.bikeProposalResponse={},$scope.paymentResponse={},$scope.bikePolicyResponse={},$scope.prevPolDetails={},$scope.screenOneStatus=!0,$scope.screenTwoStatus=!1,$scope.screenThreeStatus=!1,$scope.screenFourStatus=!1,$scope.submitProposalClicked=!1;var isPrevPolSameAsNew=!1,isPolicyRenewed=!1;$scope.accordion="1",$scope.editPesonalInfo=function(){$scope.screenOneStatus=!0,$scope.screenTwoStatus=!0,$scope.screenThreeStatus=!1,$scope.accordion="1"},$scope.editNomineeInfo=function(){$scope.screenOneStatus=!1,$scope.screenTwoStatus=!1,$scope.screenThreeStatus=!0,$scope.accordion="3"},$scope.editAddressInfo=function(){$scope.screenOneStatus=!1,$scope.screenTwoStatus=!0,$scope.screenThreeStatus=!1,$scope.screenFourStatus=!1,$scope.screenFiveStatus=!1,$scope.accordion="2"},$scope.editPrevPolicyInfo=function(){$scope.screenOneStatus=!1,$scope.screenTwoStatus=!1,$scope.screenThreeStatus=!1,$scope.screenFourStatus=!0,$scope.accordion="4"},$scope.Section2Inactive=!0,$scope.Section3Inactive=!0,$scope.Section4Inactive=!0,$scope.submitPersonalDetails=function(){$scope.screenOneStatus=!0,$scope.screenTwoStatus=!0,$scope.screenThreeStatus=!1,$scope.screenFourStatus=!1,$scope.Section2Inactive=!1,$scope.accordion="2",1==imauticAutomation&&imatEvent("ProposalFilled"),$rootScope.baseEnvEnabled&&!$rootScope.wordPressEnabled&&($scope.ownerDetailsForm.$dirty||$scope.changeCompanyName)&&($scope.responseProduct.proposalRequest.proposerDetails=$scope.proposerDetails,$scope.responseProduct.proposalRequest.insuranceDetails=$scope.insuranceDetails,$scope.vehicleDetailsForm.$dirty&&($scope.responseProduct.vehicleDetails=$scope.vehicleDetails),$scope.saveProposal=!0,$scope.submitProposalData(),$scope.ownerDetailsForm.$setPristine(),$scope.changeCompanyName=!1)},$scope.submitAddressDetails=function(){$scope.screenOneStatus=!0,$scope.screenTwoStatus=!0,$scope.screenThreeStatus=!0,$scope.screenFourStatus=!1,$scope.screenFiveStatus=!1,$scope.Section3Inactive=!1,$scope.accordion="3"},$scope.submitNomineeDetails=function(){$scope.screenOneStatus=!0,$scope.screenTwoStatus=!0,$scope.screenThreeStatus=!0,$scope.previousPolicyStatus?($scope.screenFourStatus=!0,$scope.screenFiveStatus=!1,$scope.Section3Inactive=!1,$scope.accordion="4"):($scope.screenFourStatus=!1,$scope.screenFiveStatus=!0,$scope.proceedPaymentStatus=!0,$scope.Section4Inactive=!1,$scope.accordion="5"),$rootScope.baseEnvEnabled&&!$rootScope.wordPressEnabled&&($scope.responseProduct.proposalRequest.nominationDetails&&!$scope.nomineeDetailsForm.$dirty||($scope.saveProposal=!0,$scope.saveNomineeDetails=!0,$scope.savePrevPolicyDetails=!1,$scope.responseProduct.proposalRequest.nominationDetails=$scope.nominationDetails,$scope.responseProduct.proposalRequest.appointeeDetails=$scope.appointeeDetails,$scope.submitProposalData(),$scope.nomineeDetailsForm.$setPristine()))},$scope.bikeQuoteRequestFormation=function(bikeQuoteRequestParam){$scope.quote={},$scope.quote.vehicleInfo={},$scope.quote.quoteParam={},$scope.quote.vehicleInfo.IDV=bikeQuoteRequestParam.vehicleInfo.IDV,$scope.quote.vehicleInfo.PreviousPolicyExpiryDate=bikeQuoteRequestParam.vehicleInfo.PreviousPolicyExpiryDate,$scope.quote.vehicleInfo.TPPolicyExpiryDate=bikeQuoteRequestParam.vehicleInfo.TPPolicyExpiryDate,$scope.quote.vehicleInfo.TPPolicyStartDate=bikeQuoteRequestParam.vehicleInfo.TPPolicyStartDate,$scope.quote.vehicleInfo.ODPolicyExpiryDate=bikeQuoteRequestParam.vehicleInfo.PreviousPolicyExpiryDate,$scope.quote.vehicleInfo.RTOCode=bikeQuoteRequestParam.vehicleInfo.RTOCode,$scope.quote.vehicleInfo.city=bikeQuoteRequestParam.vehicleInfo.city,bikeQuoteRequestParam.vehicleInfo.dateOfRegistration&&($scope.quote.vehicleInfo.dateOfRegistration=bikeQuoteRequestParam.vehicleInfo.dateOfRegistration),$scope.quote.vehicleInfo.idvOption=bikeQuoteRequestParam.vehicleInfo.idvOption,$scope.quote.vehicleInfo.best_quote_id=bikeQuoteRequestParam.vehicleInfo.best_quote_id,$scope.quote.vehicleInfo.previousClaim=bikeQuoteRequestParam.vehicleInfo.previousClaim,$scope.quote.vehicleInfo.registrationNumber=bikeQuoteRequestParam.vehicleInfo.registrationNumber,$scope.quote.vehicleInfo.registrationPlace=bikeQuoteRequestParam.vehicleInfo.registrationPlace,$scope.quote.vehicleInfo.state=bikeQuoteRequestParam.vehicleInfo.state,$scope.quote.vehicleInfo.make=bikeQuoteRequestParam.vehicleInfo.make,$scope.quote.vehicleInfo.model=bikeQuoteRequestParam.vehicleInfo.model,$scope.quote.vehicleInfo.variant=bikeQuoteRequestParam.vehicleInfo.variant.toString(),$scope.quote.quoteParam.ncb=bikeQuoteRequestParam.quoteParam.ncb,$scope.quote.quoteParam.ownedBy=bikeQuoteRequestParam.quoteParam.ownedBy,$scope.quote.quoteParam.policyType=bikeQuoteRequestParam.quoteParam.policyType,$scope.quote.quoteParam.riders=bikeQuoteRequestParam.quoteParam.riders},$scope.submitPrevPolicyDetails=function(){$scope.screenOneStatus=!0,$scope.screenTwoStatus=!0,$scope.screenThreeStatus=!0,$scope.screenFourStatus=!0,$scope.screenFiveStatus=!0,$scope.proceedPaymentStatus=!0,$scope.Section5Inactive=!1,$scope.accordion="5",$rootScope.baseEnvEnabled&&!$rootScope.wordPressEnabled&&(0==$scope.isPolicyNumber||$scope.prevPolicyDetailsForm.$dirty)&&($scope.saveProposal=!0,$scope.saveNomineeDetails=!0,$scope.savePrevPolicyDetails=!0,$scope.responseProduct.proposalRequest.insuranceDetails=$scope.insuranceDetails,$scope.submitProposalData(),$scope.prevPolicyDetailsForm.$setPristine())};var request={};request.proposalId=$location.search().proposalId,request.businessLineId=$scope.p365Labels.businessLineType.bike,$scope.selectedProduct=[],$scope.premiumDetails={},$scope.premiumDetails.discountList=[],$scope.nominationInfo=[],$scope.insuranceInfo=[],$scope.insuranceInfo.insurerName=[],$scope.selectedProductInputParam=[],$scope.vehicleInfo=[],$scope.selectedProductInputParam.vehicleInfo=[],$scope.proposalStatus=[],$scope.proposalStatusForm=[],$scope.undertakingStatus=[],$scope.quoteUserInfo={},$scope.bikeProposeFormDetails=[],$scope.genderType=genderTypeGeneric,$scope.maritalStatusType=maritalStatusListGeneric,$scope.purchasedLoanStatus=purchasedLoanStatusGeneric,$scope.vehicleLoanTypes=vehicleLoanTypes,$scope.drivingExpYearsList=drivingExperienceYears,$scope.vehicleDrivenOnList=vehicleDrivenPlaces,$scope.ncbList=buyScreenNcbList,$scope.mileageList=buyScreenMileageList,$scope.automobileMembershipList=automobileMembershipTypes,$scope.policyTypes=policyTypesGeneric,pospEnabled&&($scope.pospEnabled=pospEnabled),RestAPI.invoke("proposalDataReader",request).then(function(callback){if(callback.responsecode==$scope.p365Labels.responseCode.success){$scope.responseProduct=callback.data.PolicyTransaction,console.log("$scope.responseProduct.bikeProposalResponse is :",$scope.responseProduct.bikeProposalResponse),$scope.responseProduct.bikeProposalResponse&&(isPolicyRenewed=$scope.responseProduct.bikeProposalResponse.renewalPlan),$rootScope.baseEnvEnabled&&!$rootScope.wordPressEnabled&&($rootScope.iquoteRedirectionURL="/sharefromAPI",$scope.isIquoteEnabled=!1,$rootScope.iquoteRequestParam={lob:$scope.p365Labels.businessLineType.bike,createLeadFlag:$location.search().createLeadFlag,leaddetails:$location.search().leaddetails,orgName:$location.search().orgName},$scope.responseProduct.encryptedQuoteId?$rootScope.iquoteRequestParam.docId=$scope.responseProduct.encryptedQuoteId:$rootScope.iquoteRequestParam.docId=$scope.responseProduct.QUOTE_ID,$rootScope.iposRedirectionURL="/proposalresdata",$rootScope.iposRequestParam={proposalId:$location.search().proposalId,messageId:$location.search().messageId,leaddetails:$location.search().leaddetails,orgName:$location.search().orgName},$rootScope.mainTabsMenu=[{url:$rootScope.iquoteRedirectionURL,requestParam:$rootScope.iquoteRequestParam,className:"iQuoteTab tabs wp_border32",name:"iquote",title:"iQuote",active:$scope.isIquoteEnabled},{url:$rootScope.iposRedirectionURL,requestParam:$rootScope.iposRequestParam,className:"iPosTab tabs wp_border32",name:"ipos",title:"iPos",active:!$scope.isIquoteEnabled}]),$scope.bikeProposeFormDetails.carrierId=$scope.responseProduct.carrierId,$scope.bikeProposeFormDetails.productId=$scope.responseProduct.productId,$scope.bikeProposeFormDetails.QUOTE_ID=$scope.responseProduct.QUOTE_ID,$scope.bikeProposeFormDetails.businessLineId=$scope.p365Labels.businessLineType.bike,messageIDVar=$scope.responseProduct.messageId,campaign_id=$scope.responseProduct.campaign_id,requestSource=$scope.responseProduct.requestSource,sourceOrigin=$scope.responseProduct.source,$scope.selectedProduct.userName=$scope.responseProduct.userName,$scope.selectedProduct.agencyId=$scope.responseProduct.agencyId,$scope.bikeProposeFormDetails.agencyId=$scope.responseProduct.agencyId,$scope.bikeProposeFormDetails.userName=$scope.responseProduct.userName,$scope.responseProduct.referralCode&&($scope.referralCode=$scope.responseProduct.referralCode);var buyScreenParam={documentType:"proposalScreenConfig"};buyScreenParam.businessLineId=Number($scope.p365Labels.businessLineType.bike),buyScreenParam.carrierId=$scope.responseProduct.carrierId,buyScreenParam.productId=$scope.responseProduct.productId,getDocUsingParam(RestAPI,$scope.p365Labels.transactionName.productDataReader,buyScreenParam,function(buyScreen){if(buyScreen.responseCode==$scope.p365Labels.responseCode.success){var buyScreens=buyScreen.data;$scope.ownerDetailsTemplate=$sce.trustAsHtml(buyScreens.templates[0].template),$scope.nominationDetailsTemplate=$sce.trustAsHtml(buyScreens.templates[1].template),$scope.prevPolicyDetailsTemplate=$sce.trustAsHtml(buyScreens.templates[2].template),$scope.vehicleDetailsTemplate=$sce.trustAsHtml(buyScreens.templates[3].template),$scope.productValidation=buyScreens.validation,$scope.requestFormat=buyScreens.requestFormat,$scope.transactionName=buyScreens.transaction.proposalService.name,$scope.transactionSaveProposal="saveProposalService",$scope.transactionSubmitProposal="submitProposal",$scope.paymentURL=buyScreens.paymentUrl,$scope.productValidation.PUCValidation?$scope.PUCValidation=!0:$scope.PUCValidation=!1,getDocUsingIdQuoteDB(RestAPI,$scope.bikeProposeFormDetails.QUOTE_ID,function(quoteCalcDetails){var quoteCalcRequest={};if($scope.quote={},$scope.quoteCalcResponse=quoteCalcDetails.bikeQuoteResponse,quoteCalcRequest=quoteCalcDetails.bikeQuoteRequest,quoteCalcDetails.bikeQuoteRequest.systemPolicyStartDate&&($scope.policyStartDate=quoteCalcDetails.bikeQuoteRequest.systemPolicyStartDate.sysPolicyStartDate,$scope.policyEndDate=quoteCalcDetails.bikeQuoteRequest.systemPolicyStartDate.sysPolicyEndDate),$scope.vehicleInfoCopy=quoteCalcRequest.vehicleInfo,$scope.vehicleInfo={},$scope.vehicleInfo.IDV=quoteCalcDetails.bikeQuoteRequest.vehicleInfo.IDV,$scope.vehicleInfo.PreviousPolicyExpiryDate=quoteCalcDetails.bikeQuoteRequest.vehicleInfo.PreviousPolicyExpiryDate,$scope.vehicleInfo.TPPolicyExpiryDate=quoteCalcDetails.bikeQuoteRequest.vehicleInfo.TPPolicyExpiryDate,$scope.vehicleInfo.TPPolicyStartDate=quoteCalcDetails.bikeQuoteRequest.vehicleInfo.TPPolicyStartDate,$scope.vehicleInfo.RTOCode=quoteCalcDetails.bikeQuoteRequest.vehicleInfo.RTOCode,$scope.vehicleInfo.city=quoteCalcDetails.bikeQuoteRequest.vehicleInfo.city,quoteCalcDetails.bikeQuoteRequest.vehicleInfo.dateOfRegistration){$scope.vehicleInfo.dateOfRegistration=quoteCalcDetails.bikeQuoteRequest.vehicleInfo.dateOfRegistration;var bikeRegistrationYearList=$scope.vehicleInfo.dateOfRegistration.split("/");$scope.vehicleDetails.regYear=bikeRegistrationYearList[2]}$scope.vehicleInfo.idvOption=quoteCalcDetails.bikeQuoteRequest.vehicleInfo.idvOption,$scope.vehicleInfo.best_quote_id=quoteCalcDetails.bikeQuoteRequest.vehicleInfo.best_quote_id,$scope.vehicleInfo.previousClaim=quoteCalcDetails.bikeQuoteRequest.vehicleInfo.previousClaim,$scope.vehicleInfo.registrationNumber=quoteCalcDetails.bikeQuoteRequest.vehicleInfo.registrationNumber,$scope.vehicleInfo.registrationPlace=quoteCalcDetails.bikeQuoteRequest.vehicleInfo.registrationPlace,$scope.vehicleInfo.state=quoteCalcDetails.bikeQuoteRequest.vehicleInfo.state,quoteCalcDetails.bikeQuoteRequest.vehicleInfo.make?$scope.vehicleInfo.make=quoteCalcDetails.bikeQuoteRequest.vehicleInfo.make:quoteCalcDetails.bikeQuoteRequest.vehicleInfo.name&&($scope.vehicleInfo.make=quoteCalcDetails.bikeQuoteRequest.vehicleInfo.name),$scope.vehicleInfo.model=quoteCalcDetails.bikeQuoteRequest.vehicleInfo.model,quoteCalcDetails.bikeQuoteRequest.vehicleInfo.variant&&($scope.vehicleInfo.variant=quoteCalcDetails.bikeQuoteRequest.vehicleInfo.variant.toString()),$scope.quoteParam={},$scope.quoteParam.ncb=quoteCalcDetails.bikeQuoteRequest.quoteParam.ncb,$scope.quoteParam.ownedBy=quoteCalcDetails.bikeQuoteRequest.quoteParam.ownedBy,$scope.quoteParam.policyType=quoteCalcDetails.bikeQuoteRequest.quoteParam.policyType,$scope.quoteParam.riders=quoteCalcDetails.bikeQuoteRequest.quoteParam.riders,$scope.quote.quoteParam=$scope.quoteParam,$scope.quote.vehicleInfo=$scope.vehicleInfo,$scope.prevPolDetails.prevPolicyStartDate=quoteCalcDetails.bikeQuoteRequest.vehicleInfo.PreviousPolicyStartDate,$scope.prevPolDetails.prevPolicyEndDate=$scope.vehicleInfo.PreviousPolicyExpiryDate,quoteCalcRequest.carrierId=$scope.responseProduct.carrierId,quoteCalcRequest.productId=$scope.responseProduct.productId;for(var i=0;i<$scope.quoteCalcResponse.length;i++)if($scope.quoteCalcResponse[i].carrierId==$scope.responseProduct.carrierId&&$scope.quoteCalcResponse[i].productId==$scope.responseProduct.productId){$scope.premiumDetails.selectedProductDetails=$scope.quoteCalcResponse[i],$scope.selectedProduct=$scope.premiumDetails.selectedProductDetails;break}$scope.changeInsuranceCompany=function(){$scope.selectedProduct=$scope.premiumDetails.selectedProductDetails,$scope.responseProduct.proposalRequest.premiumDetails=$scope.selectedProduct,$scope.changeCompanyName=!0},localStorageService.set("bikeQuoteInputParamaters",$scope.quote),$scope.productValidation.reQuoteCalc?(quoteCalcRequest.vehicleInfo.best_quote_id||(quoteCalcRequest.vehicleInfo.best_quote_id=quoteCalcRequest.QUOTE_ID),localStorageService.set("bike_best_quote_id",quoteCalcRequest.QUOTE_ID),$scope.bikeQuoteRequestFormation(quoteCalcRequest),RestAPI.invoke($scope.p365Labels.getRequest.quoteBike,$scope.quote).then(function(proposeFormResponse){$scope.carRecalculateQuoteRequest=[],proposeFormResponse.responseCode==$scope.p365Labels.responseCode.success1?($scope.responseRecalculateCodeList=[],$scope.responseProduct.QUOTE_ID=proposeFormResponse.QUOTE_ID,localStorageService.set("BIKE_UNIQUE_QUOTE_ID",proposeFormResponse.QUOTE_ID),localStorageService.set("BIKE_UNIQUE_QUOTE_ID_ENCRYPTED",proposeFormResponse.encryptedQuoteId),$scope.carRecalculateQuoteRequest=proposeFormResponse.data,$scope.quoteCalcResponse=[],angular.forEach($scope.carRecalculateQuoteRequest,function(obj,i){var request={},header={};header.transactionName=$scope.p365Labels.transactionName.bikeQuoteResult,header.deviceId=deviceIdOrigin,request.header=header,request.body=obj,$http({method:"POST",url:getQuoteCalcLink,data:request}).success(function(callback,status){var bikeQuoteResponse=JSON.parse(callback);$scope.responseRecalculateCodeList.push(bikeQuoteResponse.responseCode),bikeQuoteResponse.responseCode==$scope.p365Labels.responseCode.success1?null!=bikeQuoteResponse.data&&bikeQuoteResponse.data.quotes[0]&&(bikeQuoteResponse.data.quotes[0].carrierId==$scope.responseProduct.carrierId&&bikeQuoteResponse.data.quotes[0].productId==$scope.responseProduct.productId&&($scope.loading=!1,$scope.premiumDetails.selectedProductDetails=bikeQuoteResponse.data.quotes[0],$scope.selectedProduct=bikeQuoteResponse.data.quotes[0],$scope.proposalDataReader()),bikeQuoteResponse.data.quotes[0].id=bikeQuoteResponse.messageId,$scope.quoteCalcResponse.push(bikeQuoteResponse.data.quotes[0])):null!=bikeQuoteResponse.data&&bikeQuoteResponse.data.quotes[0]&&bikeQuoteResponse.data.quotes[0].carrierId==$scope.responseProduct.carrierId&&bikeQuoteResponse.data.quotes[0].productId==$scope.responseProduct.productId&&($scope.loading=!1,$scope.propScreenError=$scope.p365Labels.validationMessages.generalisedErrMsg,$scope.modalPropScreenError=!0)})}),$scope.loading=!1):($scope.propScreenError=$scope.p365Labels.validationMessages.generalisedErrMsg,$scope.modalPropScreenError=!0,$scope.loading=!1)})):$scope.proposalDataReader()})}}),$scope.redirectToQuote=function(){$location.path("/quote")}}else $rootScope.P365Alert("Policies365",$scope.p365Labels.validationMessages.proposalFormErrorMsg,"Ok");$scope.proposalDataReader=function(){if(getDocUsingId(RestAPI,"relationshipdetailslist",function(relationList){$scope.relationList=relationList.relationships,getListFromDB(RestAPI,"",carCarrier,findAppConfig,function(carCarrierList){carCarrierList.responseCode==$scope.p365Labels.responseCode.success&&($scope.carrierList=carCarrierList.data)})}),$scope.responseProduct=callback.data.PolicyTransaction,$rootScope.loading=!1,$scope.responseProduct.proposalRequest.insuranceDetails)if($scope.insuranceDetails.ODPolicyEndDate=$scope.responseProduct.proposalRequest.insuranceDetails.ODPolicyEndDate,$scope.insuranceDetails.insuranceType=$scope.responseProduct.proposalRequest.insuranceDetails.insuranceType,$scope.insuranceDetails.insurerName=$scope.responseProduct.proposalRequest.insuranceDetails.insurerName,$scope.insuranceDetails.insurerId=$scope.responseProduct.proposalRequest.insuranceDetails.insurerId,"new"==$scope.insuranceDetails.insuranceType?$scope.previousPolicyStatus=!1:$scope.previousPolicyStatus=!0,$scope.previousPolicyStatus){if($scope.insuranceDetails.policyNumber=$scope.responseProduct.proposalRequest.insuranceDetails.policyNumber,$scope.responseProduct.proposalRequest.insuranceDetails.insurerName){var insurerName={};insurerName.carrierName=$scope.responseProduct.proposalRequest.insuranceDetails.insurerName,insurerName.carrierId=$scope.responseProduct.proposalRequest.insuranceDetails.insurerId,$scope.insuranceInfo.insurerName=insurerName}$scope.insuranceDetails.prevPolicyStartDate=$scope.responseProduct.proposalRequest.insuranceDetails.prevPolicyStartDate,$scope.insuranceDetails.prevPolicyEndDate=$scope.responseProduct.proposalRequest.insuranceDetails.prevPolicyEndDate,$scope.insuranceDetails.ncb=$scope.responseProduct.proposalRequest.insuranceDetails.ncb,$scope.insuranceDetails.prevPolicyType=$scope.responseProduct.proposalRequest.insuranceDetails.prevPolicyType}else $scope.responseProduct.proposalRequest.insuranceDetails.ncb?$scope.insuranceDetails.ncb=$scope.responseProduct.proposalRequest.insuranceDetails.ncb:$scope.insuranceDetails.ncb=0,$scope.insuranceDetails.policyNumber="",$scope.insuranceInfo.insurerName="";$scope.responseProduct.proposalRequest.proposerDetails&&($scope.proposerDetails.firstName=$scope.responseProduct.proposalRequest.proposerDetails.firstName,$scope.proposerDetails.lastName=$scope.responseProduct.proposalRequest.proposerDetails.lastName,$scope.proposerDetails.emailId=$scope.responseProduct.proposalRequest.proposerDetails.emailId,$scope.proposerDetails.mobileNumber=$scope.responseProduct.proposalRequest.proposerDetails.mobileNumber,$scope.proposerDetails.maritalStatus=$scope.responseProduct.proposalRequest.proposerDetails.maritalStatus,$scope.proposerDetails.dateOfBirth=$scope.responseProduct.proposalRequest.proposerDetails.dateOfBirth,$scope.proposerDetails.gender=$scope.responseProduct.proposalRequest.proposerDetails.gender,$scope.proposerDetails.personAge=$scope.responseProduct.proposalRequest.proposerDetails.personAge,$scope.proposerDetails.salutation=$scope.responseProduct.proposalRequest.proposerDetails.salutation,$scope.responseProduct.proposalRequest.proposerDetails.panNumber&&($scope.proposerDetails.panNumber=$scope.responseProduct.proposalRequest.proposerDetails.panNumber),$scope.proposerDetails.communicationAddress&&($scope.proposerDetails.communicationAddress.comDisplayArea=$scope.responseProduct.proposalRequest.proposerDetails.communicationAddress.comDisplayArea,$scope.proposerDetails.communicationAddress.comPincode=$scope.responseProduct.proposalRequest.proposerDetails.communicationAddress.comPincode,$scope.proposerDetails.communicationAddress.comCity=$scope.responseProduct.proposalRequest.proposerDetails.communicationAddress.comCity,$scope.proposerDetails.communicationAddress.comState=$scope.responseProduct.proposalRequest.proposerDetails.communicationAddress.comState,$scope.proposerDetails.communicationAddress.comDoorNo=$scope.responseProduct.proposalRequest.proposerDetails.communicationAddress.comDoorNo),$scope.quoteUserInfo.firstName=$scope.proposerDetails.firstName,$scope.quoteUserInfo.lastName=$scope.proposerDetails.lastName,$scope.quoteUserInfo.emailId=$scope.proposerDetails.emailId,$scope.quoteUserInfo.mobileNumber=$scope.proposerDetails.mobileNumber),$scope.responseProduct.proposalRequest.nominationDetails&&($scope.nominationDetails.nomFirstName=$scope.responseProduct.proposalRequest.nominationDetails.nomFirstName,$scope.nominationDetails.nomLastName=$scope.responseProduct.proposalRequest.nominationDetails.nomLastName,$scope.nominationDetails.nomDateOfBirth=$scope.responseProduct.proposalRequest.nominationDetails.nomDateOfBirth,$scope.responseProduct.proposalRequest.nominationDetails.nomPersonAge&&($scope.nominationDetails.nomPersonAge=$scope.responseProduct.proposalRequest.nominationDetails.nomPersonAge),$scope.responseProduct.proposalRequest.nominationDetails&&($scope.nominationInfo.nominationRelation={},$scope.nominationInfo.nominationRelation.relationship=$scope.responseProduct.proposalRequest.nominationDetails.nominationRelation,$scope.nominationInfo.nominationRelation.relationshipId=$scope.responseProduct.proposalRequest.nominationDetails.nominationRelationId),$scope.responseProduct.proposalRequest.nominationDetails.nomPersonAge<18?$scope.appointeeStatus=!0:$scope.appointeeStatus=!1,$scope.appointeeStatus&&($scope.appointeeDetails.firstName=$scope.responseProduct.proposalRequest.appointeeDetails.firstName,$scope.appointeeDetails.lastName=$scope.responseProduct.proposalRequest.appointeeDetails.lastName,$scope.appointeeDetails.dateOfBirth=$scope.responseProduct.proposalRequest.appointeeDetails.dateOfBirth,$scope.responseProduct.proposalRequest.appointeeDetails.appointeeRelation&&($scope.appointeeInfo.appointeeRelation={},$scope.appointeeInfo.appointeeRelation.relationship=$scope.responseProduct.proposalRequest.appointeeDetails.appointeeRelation,$scope.appointeeInfo.appointeeRelation.relationshipId=$scope.responseProduct.proposalRequest.appointeeDetails.appointeeRelationId))),$scope.quoteUserInfo.termsCondition=!0,localStorageService.set("quoteUserInfo",$scope.quoteUserInfo),$rootScope.baseEnvEnabled&&!$rootScope.wordPressEnabled&&($scope.screenOneStatus=!0,$scope.screenTwoStatus=!0,"renew"==$scope.insuranceDetails.insuranceType&&($scope.screenThreeStatus=!0,$scope.Section3Inactive=!1),$scope.screenFourStatus=!0,$scope.proceedPaymentStatus=!0,$scope.Section1Inactive=!1,$scope.Section2Inactive=!0,$scope.Section3Inactive=!0,$scope.Section4Inactive=!0,$scope.accordion="1");var polStartDateOption={minimumYearLimit:"+0D"};polStartDateOption.maximumYearLimit="+"+$scope.productValidation.policyStartDateLimit+"D",polStartDateOption.changeMonth=!0,polStartDateOption.changeYear=!0,polStartDateOption.dateFormat="dd/mm/yy",$scope.polStartDateOptions=setP365DatePickerProperties(polStartDateOption);var proposerDOBOption={};proposerDOBOption.minimumYearLimit="-"+$scope.productValidation.proposerDateOfBirthMaxLimit+"Y",proposerDOBOption.maximumYearLimit="-"+$scope.productValidation.proposerDateOfBirthMinLimit+"Y",proposerDOBOption.changeMonth=!0,proposerDOBOption.changeYear=!0,proposerDOBOption.dateFormat="dd/mm/yy",$scope.proposerDOBOptions=setP365DatePickerProperties(proposerDOBOption);var nomineeDOBOption={};if(nomineeDOBOption.minimumYearLimit="-"+$scope.productValidation.proposerDateOfBirthMaxLimit+"Y",nomineeDOBOption.maximumYearLimit="-1Y",nomineeDOBOption.changeMonth=!0,nomineeDOBOption.changeYear=!0,nomineeDOBOption.dateFormat="dd/mm/yy",$scope.nomineeDOBOptions=setP365DatePickerProperties(nomineeDOBOption),$scope.responseProduct.proposalRequest.vehicleDetails){$scope.vehicleDetails.isVehicleAddressSameAsCommun=$scope.responseProduct.proposalRequest.vehicleDetails.isVehicleAddressSameAsCommun,$scope.vehicleDetails.registrationAddress.regDoorNo=$scope.responseProduct.proposalRequest.vehicleDetails.registrationAddress.regDoorNo,$scope.vehicleDetails.registrationAddress.regDisplayArea=$scope.responseProduct.proposalRequest.vehicleDetails.registrationAddress.regDisplayArea,$scope.vehicleDetails.registrationAddress.regPincode=$scope.responseProduct.proposalRequest.vehicleDetails.registrationAddress.regPincode,$scope.vehicleDetails.registrationAddress.regCity=$scope.responseProduct.proposalRequest.vehicleDetails.registrationAddress.regCity,$scope.vehicleDetails.registrationAddress.regState=$scope.responseProduct.proposalRequest.vehicleDetails.registrationAddress.regState,$scope.selectedProductInputParam.vehicleInfo.name=$scope.responseProduct.proposalRequest.vehicleDetails.make,$scope.selectedProductInputParam.vehicleInfo.model=$scope.responseProduct.proposalRequest.vehicleDetails.model,$scope.selectedProductInputParam.vehicleInfo.variant=$scope.responseProduct.proposalRequest.vehicleDetails.variant;var regDate=$scope.vehicleInfo.dateOfRegistration.split("/");if($scope.displayRegistrationDate=regDate[0]+"-"+monthListGeneric[Number(regDate[1])-1]+"-"+regDate[2],$scope.vehicleInfo.manufacturingYear=regDate[2],$scope.vehicleDetails.engineNumber=$scope.responseProduct.proposalRequest.vehicleDetails.engineNumber,$scope.vehicleDetails.chassisNumber=$scope.responseProduct.proposalRequest.vehicleDetails.chassisNumber,$scope.vehicleDetails.registrationNumber=$scope.responseProduct.proposalRequest.vehicleDetails.registrationNumber,$scope.responseProduct.proposalRequest.vehicleDetails.financeInstitution&&($scope.vehicleDetails.financeInstitution=$scope.responseProduct.proposalRequest.vehicleDetails.financeInstitution),$scope.responseProduct.proposalRequest.vehicleDetails.financeInstitutionCode&&($scope.vehicleDetails.financeInstitutionCode=$scope.responseProduct.proposalRequest.vehicleDetails.financeInstitutionCode),$scope.responseProduct.proposalRequest.vehicleDetails.registrationNumber){var formatRegisCode=$scope.responseProduct.proposalRequest.vehicleDetails.registrationNumber;$scope.vehicleInfo.registrationNumber=formatRegisCode.substring(4)}if($scope.vehicleDetails.RTOCode=$scope.responseProduct.proposalRequest.vehicleDetails.RTOCode,$scope.responseProduct.proposalRequest.vehicleDetails.purchasedLoan?$scope.vehicleDetails.purchasedLoan=$scope.responseProduct.proposalRequest.vehicleDetails.purchasedLoan:($scope.vehicleInfo.vehicleLoanType="",$scope.responseProduct.proposalRequest.vehicleDetails.vehicleLoanType&&(1!=$scope.responseProduct.proposalRequest.vehicleDetails.vehicleLoanType.id&&2!=$scope.responseProduct.proposalRequest.vehicleDetails.vehicleLoanType.id||($scope.vehicleDetails.financeInstitution=$scope.responseProduct.proposalRequest.vehicleDetails.financeInstitution)),$scope.vehicleDetails.purchasedLoan=$scope.responseProduct.proposalRequest.vehicleDetails.purchasedLoan),$scope.responseProduct.proposalRequest.vehicleDetails.vehicleLoanType)for(var i=0;i<$scope.vehicleLoanTypes.length;i++)if($scope.vehicleLoanTypes[i].name==$scope.responseProduct.proposalRequest.vehicleDetails.vehicleLoanType){var vehicleLoanType={};vehicleLoanType.id=$scope.vehicleLoanTypes[i].id,vehicleLoanType.name=$scope.responseProduct.proposalRequest.vehicleDetails.vehicleLoanType,$scope.vehicleInfo.vehicleLoanType=vehicleLoanType}}$scope.getFinancialInstituteList=function(instituteName){var carrierId=$scope.responseProduct.carrierId;return $http.get(getSearchServiceLink+"CarrierLoanFinancer&q="+instituteName+"&id="+carrierId).then(function(financeInstituteList){return JSON.parse(financeInstituteList.data).data})},$scope.onFinancialInstitute=function(item){$scope.vehicleDetails.financeInstitutionId=item.financerId,$scope.productValidation.isFinanceCode&&($scope.vehicleDetails.financeInstitutionCode=item.financerId),$scope.loadPlaceholder()},$scope.loadPlaceholder=function(){sp,setTimeout(function(){$(".buyform-control").on("focus blur",function(e){$(this).parents(".buyform-group").toggleClass("focusedInput","focus"===e.type||this.value.length>0)}).trigger("blur")},100)},$scope.undertakingStatus=!0,$scope.proposalStatusform=!0,null!=$scope.responseProduct.bikeProposalResponse&&($scope.proposalStatus.statusDateProp=$scope.responseProduct.bikeProposalResponse.updatedDate,$scope.proposalStatus.proposalId=$scope.responseProduct.bikeProposalResponse.proposalId,$scope.proposalStatus.statusProp="completed"),null!=$scope.responseProduct.paymentResponse&&(1==$scope.responseProduct.paymentResponse.transactionStatusCode?($scope.proposalStatus.statusDatePaym=$scope.responseProduct.paymentResponse.updatedDate,$scope.proposalStatus.preferId=$scope.responseProduct.paymentResponse.apPreferId,$scope.proposalStatus.statusPaym="completed",$scope.disablePaymentButton=!0):0==$scope.responseProduct.paymentResponse.transactionStatusCode?($scope.proposalStatus.statusDatePaym=$scope.responseProduct.paymentResponse.updatedDate,$scope.proposalStatus.statusPaym="failed"):($scope.proposalStatus.statusPaym="pending",$scope.proposalStatus.statusPoli="pending")),null!=$scope.responseProduct.bikePolicyResponse&&(1==$scope.responseProduct.bikePolicyResponse.transactionStatusCode?($scope.proposalStatus.statusDatePoli=$scope.responseProduct.bikePolicyResponse.updatedDate,$scope.proposalStatus.policyNo=$scope.responseProduct.bikePolicyResponse.policyNo,$scope.proposalStatus.statusPoli="completed"):0==$scope.responseProduct.bikePolicyResponse.transactionStatusCode&&($scope.proposalStatus.statusDatePoli=$scope.responseProduct.bikePolicyResponse.updatedDate,$scope.proposalStatus.statusPoli="failed")),$scope.validatePolicyStartDate=function(){"undefined"!==String($scope.policyStartDate)&&(convertStringFormatToDate($scope.policyStartDate,function(formattedPolStartDate){if($scope.selectedProduct.ownDamagePolicyTerm&&($scope.insuranceDetails.ODPolicyStartDate=$scope.policyStartDate),"renew"==$scope.vehicleInfo.insuranceType.value)var polEndDate=new Date(formattedPolStartDate.setFullYear(formattedPolStartDate.getFullYear()+1));else polEndDate=new Date(formattedPolStartDate.setFullYear(formattedPolStartDate.getFullYear()+3));polEndDate=new Date(polEndDate.setDate(polEndDate.getDate()-1)),convertDateFormatToString(polEndDate,function(formattedPolEndDate){$scope.policyEndDate=formattedPolEndDate;var tempPolicyEndDate=$scope.policyEndDate.split("/"),PolicyEndDate=tempPolicyEndDate[1]+"/"+tempPolicyEndDate[0]+"/"+tempPolicyEndDate[2],polStartDateOption={};polStartDateOption.minimumDateLimit=PolicyEndDate,polStartDateOption.maximumYearLimit="+"+$scope.productValidation.vehicleAutoMemberExpDateLimit+"Y",polStartDateOption.changeMonth=!0,polStartDateOption.changeYear=!0,polStartDateOption.dateFormat="dd/mm/yy",$scope.proposerAutoMemberExpDateOptions=setP365DatePickerProperties(polStartDateOption)})}),$scope.selectedProduct.ownDamagePolicyTerm&&convertStringFormatToDate($scope.insuranceDetails.ODPolicyStartDate,function(formattedODPolStartDate){var ODPolEndDate=new Date(formattedODPolStartDate.setFullYear(formattedODPolStartDate.getFullYear()+$scope.selectedProduct.ownDamagePolicyTerm));ODPolEndDate=new Date(ODPolEndDate.setDate(ODPolEndDate.getDate()-1)),convertDateFormatToString(ODPolEndDate,function(formattedODPolEndDate){$scope.insuranceDetails.ODPolicyEndDate=formattedODPolEndDate})}))},$scope.showAuthenticateForm=function(){var validateAuthParam={paramMap:{}};validateAuthParam.mobileNumber=$scope.proposerDetails.mobileNumber,validateAuthParam.funcType=$scope.p365Labels.functionType.optAuth,validateAuthParam.paramMap.OTP=$scope.p365Labels.functionType.otpGenerate,getDocUsingParam(RestAPI,$scope.p365Labels.transactionName.sendSMS,validateAuthParam,function(createOTP){createOTP.responseCode==$scope.p365Labels.responseCode.success?($scope.createOTPError="",$scope.modalOTP=!0):createOTP.responseCode==$scope.p365Labels.responseCode.blockedMobile?($scope.createOTPError=createOTP.message,$scope.modalOTPError=!0):($scope.createOTPError=$scope.p365Labels.errorMessage.createOTP,$scope.modalOTPError=!0)})},$scope.hideModal=function(){$scope.modalOTP=!1,$scope.proceedPaymentStatus=!0,$scope.authenticate.enteredOTP=""},$scope.hideModalError=function(){$scope.modalOTPError=!1},$scope.hideModalAP=function(){$scope.modalAP=!1},$scope.closeModal=function(){$scope.modalPrevPolExpiredError=!1},$scope.createBikeVehicleDetailsRequest=function(){var vehicleDetailRequest={registrationAddress:{}};vehicleDetailRequest.registrationAddress.regDoorNo=$scope.vehicleDetails.registrationAddress.regDoorNo,vehicleDetailRequest.purchasedLoan=$scope.vehicleDetails.purchasedLoan,vehicleDetailRequest.engineNumber=$scope.vehicleDetails.engineNumber,vehicleDetailRequest.isVehicleAddressSameAsCommun=$scope.vehicleDetails.isVehicleAddressSameAsCommun,vehicleDetailRequest.chassisNumber=$scope.vehicleDetails.chassisNumber,vehicleDetailRequest.registrationNumber=$scope.vehicleDetails.RTOCode.toUpperCase()+$scope.vehicleInfo.registrationNumber.toUpperCase(),$scope.vehicleDetails.vehicleLoanType&&(vehicleDetailRequest.vehicleLoanType=$scope.vehicleDetails.vehicleLoanType),$scope.vehicleDetails.financeInstitution&&(vehicleDetailRequest.financeInstitution=$scope.vehicleDetails.financeInstitution),$scope.vehicleDetails.financeInstitutionCode&&($scope.vehicleDetails.financeInstitutionCode=$scope.vehicleDetails.financeInstitutionCode),$scope.vehicleDetails.monthlyMileage&&(vehicleDetailRequest.monthlyMileage=$scope.vehicleDetails.monthlyMileage),vehicleDetailRequest.registrationAddress.regCity=$scope.vehicleDetails.registrationAddress.regCity,vehicleDetailRequest.registrationAddress.regDisplayArea=$scope.vehicleDetails.registrationAddress.regDisplayArea,vehicleDetailRequest.registrationAddress.regPincode=$scope.vehicleDetails.registrationAddress.regPincode,vehicleDetailRequest.registrationAddress.regState=$scope.vehicleDetails.registrationAddress.regState,vehicleDetailRequest.registrationAddress.regArea=$scope.vehicleDetails.registrationAddress.regArea,vehicleDetailRequest.registrationAddress.regDistrict=$scope.vehicleDetails.registrationAddress.regDistrict,vehicleDetailRequest.registrationAddress.regDisplayField=$scope.vehicleDetails.registrationAddress.regDisplayField,$scope.bikeProposeFormDetails.vehicleDetails=vehicleDetailRequest},$scope.resendOTP=function(){var validateAuthParam={paramMap:{}};validateAuthParam.mobileNumber=$scope.proposerDetails.mobileNumber,validateAuthParam.funcType=$scope.p365Labels.functionType.optAuth,validateAuthParam.paramMap.OTP=$scope.p365Labels.functionType.otpGenerate,getDocUsingParam(RestAPI,$scope.p365Labels.transactionName.sendSMS,validateAuthParam,function(createOTP){createOTP.responseCode==$scope.p365Labels.responseCode.success?$scope.invalidOTPError="":$scope.invalidOTPError=$scope.p365Labels.errorMessage.createOTP})},$scope.authenticate={},$scope.vehicleInfo.insuranceType={},$scope.proposalInfo=function(){if($rootScope.baseEnvEnabled&&!$rootScope.wordPressEnabled){$scope.bikeProposeFormDetails={},$scope.proposerDetails.panNumber="undefined"!=String($scope.proposerDetails.panNumber)?$scope.proposerDetails.panNumber.toUpperCase():"",$scope.responseProduct.userName&&($scope.selectedProduct.userName=$scope.responseProduct.userName,$scope.bikeProposeFormDetails.userName=$scope.responseProduct.userName),$scope.responseProduct.agencyId&&($scope.selectedProduct.agencyId=$scope.responseProduct.agencyId,$scope.bikeProposeFormDetails.agencyId=$scope.responseProduct.agencyId),$scope.saveProposal||($scope.bikeProposeFormDetails.proposerDetails=$scope.proposerDetails,$scope.bikeProposeFormDetails.nominationDetails=$scope.nominationDetails,$scope.bikeProposeFormDetails.appointeeDetails=$scope.appointeeDetails,$scope.bikeProposeFormDetails.insuranceDetails=$scope.insuranceDetails,$scope.bikeProposeFormDetails.proposalId=$scope.proposalId,$scope.responseProduct.vehicleDetails&&($scope.vehicleDetails.RTOCode=$scope.responseProduct.vehicleDetails.RTOCode.toUpperCase()),$scope.vehicleDetails.engineNumber=$scope.vehicleDetails.engineNumber.toUpperCase(),$scope.vehicleDetails.chassisNumber=$scope.vehicleDetails.chassisNumber.toUpperCase(),$scope.createBikeVehicleDetailsRequest());var selectedInsuranceType=localStorageService.get("selectedInsuranceType");"new"==$scope.selectedProduct.policyType&&"comprehensive"==selectedInsuranceType&&($scope.policyStartDate=$scope.insuranceDetails.ODPolicyStartDate,$scope.policyEndDate=$scope.insuranceDetails.ODPolicyEndDate),$scope.selectedProduct.userIdv=localStorageService.get("bikeQuoteInputParamaters").quoteParam.userIdv,$scope.bikeProposeFormDetails.carrierId=$scope.selectedProduct.carrierId,$scope.bikeProposeFormDetails.productId=$scope.selectedProduct.productId}$rootScope.baseEnvEnabled&&$rootScope.wordPressEnabled&&($scope.bikeProposeFormDetails={},$scope.proposerDetails.panNumber="undefined"!=String($scope.proposerDetails.panNumber)?$scope.proposerDetails.panNumber.toUpperCase():"",$scope.insuranceDetails.insuranceType=$scope.responseProduct.proposalRequest.insuranceDetails.insuranceType,$scope.vehicleDetails.registrationNumber=$scope.vehicleDetails.RTOCode.toUpperCase()+$scope.vehicleInfo.registrationNumber.toUpperCase(),$scope.vehicleDetails.engineNumber=$scope.vehicleDetails.engineNumber.toUpperCase(),$scope.vehicleDetails.chassisNumber=$scope.vehicleDetails.chassisNumber.toUpperCase(),$scope.responseProduct.userName&&($scope.selectedProduct.userName=$scope.responseProduct.userName,$scope.bikeProposeFormDetails.userName=$scope.responseProduct.userName),$scope.responseProduct.agencyId&&($scope.selectedProduct.agencyId=$scope.responseProduct.agencyId,$scope.bikeProposeFormDetails.agencyId=$scope.responseProduct.agencyId),$scope.bikeProposeFormDetails.proposerDetails=$scope.proposerDetails,$scope.bikeProposeFormDetails.nominationDetails=$scope.nominationDetails,$scope.bikeProposeFormDetails.appointeeDetails=$scope.appointeeDetails,$scope.bikeProposeFormDetails.insuranceDetails=$scope.insuranceDetails,$scope.bikeProposeFormDetails.carrierId=$scope.selectedProduct.carrierId,$scope.bikeProposeFormDetails.productId=$scope.selectedProduct.productId,$scope.createBikeVehicleDetailsRequest())},$scope.sendProposalEmail=function(){var proposalDetailsEmail={paramMap:{}};proposalDetailsEmail.funcType=$scope.p365Labels.functionType.proposalDetailsTemplate,proposalDetailsEmail.username=$scope.proposerDetails.emailId.trim(),proposalDetailsEmail.isBCCRequired="Y",proposalDetailsEmail.paramMap.customerName=$scope.proposerDetails.firstName.trim()+" "+$scope.proposerDetails.lastName.trim(),proposalDetailsEmail.paramMap.selectedPolicyType=$scope.p365Labels.insuranceType.bike,proposalDetailsEmail.paramMap.quoteId=$scope.responseToken.QUOTE_ID,proposalDetailsEmail.paramMap.premiumAmount=String($scope.selectedProduct.grossPremium),proposalDetailsEmail.paramMap.docId=$scope.responseToken.proposalId,proposalDetailsEmail.paramMap.LOB=String($scope.p365Labels.businessLineType.bike),$scope.shortenURL?proposalDetailsEmail.paramMap.url=$scope.shortURLResponse.data.shortURL:($scope.longURL=""+sharePaymentLink+localStorageService.get("proposalIdEncrypted")+"&lob=2",proposalDetailsEmail.paramMap.url=$scope.longURL),RestAPI.invoke($scope.p365Labels.transactionName.sendEmail,proposalDetailsEmail).then(function(emailResponse){if(emailResponse.responseCode==$scope.p365Labels.responseCode.success)if(1==baseEnvEnabled&&1==agencyPortalEnabled){var frameURL=agencyPortalUrl+proposalDetailsEmail.paramMap.docId+"&lob="+proposalDetailsEmail.paramMap.LOB;$scope.URLforPayment=$sce.trustAsResourceUrl(frameURL),$scope.modalAP=!0,$scope.loading=!1}else $scope.redirectForPayment=!1,$scope.loading=!1,$scope.modalIPOS=!0;else $rootScope.P365Alert("Policies365",$scope.p365Labels.errorMessage.emailSentFailed,"Ok"),$scope.loading=!1})},$scope.submitProposalData=function(){if($scope.submitProposalClicked=!0,$scope.proposalInfo(),$scope.bikeProposeFormDetails.QUOTE_ID=$scope.responseProduct.QUOTE_ID,$scope.bikeProposeFormDetails.businessLineId=$scope.p365Labels.businessLineType.bike,$scope.bikeProposeFormDetails.source=sourceOrigin,$scope.loading=!0,$scope.saveProposal)$scope.bikeProposeFormDetails.proposalId=$scope.responseProduct.proposalId,RestAPI.invoke($scope.transactionSaveProposal,$scope.responseProduct).then(function(proposeFormResponse){proposeFormResponse.responseCode==$scope.p365Labels.responseCode.success?($scope.proposalId=proposeFormResponse.data,$scope.loading=!1,$scope.saveProposal=!1):($scope.loading=!1,$scope.saveProposal=!1)});else{if(console.log("Proposal submission started"),$rootScope.agencyPortalEnabled){const localdata=JSON.parse(localStorage.getItem("finalLocalStorage"));$scope.bikeProposeFormDetails.requestSource=sourceOrigin,$scope.bikeProposeFormDetails.source=sourceOrigin,localdata&&($scope.bikeProposeFormDetails.userName=localdata.username,$scope.bikeProposeFormDetails.agencyId=localdata.agencyId),localStorage.getItem("desiSkillUniqueId")&&(localStorage.getItem("desiSkillUserId")&&($scope.bikeProposeFormDetails.userName=localStorage.getItem("desiSkillUserId")),$scope.bikeProposeFormDetails.agencyId=localStorage.getItem("desiSkillAgencyId"))}$scope.bikeProposeFormDetails.QUOTE_ID?RestAPI.invoke("bikeProposal",$scope.bikeProposeFormDetails).then(function(proposeFormResponse){if(proposeFormResponse.responseCode==$scope.p365Labels.responseCode.success1)if($scope.proposalId=proposeFormResponse.data.proposalId,$scope.encryptedProposalId=proposeFormResponse.data.encryptedProposalId,localStorageService.set("proposalIdEncrypted",$scope.encryptedProposalId),$scope.responseToken=proposeFormResponse.data,$scope.responseToken.paymentGateway=$scope.paymentURL,$scope.responseToken.businessLineId=$scope.p365Labels.businessLineType.bike,localStorageService.set("bikeReponseToken",$scope.responseToken),$rootScope.encryptedProposalID=String($scope.responseToken.proposalId),$rootScope.encryptedLOB=String($scope.p365Labels.businessLineType.bike),1==imauticAutomation)imatBikeProposal(localStorageService,$scope,"SubmitProposal",function(shortURLResponse){shortURLResponse.responseCode==$scope.p365Labels.responseCode.success?($scope.shortURLResponse=shortURLResponse,$scope.shortURLResponse.data.shortURL?$scope.shortenURL=$scope.shortURLResponse.data.shortURL:$scope.longURL=""+sharePaymentLink+localStorageService.get("proposalIdEncrypted")+"&lob=2",$scope.sendProposalEmail()):($scope.longURL=""+sharePaymentLink+localStorageService.get("proposalIdEncrypted")+"&lob=2",$scope.sendProposalEmail(),$scope.loading=!1)});else{var body={};body.longURL=sharePaymentLink+String($scope.responseToken.proposalId)+"&lob="+String($scope.p365Labels.businessLineType.bike),$scope.longURL=body.longURL,$http({method:"POST",url:getShortURLLink,data:body}).success(function(shortURLResponse){shortURLResponse.responseCode==$scope.p365Labels.responseCode.success?($scope.shortURLResponse=shortURLResponse,$scope.shortenURL=$scope.shortURLResponse.data.shortURL,$scope.sendProposalEmail()):($scope.longURL=""+sharePaymentLink+localStorageService.get("proposalIdEncrypted")+"&lob=2",$scope.sendProposalEmail(),$scope.loading=!1)})}else if(proposeFormResponse.responseCode==$scope.p365Labels.responseCode.error||proposeFormResponse.responseCode==$scope.p365Labels.responseCode.serverError1)$scope.loading=!1,$rootScope.wordPressEnabled&&($scope.proceedPaymentStatus=!0),proposeFormResponse.responseCode,$scope.p365Labels.responseCode.serverError1,proposeFormResponse.message?$rootScope.P365Alert("Policies365",proposeFormResponse.message,"Ok"):$rootScope.P365Alert("Policies365",proposeFormResponse.data,"Ok");else if(proposeFormResponse.responseCode==$scope.p365Labels.responseCode.prevPolicyExpired)$scope.loading=!1,$scope.modalPrevPolExpiredError=!0,$scope.prevPolicyExpiredError=proposeFormResponse.message;else{1==imauticAutomation&&imatEvent("ProposalFailed"),$scope.loading=!1,$rootScope.wordPressEnabled&&($scope.proceedPaymentStatus=!0);proposeFormResponse.responseCode,$scope.p365Labels.validationMessages.buyScreenCnfrmError.replace("INSURER_NAME",$scope.selectedProduct.insuranceCompany);proposeFormResponse.message?$rootScope.P365Alert("Policies365",proposeFormResponse.message,"Ok"):$rootScope.P365Alert("Policies365",proposeFormResponse.data,"Ok")}}):($scope.loading=!1,$rootScope.P365Alert("Policies365",$scope.p365Labels.errorMessage.generalisedErrMsg,"Ok"))}},$scope.sendSMS=function(){var validateAuthParam={paramMap:{}};validateAuthParam.mobileNumber=$scope.proposerDetails.mobileNumber,validateAuthParam.paramMap.firstName=$scope.proposerDetails.firstName,validateAuthParam.funcType="ProposalFilled",getDocUsingParam(RestAPI,$scope.p365Labels.transactionName.sendSMS,validateAuthParam,function(createOTP){$scope.submitProposalClicked||(createOTP.responseCode,$scope.p365Labels.responseCode.success,$scope.redirectToPaymentGateway())})},$scope.sendPaymentSuccessEmail=function(){var proposalDetailsEmail={paramMap:{},funcType:"ProposalDetailsTemplate"};$scope.shortenURL?proposalDetailsEmail.paramMap.url=$scope.shortURLResponse.data.shortURL:($scope.longURL=""+sharePaymentLink+localStorageService.get("proposalIdEncrypted")+"&lob=2",proposalDetailsEmail.paramMap.url=$scope.longURL),proposalDetailsEmail.username=$scope.proposerDetails.emailId.trim(),proposalDetailsEmail.paramMap.customerName=$scope.proposerDetails.firstName.trim()+" "+$scope.proposerDetails.lastName.trim(),proposalDetailsEmail.paramMap.selectedPolicyType=$scope.p365Labels.insuranceType.car,RestAPI.invoke($scope.p365Labels.transactionName.sendEmail,proposalDetailsEmail).then(function(emailResponse){emailResponse.responseCode,$scope.p365Labels.responseCode.success,$scope.sendSMS()})},$scope.hideModalIPOS=function(){$scope.modalIPOS=!1,1==$scope.redirectForPayment&&$scope.sendPaymentSuccessEmail()},$scope.redirectToPaymentGateway=function(){$scope.paymentURLParam?$rootScope.affilateUser||$rootScope.agencyPortalEnabled?$window.top.location.href=$scope.paymentServiceResponse.paymentURL+$scope.paymentURLParam:$window.location.href=$scope.paymentServiceResponse.paymentURL+$scope.paymentURLParam:$timeout(function(){$scope.paymentForm.setAction($scope.paymentServiceResponse.paymentURL),$scope.paymentForm.commit(),$scope.$apply()},100)},$scope.proceedForPayment=function(){$scope.proceedPaymentStatus=!1,$scope.submitProposalClicked=!1,$scope.proposalInfo(),$scope.bikeProposeFormDetails.businessLineId=$scope.p365Labels.businessLineType.bike,$scope.bikeProposeFormDetails.source=sourceOrigin,localStorageService.get("BIKE_UNIQUE_QUOTE_ID")?$scope.bikeProposeFormDetails.QUOTE_ID=localStorageService.get("BIKE_UNIQUE_QUOTE_ID"):$scope.bikeProposeFormDetails.QUOTE_ID=$scope.responseProduct.QUOTE_ID,$scope.bikeProposeFormDetails.proposalId&&delete $scope.bikeProposeFormDetails.proposalId,isPolicyRenewed&&($scope.bikeProposeFormDetails.isPolicyRenewed=isPolicyRenewed),$scope.referralCode&&($scope.bikeProposeFormDetails.referralCode=$scope.referralCode),$scope.bikeProposeFormDetails.QUOTE_ID?($scope.loading=!0,RestAPI.invoke("bikeProposal",$scope.bikeProposeFormDetails).then(function(proposeFormResponse){if($scope.modalOTP=!1,$scope.proceedPaymentStatus=!0,proposeFormResponse.responseCode==$scope.p365Labels.responseCode.success1)$scope.proposalId=proposeFormResponse.data.proposalId,$scope.encryptedProposalId=proposeFormResponse.data.encryptedProposalId,localStorageService.set("proposalIdEncrypted",$scope.encryptedProposalId),console.log("$scope.encryptedProposalId",$scope.encryptedProposalId),1==imauticAutomation&&imatBikeProposal(localStorageService,$scope,"MakePayment",function(shortURLResponse){}),$scope.responseToken=proposeFormResponse.data,$scope.responseToken.paymentGateway=$scope.paymentURL,$scope.responseToken.businessLineId=$scope.p365Labels.businessLineType.bike,localStorageService.set("bikeReponseToken",$scope.responseToken),getDocUsingParam(RestAPI,$scope.p365Labels.transactionName.paymentService,$scope.responseToken,function(paymentDetails){if(paymentDetails.responseCode==$scope.p365Labels.responseCode.success){$scope.paymentServiceResponse=paymentDetails.data;var paymentURLParamListLength=$scope.paymentServiceResponse.paramterList.length;if("GET"==$scope.paymentServiceResponse.method){$scope.paymentURLParam="?";paymentURLParamListLength=$scope.paymentServiceResponse.paramterList.length;for(var i=0;i<paymentURLParamListLength;i++)$scope.paymentURLParam+=i<paymentURLParamListLength-1?$scope.paymentServiceResponse.paramterList[i].name+"="+$scope.paymentServiceResponse.paramterList[i].value+"&":$scope.paymentServiceResponse.paramterList[i].name+"="+$scope.paymentServiceResponse.paramterList[i].value;$scope.redirectForPayment=!0,$scope.loading=!1,$scope.modalIPOS=!0}else $scope.paymentURLParam=null,$scope.redirectForPayment=!0,$scope.loading=!1,$scope.modalIPOS=!0}else{$scope.loading=!1;var buyScreenCnfrmError=paymentDetails.responseCode+" : "+$scope.p365Labels.validationMessages.buyScreenCnfrmError.replace("INSURER_NAME",$scope.selectedProduct.insuranceCompany);$rootScope.P365Alert("Policies365",buyScreenCnfrmError,"Ok")}});else if(proposeFormResponse.responseCode==$scope.p365Labels.responseCode.error||proposeFormResponse.responseCode==$scope.p365Labels.responseCode.error1||proposeFormResponse.responseCode==$scope.p365Labels.responseCode.serverError1)$scope.loading=!1,proposeFormResponse.responseCode==$scope.p365Labels.responseCode.serverError1?proposeFormResponse.message?$rootScope.P365Alert("Policies365",proposeFormResponse.message,"Ok"):$rootScope.P365Alert("Policies365",proposeFormResponse.data,"Ok"):proposeFormResponse.data?$rootScope.P365Alert("Policies365",proposeFormResponse.data,"Ok"):$rootScope.P365Alert("Policies365",proposeFormResponse.message,"Ok");else if(proposeFormResponse.responseCode==$scope.p365Labels.responseCode.prevPolicyExpired)$scope.loading=!1,$scope.modalPrevPolExpiredError=!0,$scope.prevPolicyExpiredError=proposeFormResponse.message;else{1==imauticAutomation&&imatEvent("ProposalFailed"),$scope.loading=!1;var buyScreenCnfrmError=proposeFormResponse.responseCode+" : "+$scope.p365Labels.validationMessages.buyScreenCnfrmError.replace("INSURER_NAME",$scope.selectedProduct.insuranceCompany);proposeFormResponse.message?$rootScope.P365Alert("Policies365",proposeFormResponse.message,"Ok"):proposeFormResponse.data?$rootScope.P365Alert("Policies365",proposeFormResponse.data,"Ok"):$rootScope.P365Alert("Policies365",buyScreenCnfrmError,"Ok")}})):($scope.proceedPaymentStatus=!0,$rootScope.P365Alert("Policies365",$scope.p365Labels.errorMessage.generalisedErrMsg,"Ok"))}},$scope.resetCommunicationAddress=function(){"undefined"!=String($scope.proposerDetails.communicationAddress.comDisplayArea)&&0!=$scope.proposerDetails.communicationAddress.comDisplayArea.length||($scope.proposerDetails.communicationAddress.comPincode="",$scope.proposerDetails.communicationAddress.comState="",$scope.proposerDetails.communicationAddress.comCity="",$scope.proposerDetails.communicationAddress.comDoorNo="")},$scope.resetRegistrationAddress=function(){"undefined"!=String($scope.vehicleDetails.registrationAddress.regDisplayArea)&&0!=$scope.vehicleDetails.registrationAddress.regDisplayArea.length||($scope.vehicleDetails.registrationAddress.regPincode="",$scope.vehicleDetails.registrationAddress.regState="",$scope.vehicleDetails.registrationAddress.regCity="",$scope.vehicleDetails.registrationAddress.regDoorNo="")},$scope.getPinCodeAreaList=function(searchValue){var docType=$scope.p365Labels.documentType.cityDetails,carrierId=$scope.responseProduct.carrierId;return $http.get(getSearchServiceLink+docType+"&q="+searchValue+"&id="+carrierId).then(function(response){return JSON.parse(response.data).data})},$scope.onSelectPinOrArea=function(item){$scope.selectedProductInputParam=localStorageService.get("bikeQuoteInputParamaters"),$scope.selectedProductInputParamCopy=angular.copy($scope.selectedProductInputParam.vehicleInfo);var selState=$scope.selectedProductInputParam.vehicleInfo.state;$scope.proposerDetails.communicationAddress.comState=selState.toUpperCase(),$scope.proposerDetails.communicationAddress.comState!=item.state?($scope.selectedProductInputParam.vehicleInfo.state=item.state,$scope.selectedProductInputParam.vehicleInfo.city=item.city,$scope.proposerDetailsCopied=angular.copy(item),$rootScope.P365Confirm("Policies365","There is a change in location and premium would be re-calculated. Do you want to proceed?","No","Yes",function(confirmStatus){confirmStatus?($scope.loading=!0,$scope.bikeQuoteRequestFormation($scope.selectedProductInputParam),RestAPI.invoke($scope.p365Labels.getRequest.quoteBike,$scope.quote).then(function(proposeFormResponse){if($scope.carRecalculateQuoteRequest=[],proposeFormResponse.responseCode==$scope.p365Labels.responseCode.success1)$scope.responseRecalculateCodeList=[],localStorageService.set("BIKE_UNIQUE_QUOTE_ID",proposeFormResponse.QUOTE_ID),localStorageService.set("BIKE_UNIQUE_QUOTE_ID_ENCRYPTED",proposeFormResponse.encryptedQuoteId),$scope.carRecalculateQuoteRequest=proposeFormResponse.data,$scope.quoteCalcResponse=[],angular.forEach($scope.carRecalculateQuoteRequest,function(obj,i){var request={},header={};header.transactionName=$scope.p365Labels.transactionName.bikeQuoteResult,header.deviceId=deviceIdOrigin,request.header=header,request.body=obj,$http({method:"POST",url:getQuoteCalcLink,data:request}).success(function(callback,status){var bikeQuoteResponse=JSON.parse(callback);if($scope.responseRecalculateCodeList.push(bikeQuoteResponse.responseCode),bikeQuoteResponse.responseCode==$scope.p365Labels.responseCode.success1)null!=bikeQuoteResponse.data&&bikeQuoteResponse.data.quotes[0].carrierId==$scope.responseProduct.carrierId&&bikeQuoteResponse.data.quotes[0].productId==$scope.responseProduct.productId&&($scope.loading=!1,$scope.premiumDetails.selectedProductDetails=bikeQuoteResponse.data.quotes[0],$scope.selectedProduct=bikeQuoteResponse.data.quotes[0],bikeQuoteResponse.data.quotes[0].id=bikeQuoteResponse.messageId,$scope.quoteCalcResponse.push(bikeQuoteResponse.data.quotes[0]));else if(null!=bikeQuoteResponse.data&&bikeQuoteResponse.data.quotes[0].carrierId==$scope.responseProduct.carrierId&&bikeQuoteResponse.data.quotes[0].productId==$scope.responseProduct.productId){$scope.loading=!1,$scope.proposerDetails.communicationAddress.comPincode="";var screenCnfrmError=$scope.selectedProduct.insuranceCompany+" does not provide Insurance for the selected pincode of the owner. Please change the input or select any other insurer from the quote screen";$rootScope.P365Alert("Policies365",screenCnfrmError,"Ok")}}).error(function(data,status){$scope.responseRecalculateCodeList.push($scope.p365Labels.responseCode.systemError),$scope.loading=!1})});else{$scope.loading=!1,$scope.proposerDetails.communicationAddress.comPincode="";var screenCnfrmError=$scope.selectedProduct.insuranceCompany+" does not provide Insurance for the selected pincode of the owner. Please change the input or select any other insurer from the quote screen";$rootScope.P365Alert("Policies365",screenCnfrmError,"Ok")}}),item.address&&($scope.proposerDetails.communicationAddress.comDisplayArea=item.address),$scope.proposerDetails.communicationAddress.comPincode=item.pincode,$scope.proposerDetails.communicationAddress.comCity=item.city,$scope.proposerDetails.communicationAddress.comState=item.state,$scope.checkForSameAddress()):($scope.proposerDetails.communicationAddress.comDisplayArea=$scope.selectedProductInputParamCopy.address,$scope.proposerDetails.communicationAddress.comPincode=$scope.selectedProductInputParamCopy.pincode,$scope.proposerDetails.communicationAddress.comCity=$scope.selectedProductInputParamCopy.city,$scope.proposerDetails.communicationAddress.comState=$scope.selectedProductInputParamCopy.state,$scope.checkForSameAddress())})):(item.address&&($scope.proposerDetails.communicationAddress.comDisplayArea=item.address),$scope.proposerDetails.communicationAddress.comPincode=item.pincode,$scope.proposerDetails.communicationAddress.comCity=item.city,$scope.proposerDetails.communicationAddress.comState=item.state,$scope.checkForSameAddress()),$scope.loadPlaceholder(),localStorageService.set("userGeoDetails",item)},$scope.checkForSameAddress=function(){$scope.vehicleDetails.isVehicleAddressSameAsCommun&&($scope.vehicleDetails.registrationAddress.regDoorNo=$scope.proposerDetails.communicationAddress.comDoorNo,$scope.vehicleDetails.registrationAddress.regDisplayArea=$scope.proposerDetails.communicationAddress.comDisplayArea,$scope.vehicleDetails.registrationAddress.regPincode=$scope.proposerDetails.communicationAddress.comPincode,$scope.vehicleDetails.registrationAddress.regCity=$scope.proposerDetails.communicationAddress.comCity,$scope.vehicleDetails.registrationAddress.regState=$scope.proposerDetails.communicationAddress.comState)},$scope.onSelectVehiclePinOrArea=function(item){item.address&&($scope.vehicleDetails.registrationAddress.regDisplayArea=item.address),$scope.vehicleDetails.registrationAddress.regPincode=item.pincode,$scope.vehicleDetails.registrationAddress.regCity=item.city,$scope.vehicleDetails.registrationAddress.regState=item.state,$scope.loadPlaceholder()},$scope.changeRegAddress=function(){$scope.vehicleDetails.isVehicleAddressSameAsCommun?($scope.vehicleDetails.registrationAddress.regDoorNo=$scope.proposerDetails.communicationAddress.comDoorNo,$scope.vehicleDetails.registrationAddress.regDisplayArea=$scope.proposerDetails.communicationAddress.comDisplayArea,$scope.vehicleDetails.registrationAddress.regPincode=$scope.proposerDetails.communicationAddress.comPincode,$scope.vehicleDetails.registrationAddress.regCity=$scope.proposerDetails.communicationAddress.comCity,$scope.vehicleDetails.registrationAddress.regState=$scope.proposerDetails.communicationAddress.comState):($scope.vehicleDetails.registrationAddress={},$scope.vehicleDetails.registrationAddress.regDisplayArea="",$scope.vehicleDetails.registrationAddress.regDoorNo="",$scope.vehicleDetails.registrationAddress.regPincode="",$scope.vehicleDetails.registrationAddress.regCity="",$scope.vehicleDetails.registrationAddress.regState="")},$scope.calcDefaultAreaDetails=function(areaCode){if(null!=areaCode&&"undefined"!=String(areaCode)&&String(areaCode).length>0){var docType=$scope.p365Labels.documentType.cityDetails,carrierId=$scope.responseProduct.carrierId;$http.get(getSearchServiceLink+docType+"&q="+areaCode+"&id="+carrierId).then(function(response){var areaDetails=JSON.parse(response.data);areaDetails.responseCode==$scope.p365Labels.responseCode.success&&$scope.onSelectPinOrArea(areaDetails.data[0])})}},$scope.calcDefaultRegAreaDetails=function(areaCode){if(null!=areaCode&&"undefined"!=String(areaCode)&&String(areaCode).length>0){var docType=$scope.p365Labels.documentType.cityDetails,carrierId=$scope.selectedProduct.carrierId;$http.get(getSearchServiceLink+docType+"&q="+areaCode+"&id="+carrierId).then(function(response){var areaDetails=JSON.parse(response.data);areaDetails.responseCode==$scope.p365Labels.responseCode.success&&$scope.onSelectVehiclePinOrArea(areaDetails.data[0])})}},$scope.$watch("proposerDetails.communicationAddress.comDisplayArea",function(newValue){$scope.vehicleDetails.isVehicleAddressSameAsCommun&&$scope.changeRegAddress()}),$scope.$watch("proposerDetails.communicationAddress.comDoorNo",function(newValue){$scope.vehicleDetails.isVehicleAddressSameAsCommun&&$scope.changeRegAddress()}),$scope.$on("setCommAddressByAPI",function(){setTimeout(function(){var googleAddressObject=angular.copy($rootScope.chosenCommPlaceDetails);getAddressFields(googleAddressObject,function(fomattedAddress,formattedCity,formattedState,formattedPincode){$scope.proposerDetails.communicationAddress.comDisplayArea=fomattedAddress,"undefined"!=String(formattedPincode)&&""!=formattedPincode?$scope.calcDefaultAreaDetails(formattedPincode):($scope.proposerDetails.communicationAddress.comPincode="",$scope.proposerDetails.communicationAddress.comState="",$scope.proposerDetails.communicationAddress.comCity=""),$scope.$apply()})},10)}),$scope.$on("setRegAddressByAPI",function(){setTimeout(function(){var googleAddressObject=angular.copy($rootScope.chosenRegPlaceDetails);getAddressFields(googleAddressObject,function(fomattedAddress,formattedCity,formattedState,formattedPincode){$scope.vehicleDetails.registrationAddress.regDisplayArea=fomattedAddress,"undefined"!=String(formattedPincode)&&""!=formattedPincode?$scope.calcDefaultRegAreaDetails(formattedPincode):($scope.vehicleDetails.registrationAddress.regPincode="",$scope.vehicleDetails.registrationAddress.regState="",$scope.vehicleDetails.registrationAddress.regCity=""),$scope.$apply()})},10)}),$scope.validAppointeeRelation=function(relation){if("Y"==relation.isApointeeRelationship)return relation.relationship},$scope.validateNomineeDateOfBirth=function(){if($scope.nominationDetails.nomPersonAge=getAgeFromDOB($scope.nominationDetails.nomDateOfBirth),$scope.nominationDetails.nomPersonAge<18){$scope.appointeeStatus=!0;var appointeeDOBOption={};appointeeDOBOption.minimumYearLimit="-"+$scope.productValidation.proposerDateOfBirthMaxLimit+"Y",appointeeDOBOption.maximumYearLimit="-18Y",appointeeDOBOption.changeMonth=!0,appointeeDOBOption.changeYear=!0,appointeeDOBOption.dateFormat="dd/mm/yy",$scope.appointeeDOBOptions=setP365DatePickerProperties(appointeeDOBOption)}else $scope.appointeeStatus=!1;$scope.relationList=$scope.relationList},$scope.calculateAppointeeAge=function(){$scope.appointeeDetails.personAge=getAgeFromDOB($scope.appointeeDetails.dateOfBirth)},$scope.calculateProposerAge=function(){$scope.proposerDetails.personAge=getAgeFromDOB($scope.proposerDetails.dateOfBirth)},$scope.changeNomineeRelation=function(){"undefined"!=String($scope.nominationInfo.nominationRelation)&&($scope.nominationDetails.nominationRelation=$scope.nominationInfo.nominationRelation.relationship,$scope.nominationDetails.nominationRelationId=$scope.nominationInfo.nominationRelation.relationshipId),$scope.responseProduct.proposalRequest.nominationDetails&&($scope.nomineeDetailsForm.$dirty=!1)},$scope.changePrevInsurer=function(){if($scope.insuranceDetails.insurerName=$scope.insuranceInfo.insurerName.carrierName,$scope.insuranceDetails.insurerId=$scope.insuranceInfo.insurerName.carrierId,$scope.selectedProduct.carrierId==$scope.insuranceDetails.insurerId?isPrevPolSameAsNew=!0:(isPrevPolSameAsNew=!1,isPolicyRenewed=!1),null!=$scope.productValidation.carrierListforPrevPolicy&&"undefined"!=String($scope.productValidation.carrierListforPrevPolicy)&&$scope.productValidation.carrierListforPrevPolicy.length>0)for(var j=0;j<$scope.productValidation.carrierListforPrevPolicy.length;j++){if($scope.insuranceDetails.insurerId==$scope.productValidation.carrierListforPrevPolicy[j].carrierId){$scope.prevAddressDiv=!0;break}$scope.prevAddressDiv=!1,$scope.insuranceDetails.prevPolicyAddress=""}},$scope.calcQuoteOnRegistrationNumber=function(regNumber){$scope.selectedProductInputParamCopy=angular.copy($scope.selectedProductInputParam),$scope.selectedProductInputParamCopy.vehicleInfo&&$scope.selectedProductInputParamCopy.vehicleInfo.registrationNumber?$scope.registrationNumberCopy=$scope.selectedProductInputParam.vehicleInfo.registrationNumber.toUpperCase():$scope.registrationNumberCopy="",$scope.newRegistrationNumber=$scope.vehicleDetails.RTOCode.toUpperCase()+regNumber.toUpperCase(),$scope.newRegistrationNumber!=$scope.registrationNumberCopy&&($scope.selectedProductInputParam=localStorageService.get("bikeQuoteInputParamaters"),$scope.selectedProductInputParam.vehicleInfo.registrationNumber=$scope.newRegistrationNumber,$scope.selectedProductInputParamCopy.GSTIN&&($scope.selectedProductInputParam.GSTIN=$scope.selectedProductInputParamCopy.GSTIN),$rootScope.P365Confirm($scope.p365Labels.common.p365prompt,$scope.p365Labels.common.regNumberChangeMsg,"No","Yes",function(confirmStatus){if(confirmStatus)$scope.loading=!0,$scope.quote={},$scope.quote=$scope.selectedProductInputParam,$scope.selectedProductInputParam.vehicleInfo.registrationNumber=$scope.newRegistrationNumber,$scope.bikeQuoteRequestFormation($scope.selectedProductInputParam),$scope.quote.isPolicyRenewed=!1,isPolicyRenewed=!1,isPrevPolSameAsNew&&($scope.quote.isPolicyRenewed=!0,isPolicyRenewed=!0,$scope.quote.previousPolicyInsurerDetails={},$scope.quote.previousPolicyInsurerDetails.insurerId=$scope.insuranceDetails.insurerId,$scope.quote.previousPolicyInsurerDetails.insurerName=$scope.insuranceDetails.insurerName,$scope.quote.previousPolicyInsurerDetails.policyNumber=$scope.insuranceDetails.policyNumber),RestAPI.invoke($scope.p365Labels.getRequest.quoteBike,$scope.quote).then(function(proposeFormResponse){if($scope.carRecalculateQuoteRequest=[],proposeFormResponse.responseCode==$scope.p365Labels.responseCode.success1)$scope.responseRecalculateCodeList=[],$scope.quoteCalcResponse=[],"undefined"!=String($scope.quoteCalcResponse)&&$scope.quoteCalcResponse.length>0&&($scope.quoteCalcResponse.length=0),$scope.selectedProductInputParam.vehicleInfo.registrationNumber&&delete $scope.selectedProductInputParam.vehicleInfo.registrationNumber,localStorageService.set("BIKE_UNIQUE_QUOTE_ID",proposeFormResponse.QUOTE_ID),localStorageService.set("BIKE_UNIQUE_QUOTE_ID_ENCRYPTED",proposeFormResponse.encryptedQuoteId),$scope.carRecalculateQuoteRequest=proposeFormResponse.data,angular.forEach($scope.carRecalculateQuoteRequest,function(obj,i){var request={},header={};header.messageId=messageIDVar,header.campaignID=campaignIDVar,header.source=sourceOrigin,header.transactionName=getBikeQuoteResult,header.deviceId=deviceIdOrigin,request.header=header,request.body=obj,$http({method:"POST",url:getQuoteCalcLink,data:request}).success(function(callback,status){var carQuoteResponse=JSON.parse(callback);if($scope.responseRecalculateCodeList.push(carQuoteResponse.responseCode),carQuoteResponse.responseCode==$scope.p365Labels.responseCode.success1)null!=carQuoteResponse.data&&(carQuoteResponse.data.renewalPlan?carQuoteResponse.data.quotes[0].carrierId==$scope.selectedProduct.carrierId&&($scope.loading=!1,angular.copy($scope.selectedProductInputParam,$scope.selectedProductInputParamCopy),$scope.premiumDetails.selectedProductDetails=carQuoteResponse.data.quotes[0],$scope.selectedProduct=carQuoteResponse.data.quotes[0],Number(carQuoteResponse.data.quotes[0].grossPremium)>0&&$scope.quoteCalcResponse.push(carQuoteResponse.data.quotes[0])):carQuoteResponse.data.quotes[0].carrierId==$scope.selectedProduct.carrierId&&carQuoteResponse.data.quotes[0].productId==$scope.selectedProduct.productId&&($scope.loading=!1,angular.copy($scope.selectedProductInputParam,$scope.selectedProductInputParamCopy),$scope.premiumDetails.selectedProductDetails=carQuoteResponse.data.quotes[0],$scope.selectedProduct=carQuoteResponse.data.quotes[0],Number(carQuoteResponse.data.quotes[0].grossPremium)>0&&$scope.quoteCalcResponse.push(carQuoteResponse.data.quotes[0])));else if($scope.loading=!1,null!=carQuoteResponse.data&&carQuoteResponse.data.quotes[0].carrierId==$scope.selectedProduct.carrierId&&carQuoteResponse.data.quotes[0].productId==$scope.selectedProduct.productId){$scope.selectedProductInputParam=localStorageService.get("bikeQuoteInputParamaters"),$scope.selectedProductInputParam.vehicleInfo.registrationNumber="",$scope.vehicleInfo.registrationNumber="",$scope.selectedProductInputParam.vehicleInfo.registrationNumber&&delete $scope.selectedProductInputParam.vehicleInfo.registrationNumber,localStorageService.set("bikeQuoteInputParamaters",$scope.selectedProductInputParam);var screenCnfrmError=$scope.selectedProduct.insuranceCompany+""+$scope.p365Labels.errorMessage.regNumberScreenConfirmErrorMsg;$rootScope.P365Alert($scope.p365Labels.common.p365prompt,screenCnfrmError,"Ok")}}).error(function(data,status){delete $scope.selectedProductInputParam.vehicleInfo.registrationNumber,$scope.responseRecalculateCodeList.push($scope.p365Labels.responseCode.systemError),$scope.loading=!1})});else{$scope.loading=!1,$scope.selectedProductInputParam=localStorageService.get("bikeQuoteInputParamaters"),$scope.vehicleInfo.registrationNumber="",$scope.selectedProductInputParam.vehicleInfo.registrationNumber&&delete $scope.selectedProductInputParam.vehicleInfo.registrationNumber,localStorageService.set("bikeQuoteInputParamaters",$scope.selectedProductInputParam);var screenCnfrmError=$scope.selectedProduct.insuranceCompany+""+$scope.p365Labels.errorMessage.regNumberScreenConfirmErrorMsg;$rootScope.P365Alert($scope.p365Labels.common.p365prompt,screenCnfrmError,"Ok")}});else if($scope.selectedProductInputParam.vehicleInfo=$scope.selectedProductInputParamCopy.vehicleInfo,$scope.selectedProductInputParam.vehicleInfo.registrationNumber){var formatVehicleCode=$scope.selectedProductInputParam.vehicleInfo.registrationNumber;$scope.vehicleInfo.registrationNumber=formatVehicleCode.substring(4)}else $scope.vehicleInfo.registrationNumber="",delete $scope.selectedProductInputParam.vehicleInfo.registrationNumber}))},$scope.checkGSTINNumber=function(selGSTIN){$scope.productValidation.regNumberReQuoteCalc&&selGSTIN&&$scope.calcQuoteOnGSTINNumber(selGSTIN)},$scope.calcQuoteOnGSTINNumber=function(selGSTIN){$scope.selectedProductInputParamCopy=angular.copy($scope.selectedProductInputParam),$scope.selectedProductInputParamCopy.GSTIN?$scope.GSTINCopy=$scope.selectedProductInputParamCopy.GSTIN:$scope.GSTINCopy="",$scope.newGSTINNumber=selGSTIN,$scope.newGSTINNumber!=$scope.GSTINCopy&&($scope.selectedProductInputParam=localStorageService.get("bikeQuoteInputParamaters"),$scope.selectedProductInputParam.GSTIN=$scope.newGSTINNumber,$scope.selectedProductInputParamCopy.vehicleInfo.registrationNumber&&($scope.selectedProductInputParam.vehicleInfo.registrationNumber=$scope.selectedProductInputParamCopy.vehicleInfo.registrationNumber),$rootScope.P365Confirm($scope.p365Labels.common.p365prompt,$scope.p365Labels.common.GSTINNumberChangeMsg,"No","Yes",function(confirmStatus){confirmStatus?($scope.loading=!0,$scope.quote={},$scope.quote=$scope.selectedProductInputParam,$scope.bikeQuoteRequestFormation($scope.selectedProductInputParam),RestAPI.invoke($scope.p365Labels.getRequest.quoteBike,$scope.quote).then(function(proposeFormResponse){if($scope.carRecalculateQuoteRequest=[],proposeFormResponse.responseCode==$scope.p365Labels.responseCode.success1)$scope.responseRecalculateCodeList=[],$scope.quoteCalcResponse=[],"undefined"!=String($scope.quoteCalcResponse)&&$scope.quoteCalcResponse.length>0&&($scope.quoteCalcResponse.length=0),localStorageService.set("BIKE_UNIQUE_QUOTE_ID",proposeFormResponse.QUOTE_ID),localStorageService.set("BIKE_UNIQUE_QUOTE_ID_ENCRYPTED",proposeFormResponse.encryptedQuoteId),$scope.carRecalculateQuoteRequest=proposeFormResponse.data,angular.forEach($scope.carRecalculateQuoteRequest,function(obj,i){var request={},header={};header.messageId=messageIDVar,header.campaignID=campaignIDVar,header.source=sourceOrigin,header.transactionName=getBikeQuoteResult,header.deviceId=deviceIdOrigin,request.header=header,request.body=obj,$http({method:"POST",url:getQuoteCalcLink,data:request}).success(function(callback,status){var carQuoteResponse=JSON.parse(callback);if($scope.responseRecalculateCodeList.push(carQuoteResponse.responseCode),carQuoteResponse.responseCode==$scope.p365Labels.responseCode.success1)null!=carQuoteResponse.data&&carQuoteResponse.data.quotes[0].carrierId==$scope.selectedProduct.carrierId&&carQuoteResponse.data.quotes[0].productId==$scope.selectedProduct.productId&&($scope.loading=!1,angular.copy($scope.selectedProductInputParam,$scope.selectedProductInputParamCopy),$scope.premiumDetails.selectedProductDetails=carQuoteResponse.data.quotes[0],$scope.selectedProduct=carQuoteResponse.data.quotes[0]),$scope.quoteCalcResponse.push(carQuoteResponse.data.quotes[0]);else if($scope.loading=!1,null!=carQuoteResponse.data&&carQuoteResponse.data.quotes[0].carrierId==$scope.selectedProduct.carrierId&&carQuoteResponse.data.quotes[0].productId==$scope.selectedProduct.productId){$scope.selectedProductInputParam=localStorageService.get("bikeQuoteInputParamaters"),$scope.selectedProductInputParam.vehicleInfo.registrationNumber="",$scope.vehicleInfo.registrationNumber="",$scope.proposerDetails.GSTIN="",$scope.selectedProductInputParam.vehicleInfo.registrationNumber&&delete $scope.selectedProductInputParam.vehicleInfo.registrationNumber,localStorageService.set("bikeQuoteInputParamaters",$scope.selectedProductInputParam);var screenCnfrmError=$scope.selectedProduct.insuranceCompany+""+$scope.p365Labels.errorMessage.GSTINNumberScreenConfirmErrorMsg;$rootScope.P365Alert($scope.p365Labels.common.p365prompt,screenCnfrmError,"Ok")}}).error(function(data,status){delete $scope.selectedProductInputParam.vehicleInfo.registrationNumber,$scope.responseRecalculateCodeList.push($scope.p365Labels.responseCode.systemError),$scope.loading=!1})});else{$scope.loading=!1,$scope.selectedProductInputParam=localStorageService.get("bikeQuoteInputParamaters"),$scope.vehicleInfo.registrationNumber="",$scope.proposerDetails.GSTIN="",$scope.selectedProductInputParam.vehicleInfo.registrationNumber&&delete $scope.selectedProductInputParam.vehicleInfo.registrationNumber,localStorageService.set("bikeQuoteInputParamaters",$scope.selectedProductInputParam);var screenCnfrmError=$scope.selectedProduct.insuranceCompany+""+$scope.p365Labels.errorMessage.GSTINNumberScreenConfirmErrorMsg;$rootScope.P365Alert($scope.p365Labels.common.p365prompt,screenCnfrmError,"Ok")}})):($scope.selectedProductInputParam=$scope.selectedProductInputParamCopy,$scope.selectedProductInputParam.GSTIN?$scope.proposerDetails.GSTIN=$scope.selectedProductInputParam.GSTIN:$scope.proposerDetails.GSTIN="")}))},$scope.validateRegistrationNumber=function(registrationNumber){"undefined"!=String(registrationNumber)&&((registrationNumber=registrationNumber.replace(/[^a-zA-Z0-9]/gi,"")).trim().match(/^[a-zA-Z]{0,3}[0-9]{1,4}$/)&&registrationNumber.trim().length<=7&&registrationNumber.trim().length>=2?($scope.regNumStatus=!1,$scope.vehicleDetailsForm.RegistrationNumber.$setValidity("RegistrationNumber",!0),$scope.productValidation.regNumberReQuoteCalc?$scope.calcQuoteOnRegistrationNumber(registrationNumber):$scope.productValidation.renewPolicyQuoteCalc&&"renew"==$scope.selectedProduct.policyType&&$scope.responseProduct.carrierId==$scope.insuranceDetails.insurerId&&(isPrevPolSameAsNew=!0,$scope.calcQuoteOnRegistrationNumber(registrationNumber))):($scope.regNumStatus=!0,$scope.vehicleDetailsForm.RegistrationNumber.$setValidity("RegistrationNumber",!1)),$scope.vehicleInfo.registrationNumber=registrationNumber.trim())}}),$scope.calcQuoteOnPolicyExpired=function(prevPoliExpiredData){$scope.modalPrevPolExpiredError=!1,$scope.selectedProductInputParam=localStorageService.get("bikeQuoteInputParamaters"),$scope.selectedProductInputParam.vehicleInfo.previousPolicyExpired=$scope.vehicleInfo.previousPolicyExpired,$scope.loading=!0,$scope.quote={},$scope.quote=$scope.selectedProductInputParam,$scope.calcQuotePrevPol()},$scope.calcQuotePrevPol=function(){RestAPI.invoke($scope.p365Labels.getRequest.quoteBike,$scope.quote).then(function(proposeFormResponse){if($scope.carRecalculateQuoteRequest=[],proposeFormResponse.responseCode==$scope.p365Labels.responseCode.success)$scope.responseRecalculateCodeList=[],localStorageService.set("BIKE_UNIQUE_QUOTE_ID",proposeFormResponse.QUOTE_ID),localStorageService.set("BIKE_UNIQUE_QUOTE_ID_ENCRYPTED",proposeFormResponse.encryptedQuoteId),$scope.carRecalculateQuoteRequest=proposeFormResponse.data,"undefined"!=String($scope.policyStartDate)&&($scope.policyStartDate=proposeFormResponse.policyDate.policyStartDate),"undefined"!=String($scope.policyEndDate)&&($scope.policyEndDate=proposeFormResponse.policyDate.policyEndDate),$scope.quoteCalcResponse=[],angular.forEach($scope.carRecalculateQuoteRequest,function(obj,i){var request={},header={};header.transactionName=$scope.p365Labels.transactionName.bikeQuoteResult,header.deviceId=deviceIdOrigin,request.header=header,request.body=obj,$http({method:"POST",url:getQuoteCalcLink,data:request}).success(function(callback,status){var bikeQuoteResponse=JSON.parse(callback);if($scope.responseRecalculateCodeList.push(bikeQuoteResponse.responseCode),bikeQuoteResponse.responseCode==$scope.p365Labels.responseCode.success)null!=bikeQuoteResponse.data&&bikeQuoteResponse.data.quotes[0].carrierId==$scope.responseProduct.carrierId&&bikeQuoteResponse.data.quotes[0].productId==$scope.responseProduct.productId&&($scope.loading=!1,$scope.premiumDetails.selectedProductDetails=bikeQuoteResponse.data.quotes[0],$scope.selectedProduct=bikeQuoteResponse.data.quotes[0]),bikeQuoteResponse.data.quotes[0].id=bikeQuoteResponse.messageId,$scope.quoteCalcResponse.push(bikeQuoteResponse.data.quotes[0]);else if(null!=bikeQuoteResponse.data&&bikeQuoteResponse.data.quotes[0].carrierId==$scope.responseProduct.carrierId&&bikeQuoteResponse.data.quotes[0].productId==$scope.responseProduct.productId){$scope.loading=!1,$scope.proposerDetails.communicationAddress.comPincode="";var screenCnfrmError=$scope.selectedProduct.insuranceCompany+" does not provide Insurance for  the owner. Please change the input or select any other insurer from the quote screen";$rootScope.P365Alert("Policies365",screenCnfrmError,"Ok")}}).error(function(data,status){$scope.responseRecalculateCodeList.push($scope.p365Labels.responseCode.systemError),$scope.loading=!1})});else{$scope.loading=!1,$scope.proposerDetails.communicationAddress.comPincode="";var screenCnfrmError=$scope.selectedProduct.insuranceCompany+" does not provide Insurance for the selected  owner. Please change the input or select any other insurer from the quote screen";$rootScope.P365Alert("Policies365",screenCnfrmError,"Ok")}})},$scope.backToResultScreen=function(){if($rootScope.baseEnvEnabled&&!$rootScope.wordPressEnabled)$rootScope.mainTabsMenu[0].active=!0,$rootScope.mainTabsMenu[1].active=!1,$scope.bikeProposeFormDetails.UNIQUE_QUOTE_ID_ENCRYPTED?$location.path("/sharefromAPI").search({docId:$scope.bikeProposeFormDetails.UNIQUE_QUOTE_ID_ENCRYPTED,LOB:$scope.p365Labels.businessLineType.bike}):$location.path("/sharefromAPI").search({docId:$scope.bikeProposeFormDetails.QUOTE_ID,LOB:$scope.p365Labels.businessLineType.bike});else if($scope.bikeProposeFormDetails.UNIQUE_QUOTE_ID_ENCRYPTED){var shareURL=shareQuoteLink+$scope.bikeProposeFormDetails.UNIQUE_QUOTE_ID_ENCRYPTED;$window.location.href=shareURL}else{shareURL=shareQuoteLink+$scope.bikeProposeFormDetails.QUOTE_ID;$window.location.href=shareURL}}})}]);